    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../TIMBA/DMI/aid/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
#include "TableFormat.h"
DMI::BObj * __construct_VisCubeTableFormat (int n) { return n>0 ? new VisCube::TableFormat [n] : new VisCube::TableFormat; }
#include "ColumnarTableTile.h"
DMI::BObj * __construct_VisCubeColumnarTableTile (int n) { return n>0 ? new VisCube::ColumnarTableTile [n] : new VisCube::ColumnarTableTile; }
#include "VTile.h"
DMI::BObj * __construct_VisCubeVTile (int n) { return n>0 ? new VisCube::VTile [n] : new VisCube::VTile; }
#include "VCube.h"
DMI::BObj * __construct_VisCubeVCube (int n) { return n>0 ? new VisCube::VCube [n] : new VisCube::VCube; }
#include "VCubeSet.h"
DMI::BObj * __construct_VisCubeVCubeSet (int n) { return n>0 ? new VisCube::VCubeSet [n] : new VisCube::VCubeSet; }
    using namespace DMI;
  
    int aidRegistry_VisCube ()
    {
      static int res = 

        AtomicID::registerId(-1324,"uvdata")+
        AtomicID::registerId(-1303,"uvset")+
        AtomicID::registerId(-1307,"row")+
        AtomicID::registerId(-1313,"raw")+
        AtomicID::registerId(-1301,"sorted")+
        AtomicID::registerId(-1260,"unsorted")+
        AtomicID::registerId(-1077,"time")+
        AtomicID::registerId(-1269,"timeslot")+
        AtomicID::registerId(-1322,"channel")+
        AtomicID::registerId(-1110,"num")+
        AtomicID::registerId(-1050,"control")+
        AtomicID::registerId(-1289,"ms")+
        AtomicID::registerId(-1314,"integrate")+
        AtomicID::registerId(-1060,"flag")+
        AtomicID::registerId(-1308,"exposure")+
        AtomicID::registerId(-1275,"receptor")+
        AtomicID::registerId(-1265,"antenna")+
        AtomicID::registerId(-1279,"ifr")+
        AtomicID::registerId(-1323,"spw")+
        AtomicID::registerId(-1319,"field")+
        AtomicID::registerId(-1234,"uvw")+
        AtomicID::registerId(-1248,"data")+
        AtomicID::registerId(-1092,"integrated")+
        AtomicID::registerId(-1286,"point")+
        AtomicID::registerId(-1276,"source")+
        AtomicID::registerId(-1298,"segment")+
        AtomicID::registerId(-1267,"corr")+
        AtomicID::registerId(-1121,"name")+
        AtomicID::registerId(-1277,"header")+
        AtomicID::registerId(-1266,"footer")+
        AtomicID::registerId(-1288,"patch")+
        AtomicID::registerId(-1193,"xx")+
        AtomicID::registerId(-1197,"yy")+
        AtomicID::registerId(-1194,"xy")+
        AtomicID::registerId(-1196,"yx")+
        AtomicID::registerId(-1317,"chunk")+
        AtomicID::registerId(-1259,"indexing")+
        AtomicID::registerId(-1055,"index")+
        AtomicID::registerId(-1283,"subtable")+
        AtomicID::registerId(-1287,"type")+
        AtomicID::registerId(-1294,"station")+
        AtomicID::registerId(-1318,"mount")+
        AtomicID::registerId(-1278,"pos")+
        AtomicID::registerId(-1135,"offset")+
        AtomicID::registerId(-1285,"dish")+
        AtomicID::registerId(-1264,"diameter")+
        AtomicID::registerId(-1290,"feed")+
        AtomicID::registerId(-1304,"interval")+
        AtomicID::registerId(-1306,"polarization")+
        AtomicID::registerId(-1262,"response")+
        AtomicID::registerId(-1329,"angle")+
        AtomicID::registerId(-1327,"ref")+
        AtomicID::registerId(-1047,"freq")+
        AtomicID::registerId(-1258,"width")+
        AtomicID::registerId(-1280,"bandwidth")+
        AtomicID::registerId(-1320,"effective")+
        AtomicID::registerId(-1112,"resolution")+
        AtomicID::registerId(-1273,"total")+
        AtomicID::registerId(-1271,"net")+
        AtomicID::registerId(-1263,"sideband")+
        AtomicID::registerId(-1268,"if")+
        AtomicID::registerId(-1321,"conv")+
        AtomicID::registerId(-1300,"chain")+
        AtomicID::registerId(-1036,"group")+
        AtomicID::registerId(-1305,"desc")+
        AtomicID::registerId(-1093,"code")+
        AtomicID::registerId(-1315,"poly")+
        AtomicID::registerId(-1312,"delay")+
        AtomicID::registerId(-1296,"dir")+
        AtomicID::registerId(-1292,"phase")+
        AtomicID::registerId(-1309,"pointing")+
        AtomicID::registerId(-1328,"lines")+
        AtomicID::registerId(-1295,"calibration")+
        AtomicID::registerId(-1316,"proper")+
        AtomicID::registerId(-1274,"motion")+
        AtomicID::registerId(-1297,"sigma")+
        AtomicID::registerId(-1129,"weight")+
        AtomicID::registerId(-1054,"origin")+
        AtomicID::registerId(-1270,"target")+
        AtomicID::registerId(-1311,"tracking")+
        AtomicID::registerId(-1310,"beam")+
        AtomicID::registerId(-1326,"product")+
        AtomicID::registerId(-1325,"meas")+
        AtomicID::registerId(-1261,"centroid")+
        AtomicID::registerId(-1293,"aipspp")+
        AtomicID::registerId(-1284,"ignore")+
        AtomicID::registerId(-1299,"vdsid")+
        AtomicID::registerId(-1302,"viscubetableformat")+
        TypeInfoReg::addToRegistry(-1302,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1302,__construct_VisCubeTableFormat)+
        AtomicID::registerId(-1281,"viscubecolumnartabletile")+
        TypeInfoReg::addToRegistry(-1281,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1281,__construct_VisCubeColumnarTableTile)+
        AtomicID::registerId(-1282,"viscubevtile")+
        TypeInfoReg::addToRegistry(-1282,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1282,__construct_VisCubeVTile)+
        AtomicID::registerId(-1291,"viscubevcube")+
        TypeInfoReg::addToRegistry(-1291,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1291,__construct_VisCubeVCube)+
        AtomicID::registerId(-1272,"viscubevcubeset")+
        TypeInfoReg::addToRegistry(-1272,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1272,__construct_VisCubeVCubeSet)+
    0;
    return res;
  }
  
  int __dum_call_registries_for_VisCube = aidRegistry_VisCube();

