    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../TIMBA/DMI/aid/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
#include "Sink.h"
DMI::BObj * __construct_MeqSink (int n) { return n>0 ? new Meq::Sink [n] : new Meq::Sink; }
#include "Spigot.h"
DMI::BObj * __construct_MeqSpigot (int n) { return n>0 ? new Meq::Spigot [n] : new Meq::Spigot; }
    using namespace DMI;
  
    int aidRegistry_MeqServer ()
    {
      static int res = 

        AtomicID::registerId(-1153,"node")+
        AtomicID::registerId(-1121,"name")+
        AtomicID::registerId(-1035,"nodeindex")+
        AtomicID::registerId(-1401,"meqserver")+
        AtomicID::registerId(-1087,"create")+
        AtomicID::registerId(-1125,"delete")+
        AtomicID::registerId(-1422,"get")+
        AtomicID::registerId(-1086,"set")+
        AtomicID::registerId(-1059,"state")+
        AtomicID::registerId(-1039,"request")+
        AtomicID::registerId(-1037,"resolve")+
        AtomicID::registerId(-1132,"child")+
        AtomicID::registerId(-1101,"children")+
        AtomicID::registerId(-1043,"list")+
        AtomicID::registerId(-1351,"app")+
        AtomicID::registerId(-1137,"command")+
        AtomicID::registerId(-1405,"args")+
        AtomicID::registerId(-1144,"result")+
        AtomicID::registerId(-1248,"data")+
        AtomicID::registerId(-1415,"processing")+
        AtomicID::registerId(-1350,"error")+
        AtomicID::registerId(-1115,"message")+
        AtomicID::registerId(-1093,"code")+
        AtomicID::registerId(-1411,"execute")+
        AtomicID::registerId(-1146,"clear")+
        AtomicID::registerId(-1104,"cache")+
        AtomicID::registerId(-1124,"save")+
        AtomicID::registerId(-1413,"load")+
        AtomicID::registerId(-1407,"forest")+
        AtomicID::registerId(-1424,"recursive")+
        AtomicID::registerId(-1406,"publish")+
        AtomicID::registerId(-1089,"results")+
        AtomicID::registerId(-1403,"enable")+
        AtomicID::registerId(-1417,"disable")+
        AtomicID::registerId(-1349,"event")+
        AtomicID::registerId(-1083,"id")+
        AtomicID::registerId(-1404,"silent")+
        AtomicID::registerId(-1423,"idle")+
        AtomicID::registerId(-1387,"stream")+
        AtomicID::registerId(-1402,"debug")+
        AtomicID::registerId(-1053,"breakpoint")+
        AtomicID::registerId(-1102,"single")+
        AtomicID::registerId(-1105,"shot")+
        AtomicID::registerId(-1410,"step")+
        AtomicID::registerId(-1414,"continue")+
        AtomicID::registerId(-1397,"until")+
        AtomicID::registerId(-1334,"stop")+
        AtomicID::registerId(-1426,"level")+
        AtomicID::registerId(-1141,"status")+
        AtomicID::registerId(-1425,"stack")+
        AtomicID::registerId(-1398,"running")+
        AtomicID::registerId(-1294,"station")+
        AtomicID::registerId(-1055,"index")+
        AtomicID::registerId(-1337,"tile")+
        AtomicID::registerId(-1389,"format")+
        AtomicID::registerId(-1408,"vishandlernode")+
        AtomicID::registerId(-1110,"num")+
        AtomicID::registerId(-1265,"antenna")+
        AtomicID::registerId(-1354,"input")+
        AtomicID::registerId(-1362,"output")+
        AtomicID::registerId(-1416,"col")+
        AtomicID::registerId(-1267,"corr")+
        AtomicID::registerId(-1420,"next")+
        AtomicID::registerId(-1419,"read")+
        AtomicID::registerId(-1060,"flag")+
        AtomicID::registerId(-1158,"flags")+
        AtomicID::registerId(-1130,"mask")+
        AtomicID::registerId(-1307,"row")+
        AtomicID::registerId(-1412,"mandate")+
        AtomicID::registerId(-1418,"regular")+
        AtomicID::registerId(-1076,"grid")+
        AtomicID::registerId(-1234,"uvw")+
        AtomicID::registerId(-1036,"group")+
        AtomicID::registerId(-1421,"sink")+
        AtomicID::registerId(-1399,"meqsink")+
        TypeInfoReg::addToRegistry(-1399,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1399,__construct_MeqSink)+
        AtomicID::registerId(-1396,"spigot")+
        AtomicID::registerId(-1400,"queue")+
        AtomicID::registerId(-1409,"meqspigot")+
        TypeInfoReg::addToRegistry(-1409,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1409,__construct_MeqSpigot)+
    0;
    return res;
  }
  
  int __dum_call_registries_for_MeqServer = aidRegistry_MeqServer();

