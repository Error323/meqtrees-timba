(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I2
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I87
sg17
I92
sg21
I89
sg38
I88
sg25
I91
sg44
I90
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-21 19:29'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-21 19:29'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-21 19:29'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-21 19:29'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'1'
p116
S'.modify( tdeg_Breal ): 3  ->  2'
p117
sS'0'
p118
S'.modify( tdeg_Breal ): 0  ->  3'
p119
ssS'order'
p120
(lp121
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p122
sg14
S'@@stations'
p123
sS'./MG_JEN_Joneset.DJones_WSRT()'
p124
(dp125
S'fdeg_dang'
p126
I1
sS'c00_dang'
p127
F0.0
sg12
I00
sg1
S'@@polrep'
p128
sS'stddev_dell'
p129
F0.0
sg14
S'@@stations'
p130
sS'fdeg_dell'
p131
S'@fdeg_dang'
p132
sS'coupled_XY_dell'
p133
I01
sS'stddev_dang'
p134
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p135
sg7
S'@@parmtable'
p136
sS'c00_dell'
p137
F0.0
sg26
(dp138
g28
g124
sg29
(dp139
g126
S'degree of freq polynomial'
p140
sg127
S'default c00 funklet value'
p141
sg12
g31
sg1
g32
sg129
S'scatter in default c00 funklet values'
p142
sg14
g33
sg131
g140
sg133
S'if True, Xdell = -Ydell per station'
p143
sg134
g142
sg22
g37
sg23
g39
sg7
g43
sg137
g141
sS'tdeg_dell'
p144
S'degree of time polynomial'
p145
sS'coupled_XY_dang'
p146
S'if True, Xdang = Ydang per station'
p147
sS'subtile_size_dang'
p148
S'sub-tile size (None=entire tile)'
p149
sS'subtile_size_dell'
p150
g149
sS'tdeg_dang'
p151
g145
sS'c00_PZD'
p152
g141
ssg46
g47
sg48
S'MG_JEN_Joneset'
p153
sg50
(dp154
g126
I127
sg131
I128
sg133
I126
sg144
I130
sg146
I125
sg148
I131
sg150
I132
sg151
I129
ssg52
(dp155
g127
I01
sg12
I01
sg1
I01
sg129
I01
sg14
I01
sg137
I01
sg134
I01
sg22
I01
sg23
I01
sg7
I01
sg152
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-21 19:29'
p156
sg56
g57
sg58
(dp157
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p158
sg62
(dp159
g133
I00
sg146
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-21 19:29'
p160
sg66
(dp161
g126
(lp162
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p163
asg127
(lp164
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p165
asg12
(lp166
I01
aI00
aS'@@unsolvable'
p167
asg1
(lp168
g2
ag71
ag128
asg129
(lp169
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p170
asg14
(lp171
(lp172
I0
aag130
asg131
(lp173
I0
aI1
aI2
aI3
ag132
aS'@@fdeg_dell'
p174
asg133
(lp175
I01
aI00
aS'@@coupled_XY_dell'
p176
asg134
(lp177
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p178
asg22
(lp179
F0.0
aS'@@ft_coeff_scale'
p180
asg23
(lp181
I00
ag135
asg7
(lp182
Nag136
asg137
(lp183
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p184
asg144
(lp185
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p186
aS'@@tdeg_dell'
p187
asg146
(lp188
I01
aI00
aS'@@coupled_XY_dang'
p189
asg148
(lp190
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p191
asg150
(lp192
S'@subtile_size_dang'
p193
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p194
asg151
(lp195
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p196
asg152
(lp197
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p198
assg101
Nsg102
S'2006-02-21 19:29'
p199
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p200
sg106
S'MG_JEN_JonesetDJones_WSRT'
p201
sg108
S'DJones_WSRT'
p202
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-21 19:29'
p203
sg112
I00
sg113
g199
sg114
(dp204
g118
S'.modify( tdeg_dang ): 0  ->  3'
p205
ssg120
(lp206
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag146
ag133
ag126
ag131
ag151
ag144
ag148
ag150
ag127
ag137
ag152
ag134
ag129
assg144
g186
sg146
I01
sg148
Nsg150
g193
sg151
I3
sg152
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p207
(dp208
g12
I00
sg1
S'@@polrep'
p209
sS'tdeg_RM'
p210
I3
sg14
S'@@stations'
p211
sg22
F0.0
sS'fdeg_RM'
p212
I0
sS'c00_RM'
p213
F0.0
sg26
(dp214
g28
g207
sg29
(dp215
g12
g31
sg1
g32
sg210
S'degree of time polynomial'
p216
sg14
g33
sg22
g37
sg212
S'degree of freq polynomial'
p217
sg213
S'default c00 funklet value'
p218
sS'subtile_size_RM'
p219
S'sub-tile size (None=entire tile)'
p220
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p221
sg50
(dp222
g212
I77
sg219
I79
sg210
I78
ssg52
(dp223
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg213
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-21 19:29'
p224
sg56
g57
sg58
(dp225
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p226
sg62
(dp227
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-21 19:29'
p228
sg66
(dp229
g12
(lp230
I01
aI00
aS'@@unsolvable'
p231
asg1
(lp232
g2
ag71
ag209
asg210
(lp233
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p234
asg14
(lp235
(lp236
I0
aag211
asg22
(lp237
F0.0
aS'@@ft_coeff_scale'
p238
asg212
(lp239
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p240
asg213
(lp241
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p242
asg219
(lp243
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p244
asg7
(lp245
NaS'@@parmtable'
p246
asg23
(lp247
I00
aS'@@uvplane_effect'
p248
assg101
Nsg102
S'2006-02-21 19:29'
p249
sg104
S'MG_JEN_Joneset::FJones()'
p250
sg106
S'MG_JEN_JonesetFJones'
p251
sg108
S'FJones'
p252
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-21 19:29'
p253
sg112
I00
sg113
g249
sg114
(dp254
g116
S'.modify( subtile_size_RM ): 1  ->  None'
p255
sg118
S'.modify( tdeg_RM ): 0  ->  3'
p256
ssg120
(lp257
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag212
ag210
ag219
ag213
assg7
g246
sg23
g248
sg219
Nssg23
S'@@uvplane_effect'
p258
sg7
S'@@parmtable'
p259
sg26
(dp260
g28
g8
sg29
(dp261
g23
g39
sg7
S'name of MeqParm table to be used'
p262
sg1
S'polarisation representation'
p263
sS'Jsequence'
p264
S'sequence of Jones matrices to be used'
p265
sg14
S'the (subset of) stations to be used'
p266
ssg46
g47
sg48
S'MG_JEN_Cohset'
p267
sg50
(dp268
g264
I53
ssg52
(dp269
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-21 19:29'
p270
sg56
S'25dec2005'
p271
sg58
(dp272
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p273
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-21 19:29'
p274
sg66
(dp275
g23
(lp276
I00
ag258
asg7
(lp277
Nag259
asg1
(lp278
g2
ag71
ag122
asg264
(lp279
(lp280
S'GJones'
p281
aa(lp282
S'BJones'
p283
aa(lp284
S'FJones'
p285
aa(lp286
S'KJones'
p287
aa(lp288
S'DJones_WSRT'
p289
aa(lp290
g281
ag289
aa(lp291
S'DJones'
p292
aa(lp293
aS'@@Jsequence'
p294
asg14
(lp295
(lp296
I0
aI1
aI2
aI3
aI4
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp299
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p300
ag123
assg101
Nsg102
S'2006-02-21 19:29'
p301
sg104
S'MG_JEN_Cohset::JJones()'
p302
sg106
S'MG_JEN_CohsetJJones'
p303
sg108
S'JJones'
p304
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-21 19:29'
p305
sg112
I00
sg113
g301
sg114
(dp306
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p307
sg118
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p308
sS'3'
p309
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p310
sS'2'
p311
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p312
sS'5'
p313
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p314
sS'4'
p315
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones()'
p316
sS'6'
p317
S".modify( Jsequence ): []  ->  ['GJones', 'BJones']"
p318
ssg120
(lp319
g26
ag14
ag7
ag1
ag23
ag264
aS'./MG_JEN_Joneset.GJones()'
p320
ag207
ag10
aS'./MG_JEN_Joneset.KJones()'
p321
aS'./MG_JEN_Joneset.DJones()'
p322
ag124
assg321
(dp323
g12
I00
sg1
S'@@polrep'
p324
sg14
S'@@stations'
p325
sg22
F0.0
sg23
S'@@uvplane_effect'
p326
sg7
S'@@parmtable'
p327
sg26
(dp328
g28
g321
sg29
(dp329
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p330
sg50
(dp331
sg52
(dp332
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-21 19:29'
p333
sg56
S'12dec2005'
p334
sg58
(dp335
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p336
sg62
(dp337
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-21 19:29'
p338
sg66
(dp339
g12
(lp340
I01
aI00
aS'@@unsolvable'
p341
asg1
(lp342
g2
ag71
ag324
asg14
(lp343
(lp344
I0
aag325
asg22
(lp345
F0.0
aS'@@ft_coeff_scale'
p346
asg23
(lp347
I00
ag326
asg7
(lp348
Nag327
assg101
Nsg102
S'2006-02-21 19:29'
p349
sg104
S'MG_JEN_Joneset::KJones()'
p350
sg106
S'MG_JEN_JonesetKJones'
p351
sg108
S'KJones'
p352
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-21 19:29'
p353
sg112
I00
sg113
g349
sg120
(lp354
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg320
(dp355
g12
I00
sg1
S'@@polrep'
p356
sS'fdeg_Ggain'
p357
I0
sS'tdeg_Gphase'
p358
S'@tdeg_Ggain'
p359
sS'stddev_Ggain'
p360
F0.0
sS'c00_Gphase'
p361
F0.0
sg22
F0.0
sg14
S'@@stations'
p362
sS'tdeg_Ggain'
p363
I3
sS'fdeg_Gphase'
p364
S'@fdeg_Ggain'
p365
sg7
S'@@parmtable'
p366
sg26
(dp367
g28
g320
sg29
(dp368
g12
g31
sg1
g32
sg14
g33
sg361
S'default c00 funklet value'
p369
sg357
S'degree of freq polynomial'
p370
sg358
S'degree of time polynomial'
p371
sg22
g37
sg363
g371
sg364
g370
sg7
g43
sg360
S'scatter in default c00 funklet values'
p372
sS'subtile_size_Gphase'
p373
S'sub-tile size (None=entire tile)'
p374
sS'c00_Ggain'
p375
g369
sS'stddev_Gphase'
p376
g372
sS'Gpolar'
p377
S'if True, use MeqPolar, otherwise MeqToComplex'
p378
sS'subtile_size_Ggain'
p379
g374
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p380
sg50
(dp381
g357
I61
sg379
I65
sg358
I64
sg363
I63
sg364
I62
sg373
I66
sg377
I60
ssg52
(dp382
g12
I01
sg1
I01
sg14
I01
sg360
I01
sg361
I01
sg22
I01
sg23
I01
sg7
I01
sg375
I01
sg376
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-21 19:29'
p383
sg56
S'15dec2005'
p384
sg58
(dp385
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p386
sg62
(dp387
g12
I00
sg377
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-21 19:29'
p388
sg66
(dp389
g12
(lp390
I01
aI00
aS'@@unsolvable'
p391
asg1
(lp392
g2
ag71
ag356
asg14
(lp393
(lp394
I0
aag362
asg361
(lp395
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p396
asg357
(lp397
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p398
asg358
(lp399
I0
aI1
aI2
aI3
ag359
aS'@@tdeg_Gphase'
p400
asg22
(lp401
F0.0
aS'@@ft_coeff_scale'
p402
asg363
(lp403
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p404
asg364
(lp405
I0
aI1
aI2
aI3
ag365
aS'@@fdeg_Gphase'
p406
asg7
(lp407
Nag366
asg360
(lp408
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p409
asg373
(lp410
S'@subtile_size_Ggain'
p411
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p412
asg375
(lp413
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p414
asg376
(lp415
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p416
asg377
(lp417
I01
aI00
aS'@@Gpolar'
p418
asg379
(lp419
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p420
asg23
(lp421
I00
aS'@@uvplane_effect'
p422
assg101
Nsg102
S'2006-02-21 19:29'
p423
sg104
S'MG_JEN_Joneset::GJones()'
p424
sg106
S'MG_JEN_JonesetGJones'
p425
sg108
S'GJones'
p426
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-21 19:29'
p427
sg112
I00
sg113
g423
sg114
(dp428
g116
S'.modify( tdeg_Ggain ): 0  ->  3'
p429
sg118
S'.modify( subtile_size_Ggain ): 1  ->  None'
p430
ssg120
(lp431
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag377
ag357
ag364
ag363
ag358
ag379
ag373
ag375
ag361
ag360
ag376
assg373
g411
sg375
F1.0
sg376
F0.0
sg377
I00
sg379
Nsg23
g422
ssg322
(dp432
S'subtile_size_Dreal'
p433
Nsg12
I00
sg1
S'@@polrep'
p434
sg14
S'@@stations'
p435
sS'c00_Dimag'
p436
F0.0
sS'stddev_Dimag'
p437
F0.0
sS'tdeg_Dreal'
p438
I0
sS'fdeg_Dreal'
p439
I5
sS'stddev_Dreal'
p440
F0.0
sS'subtile_size_Dimag'
p441
S'@subtile_size_Dreal'
p442
sg23
S'@@uvplane_effect'
p443
sg7
S'@@parmtable'
p444
sg26
(dp445
g28
g322
sg29
(dp446
g433
S'sub-tile size (None=entire tile)'
p447
sg12
g31
sg1
g32
sg14
g33
sg436
S'default c00 funklet value'
p448
sg437
S'scatter in default c00 funklet values'
p449
sg438
S'degree of time polynomial'
p450
sg439
S'degree of freq polynomial'
p451
sg440
g449
sg441
g447
sg23
g39
sg7
g43
sS'c00_Dreal'
p452
g448
sS'fdeg_Dimag'
p453
g451
sg22
g37
sS'tdeg_Dimag'
p454
g450
ssg46
g47
sg48
S'MG_JEN_Joneset'
p455
sg50
(dp456
g433
I113
sg441
I114
sg438
I111
sg454
I112
sg439
I109
sg453
I110
ssg52
(dp457
g12
I01
sg1
I01
sg14
I01
sg436
I01
sg22
I01
sg440
I01
sg7
I01
sg452
I01
sg437
I01
sg23
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-21 19:29'
p458
sg56
S'14feb2006'
p459
sg58
(dp460
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Djones(station,source) matrix elements:\n    - D_11 = (Dreal_11,Dimag_11)\n    - D_12 = (Dreal_12,Dimag_12)\n    - D_21 = (Dreal_21,Dimag_21)\n    - D_22 = (Dreal_22,Dimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p461
sg62
(dp462
g12
I00
ssg64
S'MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-21 19:29'
p463
sg66
(dp464
g433
(lp465
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dreal'
p466
asg12
(lp467
I01
aI00
aS'@@unsolvable'
p468
asg1
(lp469
g2
ag71
ag434
asg14
(lp470
(lp471
I0
aag435
asg436
(lp472
F0.0
aF0.10000000000000001
aS'@@c00_Dimag'
p473
asg437
(lp474
F0.0
aF0.10000000000000001
aS'@@stddev_Dimag'
p475
asg438
(lp476
I0
aI1
aI2
aI3
aS'@@tdeg_Dreal'
p477
asg439
(lp478
I3
aI4
aI5
aS'@@fdeg_Dreal'
p479
asg440
(lp480
F0.0
aF0.10000000000000001
aS'@@stddev_Dreal'
p481
asg441
(lp482
g442
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dimag'
p483
asg23
(lp484
I00
ag443
asg7
(lp485
Nag444
asg452
(lp486
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Dreal'
p487
asg453
(lp488
I0
aI1
aI2
aI3
aS'@fdeg_Dreal'
p489
aS'@@fdeg_Dimag'
p490
asg22
(lp491
F0.0
aS'@@ft_coeff_scale'
p492
asg454
(lp493
I0
aI1
aI2
aI3
aS'@tdeg_Dreal'
p494
aS'@@tdeg_Dimag'
p495
assg101
Nsg102
S'2006-02-21 19:29'
p496
sg104
S'MG_JEN_Joneset::DJones()'
p497
sg106
S'MG_JEN_JonesetDJones'
p498
sg108
S'DJones'
p499
sg110
S'** Specific description of: MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-21 19:29'
p500
sg112
I00
sg113
g496
sg120
(lp501
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag439
ag453
ag438
ag454
ag433
ag441
ag452
ag436
ag440
ag437
assg452
F1.0
sg453
g489
sg22
F0.0
sg454
g494
ssg264
(lp502
g281
ag283
assg26
(dp503
g28
S'./MG_JEN_cps.'
p504
sg29
(dp505
g1
g263
sS'master_reqseq'
p506
S'if True, use a master reqseq for solver(s)'
p507
sg14
g266
sS'insert_flagger'
p508
S'if True, insert a flagger'
p509
sS'redun'
p510
S'if True, redundant spacing calibration'
p511
sS'insert_solver'
p512
S'if True, insert a solver'
p513
sg5
S'name of the (AIPS++) Measurement Set'
p514
sS'chain_solvers'
p515
S'if True, chain the solvers (recommended)'
p516
sS'num_cells'
p517
S'if defined, ModRes argument [ntime,nfreq]'
p518
sg7
g262
sS'tile_size'
p519
S'(inputrec) size (in time-slots) of the input data-tile'
p520
sg23
g39
ssS'reference'
p521
I00
sg46
g47
sg48
S'MG_JEN_cps'
p522
sg50
(dp523
g1
I8
sg14
I6
sg508
I2
sg510
I12
sg512
I1
sg5
I4
sg7
I7
sg3
I0
sg517
I13
sg519
I5
sg23
I9
ssg52
(dp524
g1
I00
sg506
I01
sg14
I00
sS'last_changed'
p525
I01
sg510
I00
sg23
I00
sg515
I01
sg517
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p526
sg56
g384
sg60
g526
sg62
(dp527
g525
I00
sg508
I00
sg506
I00
sg512
I00
sg510
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p528
sg66
(dp529
g1
(lp530
g2
ag71
aS'@@polrep'
p531
asg506
(lp532
I01
aI00
aS'@@master_reqseq'
p533
asg14
(lp534
(lp535
I0
aI1
aI2
aI3
aI4
aa(lp536
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp537
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp538
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p539
asg508
(lp540
I01
aI00
aS'@@insert_flagger'
p541
asg525
(lp542
S'd30jan2006'
p543
aS'@@last_changed'
p544
asg512
(lp545
I01
aI00
aS'@@insert_solver'
p546
asg510
(lp547
I01
aI00
aS'@@redun'
p548
asg5
(lp549
g6
aS'@@ms_name'
p550
asg515
(lp551
I01
aS'@@chain_solvers'
p552
asg517
(lp553
Na(lp554
I5
aI2
aa(lp555
I2
aI2
aa(lp556
I3
aI3
aaS'@@num_cells'
p557
asg7
(lp558
NaS'@@parmtable'
p559
asg519
(lp560
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p561
asg23
(lp562
I00
aS'@@uvplane_effect'
p563
assg102
S'2006-02-21 19:29'
p564
sS'HISTORY'
p565
(dp566
g116
S'2006-02-21 19:29: Derived from: MG_JEN_cps_GBJones.inarg'
p567
sg118
S'2006-02-21 19:29: Derived from: MG_JEN_cps.inarg'
p568
ssg104
g4
sS'save_file'
p569
S'MG_JEN_cps_GBJones_protected.inarg'
p570
sS'file_filter'
p571
S'MG_JEN_cps*.inarg'
p572
sg108
S''
p573
sg110
S'<specific>'
p574
sS'browse'
p575
(dp576
g5
S'*.MS'
p577
ssg112
I01
sg113
g564
sg114
(dp578
S'11'
p579
S".modify(): found ={'fdeg_Ggain': 1, 'fdeg_Breal': 1, 'tdeg_Breal': 1, 'tdeg_Ggain': 1, 'solvegroup': 1, 'Jsequence': 1}"
p580
sS'10'
p581
S'.modify(): stripped off: _JEN_inarg_option'
p582
sg116
S'.modify( uvplane_effect ): False  ->  True'
p583
sg118
S'.modify(): stripped off: _JEN_inarg_option'
p584
sg309
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p585
sg311
S".modify(): found ={'uvplane_effect': 1}"
p586
sg313
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p587
sg315
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p588
sS'7'
p589
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p590
sg317
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p591
sS'9'
p592
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p593
sS'8'
p594
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p595
ssg120
(lp596
g26
ag3
ag512
ag508
ag525
ag5
ag519
ag14
ag7
ag1
ag23
ag515
ag506
ag510
ag517
aS'./MG_JEN_exec.stream_control()'
p597
aS'./MG_JEN_Cohset.make_spigots()'
p598
aS'./MG_JEN_Sixpack.newstar_source()'
p599
ag8
aS'./MG_JEN_Cohset.predict()'
p600
aS'./MG_JEN_Cohset.insert_solver()'
p601
aS'./MG_JEN_Cohset.make_sinks()'
p602
assg602
(dp603
S'fullDomainMux'
p604
I01
sS'output_col'
p605
S'PREDICT'
p606
sS'visu'
p607
I01
sS'flag'
p608
I00
sg26
(dp609
g104
S'MG_JEN_Cohset::make_sinks()'
p610
sg28
g602
sg50
(dp611
g608
I165
sg607
I164
sg604
I166
sg605
I162
sS'visu_array_config'
p612
I163
ssg106
S'MG_JEN_Cohsetmake_sinks'
p613
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-21 19:29'
p614
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p615
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-21 19:29'
p616
sg108
S'make_sinks'
p617
sg66
(dp618
g608
(lp619
I01
aI00
aS'@@flag'
p620
asg612
(lp621
I01
aI00
aS'@@visu_array_config'
p622
asg605
(lp623
g606
aS'RESIDUALS'
p624
aS'DATA'
p625
aS'@@output_col'
p626
asg604
(lp627
I01
aI00
aS'@@fullDomainMux'
p628
asg607
(lp629
I01
aI00
aS'@@visu'
p630
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-21 19:29'
p631
sg101
Nsg56
g271
sg113
S'2006-02-21 19:29'
p632
sg48
S'MG_JEN_Cohset'
p633
sg62
(dp634
g608
I00
sg612
I00
sg604
I00
sg607
I00
ssg112
I00
sg102
g632
sg120
(lp635
g26
ag605
ag612
ag607
ag608
ag604
asg29
(dp636
g608
S'if True, insert a flagger for the output uv-data'
p637
sg612
S'if True, visualise the array config (from MS)'
p638
sg605
S'name of the logical (VisTile) output column'
p639
sg604
S'if True, attach an extra VisDataMux'
p640
sg607
S'if True, visualise the output uv-data'
p641
sssg612
I01
ssg519
I10
sg598
(dp642
S'MS_corr_index'
p643
(lp644
I0
aI1
aI2
aI3
asg608
I00
sg26
(dp645
g104
S'MG_JEN_Cohset::make_spigots()'
p646
sg28
g598
sg50
(dp647
g608
I25
sg643
I23
sg607
I24
ssg52
(dp648
S'input_col'
p649
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p650
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-21 19:29'
p651
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p652
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-21 19:29'
p653
sg108
S'make_spigots'
p654
sg66
(dp655
g608
(lp656
I01
aI00
aS'@@flag'
p657
asg643
(lp658
g644
a(lp659
I0
aI-1
aI-1
aI1
aa(lp660
I0
aI-1
aI-1
aI3
aaS'@@'
p661
aS'@@MS_corr_index'
p662
asg649
(lp663
g625
ag606
ag624
aS'@@input_col'
p664
asg607
(lp665
I01
aI00
aS'@@visu'
p666
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-21 19:29'
p667
sg101
Nsg56
g271
sg113
S'2006-02-21 19:29'
p668
sg48
S'MG_JEN_Cohset'
p669
sg62
(dp670
g608
I00
sg607
I00
ssg112
I00
sg102
g668
sg120
(lp671
g26
ag649
ag643
ag607
ag608
asg29
(dp672
g608
S'if True, insert a flagger for the input uv-data'
p673
sg643
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p674
sg649
S'name of the logical (VisTile) input column'
p675
sg607
S'if True, visualise the input uv-data'
p676
sssg649
g625
sg607
I01
ssg600
(dp677
g1
S'@@polrep'
p678
sg26
(dp679
g104
S'MG_JEN_Cohset::predict()'
p680
sg28
g600
sg50
(dp681
sg52
(dp682
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p683
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-21 19:29'
p684
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p685
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-21 19:29'
p686
sg108
S'predict'
p687
sg66
(dp688
g1
(lp689
g2
ag71
ag678
asg14
(lp690
(lp691
I0
aI1
aI2
aI3
aI4
aa(lp692
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp693
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp694
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p695
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-21 19:29'
p696
sg101
Nsg56
g271
sg113
S'2006-02-21 19:29'
p697
sg48
S'MG_JEN_Cohset'
p698
sg58
(dp699
g1
I00
sg14
I00
ssg112
I00
sg102
g697
sg120
(lp700
g26
ag14
ag1
asg29
(dp701
g1
g263
sg14
g266
sssg14
g695
ssg508
I00
sg525
g543
sg23
I01
sg517
Nsg599
(dp702
S'f0'
p703
F1000000.0
sS'major'
p704
F0.0
sg12
I00
sS'shape'
p705
S'point'
p706
sg7
NsS'Upct'
p707
NsS'I0'
p708
F1.0
sS'LSM'
p709
NsS'Vpct'
p710
NsS'dDec'
p711
F0.0
sS'pa'
p712
F0.0
sg26
(dp713
g28
g599
sg29
(dp714
g703
S'reference freq (Hz): I=I0 @ f=f0'
p715
sg704
S'major axis (arcsec)'
p716
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p717
sg705
S'source shape'
p718
sg7
S'name of the MeqParm table (AIPS++)'
p719
sg707
S'Stokes U (percentage of I)'
p720
sg708
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p721
sg709
S'(file)name of a Local Sky Model'
p722
sg710
S'Stokes V (percentage of I)'
p723
sg711
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p724
sg712
S'position angle (rad)'
p725
sS'RA'
p726
S'Right Ascension (rad, J2000)'
p727
sS'dRA'
p728
S'RA offset (arcsec): RA = RA0 + dRA'
p729
sS'RM'
p730
S'Intrinsic Rotation Measure (rad/m2)'
p731
sS'Dec0'
p732
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p733
sS'minor'
p734
S'minor axis (arcsec)'
p735
sS'Qpct'
p736
S'Stokes Q (percentage of I)'
p737
sS'punit'
p738
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p739
sS'RA0'
p740
S'If RA0 is a node, RA0+dRA overrides RA'
p741
sS'Dec'
p742
S'Declination (rad, J2000)'
p743
sS'fsr_trace'
p744
S'If True, attach to forest state record'
p745
sS'SI'
p746
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p747
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p748
sg50
(dp749
g742
I39
sg708
I31
sg709
I27
sg736
I32
sg738
I26
sg746
I36
sg7
I29
sg726
I38
sg730
I35
sg707
I33
sg710
I34
ssg52
(dp750
g703
I01
sg704
I01
sg12
I01
sS'name'
p751
I01
sg709
I00
sg744
I01
sg738
I00
sg711
I01
sg705
I01
sg712
I01
sg740
I01
sg728
I01
sg732
I01
sg734
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-21 19:29'
p752
sg56
S'10feb2006'
p753
sg575
(dp754
g709
S'*.lsm'
p755
ssg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p756
sg62
(dp757
g12
I00
sg744
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-21 19:29'
p758
sg66
(dp759
g703
(lp760
F1000000.0
aS'@@f0'
p761
asg704
(lp762
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p763
asg12
(lp764
I01
aI00
aS'@@unsolvable'
p765
asg705
(lp766
g706
aS'ell.gauss'
p767
aS'@@shape'
p768
asg7
(lp769
NaS'@@parmtable'
p770
asg707
(lp771
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p772
asg708
(lp773
F1.0
aF10.0
aS'@@I0'
p774
asg709
(lp775
NaS'@@LSM'
p776
asg710
(lp777
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p778
asg711
(lp779
F0.0
aS'@@dDec'
p780
asg712
(lp781
F0.0
aF1.0
aF-0.5
aS'@@pa'
p782
asg726
(lp783
F0.0
aF0.5
aF1.0
aS'@@RA'
p784
asg728
(lp785
F0.0
aS'@@dRA'
p786
asg730
(lp787
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p788
asg732
(lp789
NaS'@@Dec0'
p790
asg734
(lp791
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p792
asg736
(lp793
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p794
asg738
(lp795
S'unpol'
p796
aS'unpol2'
p797
aS'unpol10'
p798
aS'QUV'
p799
aS'QU'
p800
aS'Qonly'
p801
aS'Uonly'
p802
aS'Vonly'
p803
aS'3c147'
p804
aS'3c286'
p805
aS'3c48'
p806
aS'3c295'
p807
aS'RMtest'
p808
aS'SItest'
p809
aS'@@punit'
p810
asg740
(lp811
NaS'@@RA0'
p812
asg742
(lp813
F0.5
aF1.0
aS'@@Dec'
p814
asg751
(lp815
NaS'@@name'
p816
asg744
(lp817
I01
aI00
aS'@@fsr_trace'
p818
asg746
(lp819
NaF-0.69999999999999996
a(lp820
F0.44700000000000001
aF-0.184
aaS'@@SI'
p821
assg101
Nsg102
S'2006-02-21 19:29'
p822
sg104
S'MG_JEN_Sixpack::newstar_source()'
p823
sg106
S'MG_JEN_Sixpacknewstar_source'
p824
sg108
S'newstar_source'
p825
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-21 19:29'
p826
sS'callback'
p827
(dp828
g738
I01
ssg112
I00
sg113
g822
sg120
(lp829
g26
ag738
ag709
ag751
ag7
ag12
ag708
ag736
ag707
ag710
ag730
ag746
ag703
ag726
ag742
ag744
ag705
ag704
ag734
ag712
ag740
ag732
ag728
ag711
assg728
F0.0
sg730
Nsg732
Nsg734
F0.0
sg726
F0.0
sg736
Nsg738
g796
sg740
Nsg742
F1.0
sg751
Nsg744
I01
sg746
Nssg506
I00
sg14
g535
sg597
(dp830
S'channel_start_index'
p831
I10
sS'data_column_name'
p832
g625
sS'predict_column'
p833
S'CORRECTED_DATA'
p834
sg5
S'@@ms_name'
p835
sg26
(dp836
g28
g597
sg29
(dp837
g831
S'(inputrec.sel) index of first selected freq channel'
p838
sg832
S'(inputrec) MS input column'
p839
sg833
S'MS output column to be associated with the VisTile predict-column'
p840
sg5
g514
sg519
g520
sS'channel_increment'
p841
S'(inputrec.sel) take every nth channel (1=all)'
p842
sS'channel_end_index'
p843
S'(inputrec.sel) index of last selected freq channel'
p844
sS'write_flags'
p845
S'(outputrec) if True, write flags to MS'
p846
ssg46
g47
sg48
S'MG_JEN_exec'
p847
sg50
(dp848
g831
I17
sg832
I16
sg833
I21
sg845
I20
sg843
I18
sg841
I19
ssg52
(dp849
g5
I01
sg519
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-21 19:29'
p850
sg56
S'20jan2006'
p851
sg58
(dp852
g5
I00
sg519
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-21 19:29'
p853
sg62
(dp854
g845
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-21 19:29'
p855
sg66
(dp856
g831
(lp857
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p858
asg832
(lp859
g625
ag834
aS'@@data_column_name'
p860
asg833
(lp861
g625
ag834
aS'MODEL_DATA'
p862
aS'@@predict_column'
p863
asg5
(lp864
g6
ag835
asg519
(lp865
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p866
asg841
(lp867
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p868
asg843
(lp869
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p870
asg845
(lp871
I01
aI00
aS'@@write_flags'
p872
assg101
Nsg102
S'2006-02-21 19:29'
p873
sg104
S'MG_JEN_exec::stream_control()'
p874
sg106
S'MG_JEN_execstream_control'
p875
sg108
S'stream_control'
p876
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-21 19:29'
p877
sg575
(dp878
g5
g577
ssg112
I00
sg113
g873
sg120
(lp879
g26
ag5
ag519
ag832
ag831
ag843
ag841
ag845
ag833
assg519
g866
sg841
I1
sg843
I50
sg845
I00
ssg510
I00
sg512
I01
sg515
I01
sg601
(dp880
S'correct_after'
p881
I01
sg506
S'@@master_reqseq'
p882
sS'condeq_unop'
p883
Nsg607
I01
sg510
S'@@redun'
p884
sS'solver_subtree'
p885
NsS'subtract_after'
p886
I00
sg515
S'@@chain_solvers'
p887
sg26
(dp888
g28
g601
sg29
(dp889
g881
S'if True, correct measured with predicted.Joneset'
p890
sg506
g507
sg883
S'Optional unary operation on Condeq inputs'
p891
sg607
S'if True, include full visualisation'
p892
sg510
g511
sg885
S'solver subtree qualifier(s)'
p893
sg886
S'if True, subtract predicted from measured'
p894
sg515
g516
sS'flag_residuals'
p895
S'if True, flag the residuals'
p896
sg517
g518
ssg46
g47
sg48
S'MG_JEN_Cohset'
p897
sg50
(dp898
g886
I147
sg881
I148
sg883
I145
sg607
I146
ssg52
(dp899
g506
I01
sg510
I01
sg885
I01
sg515
I01
sg895
I01
sg517
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-21 19:29'
p900
sg56
g271
sg58
(dp901
g517
I00
sg515
I00
sg510
I00
sg506
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p902
sg62
(dp903
g881
I00
sg506
I00
sg607
I00
sg510
I00
sg886
I00
sg895
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-21 19:29'
p904
sg66
(dp905
g881
(lp906
I01
aI00
aS'@@correct_after'
p907
asg506
(lp908
I01
aI00
ag882
asg883
(lp909
NaS'Abs'
p910
aS'Arg'
p911
aS'@@condeq_unop'
p912
asg607
(lp913
I01
aI00
aS'@@visu'
p914
asg510
(lp915
I01
aI00
ag884
asg885
(lp916
NaS'@@solver_subtree'
p917
asg886
(lp918
I01
aI00
aS'@@subtract_after'
p919
asg515
(lp920
I01
ag887
asg895
(lp921
I01
aI00
aS'@@flag_residuals'
p922
asg517
(lp923
Na(lp924
I5
aI2
aa(lp925
I2
aI2
aa(lp926
I3
aI3
aaS'@@num_cells'
p927
assg101
Nsg102
S'2006-02-21 19:29'
p928
sg104
S'MG_JEN_Cohset::insert_solver()'
p929
sg106
S'MG_JEN_Cohsetinsert_solver'
p930
sg108
S'insert_solver'
p931
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-21 19:29'
p932
sg112
I00
sg113
g928
sg114
(dp933
g118
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p934
ssg120
(lp935
g26
ag885
ag510
ag517
ag515
ag506
ag883
ag607
ag886
ag881
ag895
aS'./MG_JEN_Cohset.solver_subtree()'
p936
assg517
g927
sg936
(dp937
S'rmin'
p938
Nsg607
I01
sS'epsilon'
p939
F0.01
sS'rmax'
p940
NsS'usesvd'
p941
I01
sS'debug_level'
p942
I10
sS'solvegroup'
p943
(lp944
g281
ag283
asg26
(dp945
g28
g936
sg29
(dp946
g938
S'if specified, only use baselines>=rmin'
p947
sg607
S'if True, include visualisation'
p948
sg939
S'iteration control criterion'
p949
sg940
S'if specified, only use baselines<=rmax'
p950
sg941
S'if True, use Singular Value Decomposition (SVD)'
p951
sg942
S'solver debug_level'
p952
sg943
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p953
sg517
g518
sS'history'
p954
S'if True, include history collection of metrics'
p955
sS'num_iter'
p956
S'max number of iterations'
p957
sS'condition'
p958
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p959
sS'colin_factor'
p960
S'colinearity factor'
p961
ssg46
g47
sg48
S'MG_JEN_Cohset'
p962
sg50
(dp963
g938
I152
sg607
I160
sg939
I156
sg940
I153
sg941
I158
sg943
I150
sg517
I154
sg954
I161
sg956
I155
sg958
I151
sg960
I157
ssg52
(dp964
g942
I01
sg517
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-21 19:29'
p965
sg56
S'20dec2005'
p966
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p967
sg62
(dp968
g941
I00
sg954
I00
sg607
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-21 19:29'
p969
sg66
(dp970
g938
(lp971
NaI100
aI200
aI500
aS'@@rmin'
p972
asg607
(lp973
I01
aI00
aS'@@visu'
p974
asg939
(lp975
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p976
asg940
(lp977
NaI500
aI1000
aI2000
aS'@@rmax'
p978
asg941
(lp979
I01
aI00
aS'@@usesvd'
p980
asg942
(lp981
I10
aS'@@debug_level'
p982
asg943
(lp983
(lp984
a(lp985
g281
aa(lp986
S'Ggain'
p987
aa(lp988
S'Gphase'
p989
aa(lp990
S'Gpol1'
p991
aa(lp992
S'Gpol2'
p993
aa(lp994
g281
aS'stokesI'
p995
aa(lp996
g995
aa(lp997
S'stokesIQU'
p998
aa(lp999
S'stokesIQUV'
p1000
aa(lp1001
g281
ag292
aa(lp1002
g292
aa(lp1003
S'dang'
p1004
aa(lp1005
S'dell'
p1006
aa(lp1007
S'Dreal'
p1008
aa(lp1009
S'Dimag'
p1010
aa(lp1011
g281
ag292
ag285
aa(lp1012
g285
aa(lp1013
g281
ag283
aa(lp1014
g283
aa(lp1015
S'Breal'
p1016
aa(lp1017
S'Bimag'
p1018
aa(lp1019
S'Bpol1'
p1020
aa(lp1021
S'Bpol2'
p1022
aaS'@@solvegroup'
p1023
asg517
(lp1024
Na(lp1025
I5
aI2
aa(lp1026
I2
aI2
aa(lp1027
I3
aI3
aaS'@@num_cells'
p1028
asg954
(lp1029
I01
aI00
aS'@@history'
p1030
asg956
(lp1031
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1032
asg958
(lp1033
NaS'Gphase_X_sum=0.0'
p1034
aS'Gphase_Y_sum=0.0'
p1035
a(lp1036
g1034
ag1035
aa(lp1037
S'Gphase_X_first=0.0'
p1038
aS'Gphase_Y_first=0.0'
p1039
aa(lp1040
S'Gphase_X_last=0.0'
p1041
aS'Gphase_Y_last=0.0'
p1042
aaS'dang_sum=0.0'
p1043
a(lp1044
S'Bimag_X_sum=0.0'
p1045
aS'Bimag_Y_sum=0.0'
p1046
aa(lp1047
S'Breal_X_product=1.0'
p1048
aS'Breal_Y_product=1.0'
p1049
aaS'@@condition'
p1050
asg960
(lp1051
F1e-08
aF0.0
aS'@@colin_factor'
p1052
assg101
Nsg102
S'2006-02-21 19:29'
p1053
sg104
S'MG_JEN_Cohset::solver_subtree()'
p1054
sg106
S'MG_JEN_Cohsetsolver_subtree'
p1055
sg108
S'solver_subtree'
p1056
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-21 19:29'
p1057
sg112
I00
sg113
g1053
sg114
(dp1058
g116
S'.modify( num_iter ): 20  ->  5'
p1059
sg118
S'.modify( epsilon ): 0.0001  ->  0.01'
p1060
sg311
S".modify( solvegroup ): []  ->  ['GJones', 'BJones']"
p1061
ssg120
(lp1062
g26
ag943
ag958
ag938
ag940
ag517
ag956
ag939
ag960
ag941
ag942
ag607
ag954
assg517
Nsg954
I01
sg956
I5
sg958
Nsg960
F1e-08
ssg895
I00
ss.