(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stations'
p7
S'@@stations'
p8
sg1
S'@@polrep'
p9
sS'_JEN_inarg_CTRL_record:'
p10
(dp11
S'target_definition'
p12
S'MG_JEN_Joneset::BJones()'
p13
sS'localscope'
p14
g5
sS'last_edited'
p15
S'2006-02-26 14:20'
p16
sS'hide'
p17
(dp18
S'@Jsequence'
p19
I01
sg1
I01
sS'stddev'
p20
I00
sg7
I01
ssS'barescope'
p21
S'MG_JEN_JonesetBJones'
p22
sS'generic'
p23
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p24
sS'target_dir'
p25
S'.'
p26
sS'oneliner'
p27
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p28
sS'target_function'
p29
S'BJones'
p30
sS'choice'
p31
(dp32
g19
(lp33
S'BJones'
p34
aS'@@@Jsequence'
p35
asg1
(lp36
g2
aS'circular'
p37
ag9
asg20
(lp38
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p39
asg7
(lp40
(lp41
I0
aag8
assS'specific'
p42
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p43
sS'qual'
p44
NsS'version'
p45
S'16dec2005'
p46
sS'datetime_defined'
p47
g16
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'mutable'
p50
(dp51
g1
I00
sg7
I00
ssS'protected'
p52
I00
sS'order'
p53
(lp54
g10
ag7
ag1
ag19
ag20
asS'help'
p55
(dp56
g19
S'list membership indication (used in JEN_inargGui)'
p57
sg1
S'polarisation representation'
p58
sg20
S'scatter in default c00 funklet values'
p59
sg7
S'list of station names/numbers'
p60
ssS'description'
p61
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p62
ssg20
F1.1000000000000001
sg19
g34
ssg1
S'@@polrep'
p63
sg7
S'@@stations'
p64
sS'./MG_JEN_Joneset.DJones_WSRT()'
p65
(dp66
g1
S'@@polrep'
p67
sg7
S'@@stations'
p68
sS'coupled_XY_Dell'
p69
I01
sg10
(dp70
g12
S'MG_JEN_Joneset::DJones_WSRT()'
p71
sg14
g65
sg15
S'2006-02-26 14:20'
p72
sg17
(dp73
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetDJones_WSRT'
p74
sg23
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p75
sg25
g26
sg27
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p76
sg29
S'DJones_WSRT'
p77
sg31
(dp78
g1
(lp79
g2
ag37
ag67
asg7
(lp80
(lp81
I0
aag68
asg69
(lp82
I01
aI00
aS'@@coupled_XY_Dell'
p83
asg20
(lp84
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p85
asS'coupled_XY_Dang'
p86
(lp87
I01
aI00
aS'@@coupled_XY_Dang'
p88
asg19
(lp89
S'DJones_WSRT'
p90
aS'@@@Jsequence'
p91
assg42
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p92
sg44
Nsg45
g46
sg47
g72
sg48
S'MG_JEN_Joneset'
p93
sS'editable'
p94
(dp95
g86
I00
sg69
I00
ssg50
(dp96
g1
I00
sg7
I00
ssg52
I00
sg53
(lp97
g10
ag7
ag1
ag19
ag86
ag69
ag20
asg55
(dp98
g1
g58
sg7
g60
sg69
S'if True, XDell = -YDell per station'
p99
sg20
g59
sg86
S'if True, XDang = YDang per station'
p100
sg19
g57
ssg61
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p101
ssg20
F1.1000000000000001
sg86
I01
sg19
g90
ssS'ft_coeff_scale'
p102
F0.0
sS'simul'
p103
S'@@simul'
p104
sS'uvplane_effect'
p105
S'@@uvplane_effect'
p106
sS'parmtable'
p107
S'@@parmtable'
p108
sg10
(dp109
g14
g3
sg55
(dp110
g1
g58
sg7
g60
sg102
S'scale of polc_ft non-c00 coeff'
p111
sg103
S'if True, use simulated (Leafset) Jones parameter values'
p112
sg105
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p113
sg107
S'name of the MeqParm table to be used'
p114
sS'Jsequence'
p115
S'sequence of Jones matrices to be used'
p116
sg19
g57
ssg25
g26
sg48
S'MG_JEN_Cohset'
p117
sS'JEN_inargGUI_ident'
p118
(dp119
g115
I55
ssg17
(dp120
g1
I01
sg7
I01
sg102
I01
sg103
I01
sg105
I01
sg107
I01
sg19
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p121
sg45
S'25dec2005'
p122
sg50
(dp123
g105
I00
sg7
I00
sg107
I00
sg1
I00
sg103
I00
ssg61
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p124
sg94
(dp125
g103
I00
ssg27
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p126
sg31
(dp127
g1
(lp128
g2
ag37
ag63
asg7
(lp129
(lp130
I0
aag64
asg102
(lp131
F0.0
aS'@@ft_coeff_scale'
p132
asg103
(lp133
I01
aI00
ag104
asg105
(lp134
I00
ag106
asg107
(lp135
NaS'test'
p136
ag108
asg115
(lp137
(lp138
S'GJones'
p139
aa(lp140
g34
aa(lp141
S'FJones'
p142
aa(lp143
S'KJones'
p144
aa(lp145
g90
aa(lp146
g139
ag90
aa(lp147
S'JJones'
p148
aa(lp149
aS'@@Jsequence'
p150
asg19
(lp151
NaS'@@@Jsequence'
p152
assg44
Nsg15
S'2006-02-26 14:20'
p153
sg12
S'MG_JEN_Cohset::Jones()'
p154
sg21
S'MG_JEN_CohsetJones'
p155
sg29
S'Jones'
p156
sg42
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p157
sg52
I00
sg47
g153
sS'MESSAGE'
p158
(dp159
S'1'
p160
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p161
sS'0'
p162
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p163
sS'3'
p164
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p165
sS'2'
p166
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p167
sS'5'
p168
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p169
sS'4'
p170
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p171
ssg53
(lp172
g10
ag7
ag1
ag19
ag107
ag105
ag102
ag103
ag115
aS'./MG_JEN_Joneset.GJones()'
p173
aS'./MG_JEN_Joneset.FJones()'
p174
ag5
aS'./MG_JEN_Joneset.KJones()'
p175
ag65
aS'./MG_JEN_Joneset.JJones()'
p176
assg175
(dp177
g7
S'@@stations'
p178
sg103
g104
sg1
S'@@polrep'
p179
sg10
(dp180
g12
S'MG_JEN_Joneset::KJones()'
p181
sg14
g175
sg15
S'2006-02-26 14:20'
p182
sg17
(dp183
g19
I01
sg1
I01
sg7
I01
ssg21
S'MG_JEN_JonesetKJones'
p184
sg23
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p185
sg25
g26
sg27
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p186
sg29
S'KJones'
p187
sg31
(dp188
g19
(lp189
g144
aS'@@@Jsequence'
p190
asg1
(lp191
g2
ag37
ag179
asg7
(lp192
(lp193
I0
aag178
assg42
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p194
sg44
Nsg45
S'12dec2005'
p195
sg47
g182
sg48
S'MG_JEN_Joneset'
p196
sg50
(dp197
g1
I00
sg7
I00
ssg52
I00
sg53
(lp198
g10
ag7
ag1
ag19
asg55
(dp199
g19
g57
sg1
g58
sg7
g60
ssg61
S'defines diagonal KJones matrices for DFT Fourier kernel'
p200
ssg19
g144
ssg176
(dp201
g7
S'@@stations'
p202
sg1
S'@@polrep'
p203
sg10
(dp204
g12
S'MG_JEN_Joneset::JJones()'
p205
sg14
g176
sg15
S'2006-02-26 14:20'
p206
sg17
(dp207
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetJJones'
p208
sg23
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p209
sg25
g26
sg27
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p210
sg29
S'JJones'
p211
sg31
(dp212
g19
(lp213
g148
aS'@@@Jsequence'
p214
asg1
(lp215
g2
ag37
ag203
asg20
(lp216
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p217
asg7
(lp218
(lp219
I0
aag202
assg42
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p220
sg44
Nsg45
S'14feb2006'
p221
sg47
g206
sg48
S'MG_JEN_Joneset'
p222
sg50
(dp223
g1
I00
sg7
I00
ssg52
I00
sg53
(lp224
g10
ag7
ag1
ag19
ag20
asg55
(dp225
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p226
ssg20
F1.1000000000000001
sg19
g148
ssg173
(dp227
g1
S'@@polrep'
p228
sg7
S'@@stations'
p229
sg10
(dp230
g12
S'MG_JEN_Joneset::GJones()'
p231
sg14
g173
sg15
S'2006-02-26 14:20'
p232
sg17
(dp233
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetGJones'
p234
sg23
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p235
sg25
g26
sg27
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p236
sg29
S'GJones'
p237
sg31
(dp238
g19
(lp239
g139
aS'@@@Jsequence'
p240
asS'Gpolar'
p241
(lp242
I01
aI00
aS'@@Gpolar'
p243
asg1
(lp244
g2
ag37
ag228
asg20
(lp245
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p246
asg7
(lp247
(lp248
I0
aag229
assg42
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p249
sg44
Nsg45
S'15dec2005'
p250
sg47
g232
sg48
S'MG_JEN_Joneset'
p251
sg94
(dp252
g241
I00
ssg50
(dp253
g1
I00
sg7
I00
ssg52
I00
sg53
(lp254
g10
ag7
ag1
ag19
ag241
ag20
asg55
(dp255
g19
g57
sg241
S'if True, use MeqPolar, otherwise MeqToComplex'
p256
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p257
ssg20
F1.1000000000000001
sg241
I00
sg19
g139
ssg115
(lp258
sg174
(dp259
g7
S'@@stations'
p260
sg1
S'@@polrep'
p261
sg10
(dp262
g12
S'MG_JEN_Joneset::FJones()'
p263
sg14
g174
sg15
S'2006-02-26 14:20'
p264
sg17
(dp265
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetFJones'
p266
sg23
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p267
sg25
g26
sg27
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p268
sg29
S'FJones'
p269
sg31
(dp270
g19
(lp271
g142
aS'@@@Jsequence'
p272
asg1
(lp273
g2
ag37
ag261
asg20
(lp274
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p275
asg7
(lp276
(lp277
I0
aag260
assg42
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p278
sg44
Nsg45
g46
sg47
g264
sg48
S'MG_JEN_Joneset'
p279
sg50
(dp280
g1
I00
sg7
I00
ssg52
I00
sg53
(lp281
g10
ag7
ag1
ag19
ag20
asg55
(dp282
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'defines diagonal FJones Faraday rotation matrices'
p283
ssg20
F1.1000000000000001
sg19
g142
ssg19
NssS'./MG_JEN_Cohset.predict()'
p284
(dp285
g1
S'@@polrep'
p286
sg10
(dp287
g12
S'MG_JEN_Cohset::predict()'
p288
sg14
g284
sg118
(dp289
sg17
(dp290
g1
I01
sg7
I01
ssg21
S'MG_JEN_Cohsetpredict'
p291
sg23
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p292
sg25
g26
sg61
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p293
sg27
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p294
sg29
S'predict'
p295
sg31
(dp296
g1
(lp297
g2
ag37
ag286
asg7
(lp298
(lp299
I0
aI1
aI2
aI3
aI4
aa(lp300
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp301
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp302
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p303
aS'@@stations'
p304
assg42
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p305
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p306
sg48
S'MG_JEN_Cohset'
p307
sg50
(dp308
g1
I00
sg7
I00
ssg52
I00
sg15
g306
sg53
(lp309
g10
ag7
ag1
asg55
(dp310
g1
S'polarisation representation'
p311
sg7
S'the (subset of) stations to be used'
p312
sssg7
g304
ssS'script_name'
p313
S'MG_JEN_cps'
p314
sS'redun'
p315
I00
sS'ms_name'
p316
S'D1.MS'
p317
sg107
Nsg10
(dp318
g14
S'./MG_JEN_cps.'
p319
sg55
(dp320
g1
g58
sS'master_reqseq'
p321
S'if True, use a master reqseq for solver(s)'
p322
sg7
g60
sS'insert_flagger'
p323
S'if True, insert a flagger'
p324
sg315
S'if True, redundant spacing calibration'
p325
sS'insert_solver'
p326
S'if True, insert a solver'
p327
sg102
g111
sg316
S'name of the (AIPS++) Measurement Set'
p328
sS'chain_solvers'
p329
S'if True, chain the solvers (recommended)'
p330
sS'num_cells'
p331
S'if defined, ModRes argument [ntime,nfreq]'
p332
sg107
g114
sS'tile_size'
p333
S'(inputrec) size (in time-slots) of the input data-tile'
p334
sg103
g112
sg105
g113
sg19
g57
ssS'reference'
p335
I00
sg25
g26
sg48
S'MG_JEN_cps'
p336
sg118
(dp337
g1
I7
sg7
I6
sg323
I2
sg315
I15
sg326
I1
sg103
I12
sg316
I4
sg107
I9
sg313
I0
sg331
I16
sg333
I5
sg105
I10
ssg17
(dp338
g321
I01
sg315
I00
sS'last_changed'
p339
I01
sg102
I01
sg105
I00
sg329
I01
sg331
I00
sg19
I01
ssg23
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p340
sg45
g250
sg61
g340
sg94
(dp341
g321
I00
sg315
I00
sg323
I00
sg339
I00
sg326
I00
sg103
I00
ssg27
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p342
sg31
(dp343
g1
(lp344
g2
ag37
aS'@@polrep'
p345
asg321
(lp346
I01
aI00
aS'@@master_reqseq'
p347
asg7
(lp348
(lp349
I0
aaS'@@stations'
p350
asg323
(lp351
I01
aI00
aS'@@insert_flagger'
p352
asg315
(lp353
I01
aI00
aS'@@redun'
p354
asg326
(lp355
I01
aI00
aS'@@insert_solver'
p356
asg339
(lp357
S'd30jan2006'
p358
aS'@@last_changed'
p359
asg316
(lp360
g317
aS'@@ms_name'
p361
asg329
(lp362
I01
aS'@@chain_solvers'
p363
asg331
(lp364
Na(lp365
I5
aI2
aa(lp366
I2
aI2
aa(lp367
I3
aI3
aaS'@@num_cells'
p368
asg107
(lp369
Nag136
aS'@@parmtable'
p370
asg333
(lp371
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p372
asg103
(lp373
I01
aI00
aS'@@simul'
p374
asg102
(lp375
F0.0
aS'@@ft_coeff_scale'
p376
asg105
(lp377
I00
aS'@@uvplane_effect'
p378
asg19
(lp379
NaS'@@@Jsequence'
p380
assg15
S'2006-02-26 14:20'
p381
sS'HISTORY'
p382
(dp383
g160
S'2006-02-26 14:20: Derived from: MG_JEN_cps_inspect.inarg'
p384
sg162
S'2006-02-26 14:20: Derived from: MG_JEN_cps.inarg'
p385
ssg12
g314
sS'save_file'
p386
S'MG_JEN_cps_inspect_protected.inarg'
p387
sS'file_filter'
p388
S'MG_JEN_cps*.inarg'
p389
sg29
S''
p390
sg42
S'<specific>'
p391
sS'browse'
p392
(dp393
g316
S'*.MS'
p394
ssg52
I01
sg47
g381
sg158
(dp395
S'11'
p396
S'.modify( tile_size ): 10  ->  1'
p397
sS'10'
p398
S'.modify(): stripped off: _JEN_inarg_option'
p399
sS'13'
p400
S".modify(): found ={'tile_size': 2, 'insert_solver': 1}"
p401
sS'12'
p402
S'.modify( insert_solver ): True  ->  False'
p403
sg160
S'.modify( uvplane_effect ): False  ->  True'
p404
sg162
S'.modify(): stripped off: _JEN_inarg_option'
p405
sg164
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p406
sg166
S".modify(): found ={'uvplane_effect': 1}"
p407
sg168
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p408
sg170
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p409
sS'7'
p410
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p411
sS'6'
p412
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p413
sS'9'
p414
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p415
sS'8'
p416
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p417
ssg53
(lp418
g10
ag313
ag326
ag323
ag339
ag316
ag333
ag7
ag1
ag19
ag107
ag105
ag102
ag103
ag329
ag321
ag315
ag331
aS'./MG_JEN_exec.stream_control()'
p419
aS'./MG_JEN_Cohset.make_spigots()'
p420
aS'./MG_JEN_Sixpack.newstar_source()'
p421
ag3
ag284
aS'./MG_JEN_Cohset.insert_solver()'
p422
aS'./MG_JEN_Cohset.make_sinks()'
p423
assg423
(dp424
S'fullDomainMux'
p425
I01
sS'output_col'
p426
S'PREDICT'
p427
sS'visu'
p428
I01
sS'flag'
p429
I00
sg10
(dp430
g12
S'MG_JEN_Cohset::make_sinks()'
p431
sg14
g423
sg118
(dp432
g429
I83
sg428
I82
sg425
I84
sg426
I80
sS'visu_array_config'
p433
I81
ssg21
S'MG_JEN_Cohsetmake_sinks'
p434
sg23
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p435
sg25
g26
sg61
S'Make sink nodes in the given Cohset object'
p436
sg27
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p437
sg29
S'make_sinks'
p438
sg31
(dp439
g429
(lp440
I01
aI00
aS'@@flag'
p441
asg433
(lp442
I01
aI00
aS'@@visu_array_config'
p443
asg426
(lp444
g427
aS'RESIDUALS'
p445
aS'DATA'
p446
aS'@@output_col'
p447
asg425
(lp448
I01
aI00
aS'@@fullDomainMux'
p449
asg428
(lp450
I01
aI00
aS'@@visu'
p451
assg42
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p452
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p453
sg48
S'MG_JEN_Cohset'
p454
sg94
(dp455
g429
I00
sg433
I00
sg425
I00
sg428
I00
ssg52
I00
sg15
g453
sg53
(lp456
g10
ag426
ag433
ag428
ag429
ag425
asg55
(dp457
g429
S'if True, insert a flagger for the output uv-data'
p458
sg433
S'if True, visualise the array config (from MS)'
p459
sg426
S'name of the logical (VisTile) output column'
p460
sg425
S'if True, attach an extra VisDataMux'
p461
sg428
S'if True, visualise the output uv-data'
p462
sssg433
I01
ssg333
I1
sg420
(dp463
S'MS_corr_index'
p464
(lp465
I0
aI1
aI2
aI3
asg429
I00
sg10
(dp466
g12
S'MG_JEN_Cohset::make_spigots()'
p467
sg14
g420
sg118
(dp468
g429
I28
sg464
I26
sg428
I27
ssg17
(dp469
S'input_col'
p470
I01
ssg21
S'MG_JEN_Cohsetmake_spigots'
p471
sg23
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p472
sg25
g26
sg61
S'Make spigot nodes in the given Cohset object'
p473
sg27
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p474
sg29
S'make_spigots'
p475
sg31
(dp476
g429
(lp477
I01
aI00
aS'@@flag'
p478
asg464
(lp479
g465
a(lp480
I0
aI-1
aI-1
aI1
aa(lp481
I0
aI-1
aI-1
aI3
aaS'@@'
p482
aS'@@MS_corr_index'
p483
asg470
(lp484
g446
ag427
ag445
aS'@@input_col'
p485
asg428
(lp486
I01
aI00
aS'@@visu'
p487
assg42
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p488
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p489
sg48
S'MG_JEN_Cohset'
p490
sg94
(dp491
g429
I00
sg428
I00
ssg52
I00
sg15
g489
sg53
(lp492
g10
ag470
ag464
ag428
ag429
asg55
(dp493
g429
S'if True, insert a flagger for the input uv-data'
p494
sg464
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p495
sg470
S'name of the logical (VisTile) input column'
p496
sg428
S'if True, visualise the input uv-data'
p497
sssg470
g446
sg428
I01
ssg19
Nsg323
I00
sg339
g358
sg105
I01
sg331
Nsg421
(dp498
S'f0'
p499
F1000000.0
sS'major'
p500
F0.0
sS'unsolvable'
p501
I00
sS'from_LSM'
p502
NsS'name'
p503
NsS'I0'
p504
F1.0
sS'SI'
p505
NsS'Qpct'
p506
NsS'punit'
p507
S'unpol'
p508
sS'fsr_trace'
p509
I01
sS'shape'
p510
S'point'
p511
sS'pa'
p512
F0.0
sS'RA'
p513
F4.3570000000000002
sg107
NsS'RM'
p514
NsS'Upct'
p515
NsS'Dec'
p516
F1.0920000000000001
sS'Vpct'
p517
NsS'minor'
p518
F0.0
sg10
(dp519
g14
g421
sg55
(dp520
g499
S'reference freq (Hz): I=I0 @ f=f0'
p521
sg500
S'major axis (arcsec)'
p522
sg501
S'if True, do NOT store solvegroup/parmgroup info'
p523
sg502
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p524
sg504
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p525
sg505
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p526
sg506
S'Stokes Q (percentage of I)'
p527
sg507
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p528
sg510
S'source shape'
p529
sg512
S'position angle (rad)'
p530
sg509
S'If True, attach to forest state record'
p531
sg107
S'name of the MeqParm table (AIPS++)'
p532
sg514
S'Intrinsic Rotation Measure (rad/m2)'
p533
sg515
S'Stokes U (percentage of I)'
p534
sg516
S'Declination (rad, J2000)'
p535
sg517
S'Stokes V (percentage of I)'
p536
sg518
S'minor axis (arcsec)'
p537
sg513
S'Right Ascension (rad, J2000)'
p538
ssg25
g26
sg48
S'MG_JEN_Sixpack'
p539
sg118
(dp540
g516
I42
sg502
I30
sg504
I34
sg506
I35
sg507
I29
sg505
I39
sg107
I32
sg513
I41
sg514
I38
sg515
I36
sg517
I37
ssg17
(dp541
g499
I01
sg500
I01
sg501
I01
sg502
I00
sg509
I01
sg507
I00
sg510
I01
sg512
I01
sg518
I01
sg503
I01
ssg23
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p542
sg45
S'10feb2006'
p543
sg392
(dp544
g502
S'*.lsm'
p545
ssg61
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p546
sg94
(dp547
g501
I00
sg509
I00
ssg27
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p548
sg31
(dp549
g499
(lp550
F1000000.0
aS'@@f0'
p551
asg500
(lp552
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p553
asg501
(lp554
I01
aI00
aS'@@unsolvable'
p555
asg502
(lp556
NaS'@@from_LSM'
p557
asg504
(lp558
F1.0
aF10.0
aS'@@I0'
p559
asg505
(lp560
NaF-0.69999999999999996
a(lp561
F0.44700000000000001
aF-0.184
aaS'@@SI'
p562
asg506
(lp563
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p564
asg507
(lp565
g508
aS'unpol2'
p566
aS'unpol10'
p567
aS'QUV'
p568
aS'QU'
p569
aS'Qonly'
p570
aS'Uonly'
p571
aS'Vonly'
p572
aS'3c147'
p573
aS'3c286'
p574
aS'3c48'
p575
aS'3c295'
p576
aS'RMtest'
p577
aS'SItest'
p578
aS'@@punit'
p579
asg509
(lp580
I01
aI00
aS'@@fsr_trace'
p581
asg510
(lp582
g511
aS'ell.gauss'
p583
aS'@@shape'
p584
asg512
(lp585
F0.0
aF1.0
aF-0.5
aS'@@pa'
p586
asg513
(lp587
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p588
asg107
(lp589
NaS'@@parmtable'
p590
asg514
(lp591
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p592
asg515
(lp593
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p594
asg516
(lp595
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p596
asg517
(lp597
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p598
asg518
(lp599
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p600
asg503
(lp601
NaS'@@name'
p602
assg44
Nsg15
S'2006-02-26 14:20'
p603
sg12
S'MG_JEN_Sixpack::newstar_source()'
p604
sg21
S'MG_JEN_Sixpacknewstar_source'
p605
sg29
S'newstar_source'
p606
sg42
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p607
sS'callback'
p608
(dp609
g507
I01
ssg52
I00
sg47
g603
sg53
(lp610
g10
ag507
ag502
ag503
ag107
ag501
ag504
ag506
ag515
ag517
ag514
ag505
ag499
ag513
ag516
ag509
ag510
ag500
ag518
ag512
asssg321
I00
sg7
g349
sg419
(dp611
S'channel_start_index'
p612
I10
sS'data_column_name'
p613
g446
sS'predict_column'
p614
S'CORRECTED_DATA'
p615
sg316
S'@@ms_name'
p616
sg10
(dp617
g14
g419
sg55
(dp618
g612
S'(inputrec.sel) index of first selected freq channel'
p619
sg613
S'(inputrec) MS input column'
p620
sg614
S'MS output column to be associated with the VisTile predict-column'
p621
sg316
g328
sg333
g334
sS'channel_increment'
p622
S'(inputrec.sel) take every nth channel (1=all)'
p623
sS'channel_end_index'
p624
S'(inputrec.sel) index of last selected freq channel'
p625
sS'write_flags'
p626
S'(outputrec) if True, write flags to MS'
p627
ssg25
g26
sg48
S'MG_JEN_exec'
p628
sg118
(dp629
g612
I20
sg613
I19
sg614
I24
sg626
I23
sg624
I21
sg622
I22
ssg17
(dp630
g316
I01
sg333
I01
ssg23
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p631
sg45
S'20jan2006'
p632
sg50
(dp633
g316
I00
sg333
I00
ssg61
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p634
sg94
(dp635
g626
I00
ssg27
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p636
sg31
(dp637
g612
(lp638
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p639
asg613
(lp640
g446
ag615
aS'@@data_column_name'
p641
asg614
(lp642
g446
ag615
aS'MODEL_DATA'
p643
aS'@@predict_column'
p644
asg316
(lp645
g317
ag616
asg333
(lp646
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p647
asg622
(lp648
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p649
asg624
(lp650
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p651
asg626
(lp652
I01
aI00
aS'@@write_flags'
p653
assg44
Nsg15
S'2006-02-26 14:20'
p654
sg12
S'MG_JEN_exec::stream_control()'
p655
sg21
S'MG_JEN_execstream_control'
p656
sg29
S'stream_control'
p657
sg42
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p658
sg392
(dp659
g316
g394
ssg52
I00
sg47
g654
sg158
(dp660
g162
S'.modify( tile_size ): @@tile_size  ->  1'
p661
ssg53
(lp662
g10
ag316
ag333
ag613
ag612
ag624
ag622
ag626
ag614
assg333
I1
sg622
I1
sg624
I50
sg626
I00
ssg102
F0.0
sg326
I00
sg103
I00
sg329
I01
sg422
(dp663
S'correct_after'
p664
I01
sg321
S'@@master_reqseq'
p665
sS'condeq_unop'
p666
Nsg428
I01
sg315
S'@@redun'
p667
sS'solver_subtree'
p668
NsS'subtract_after'
p669
I00
sg329
S'@@chain_solvers'
p670
sg10
(dp671
g14
g422
sg55
(dp672
g664
S'if True, correct measured with predicted.Joneset'
p673
sg321
g322
sg666
S'Optional unary operation on Condeq inputs'
p674
sg428
S'if True, include full visualisation'
p675
sg315
g325
sg668
S'solver subtree qualifier(s)'
p676
sg669
S'if True, subtract predicted from measured'
p677
sg329
g330
sS'flag_residuals'
p678
S'if True, flag the residuals'
p679
sg331
g332
ssg25
g26
sg48
S'MG_JEN_Cohset'
p680
sg118
(dp681
g669
I65
sg664
I66
sg666
I63
sg428
I64
ssg17
(dp682
g321
I01
sg315
I01
sg668
I01
sg329
I01
sg678
I01
sg331
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p683
sg45
g122
sg50
(dp684
g331
I00
sg329
I00
sg315
I00
sg321
I00
ssg61
S'insert one or more solver subtrees in the data stream'
p685
sg94
(dp686
g664
I00
sg321
I00
sg428
I00
sg315
I00
sg669
I00
sg678
I00
ssg27
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p687
sg31
(dp688
g664
(lp689
I01
aI00
aS'@@correct_after'
p690
asg321
(lp691
I01
aI00
ag665
asg666
(lp692
NaS'Abs'
p693
aS'Arg'
p694
aS'@@condeq_unop'
p695
asg428
(lp696
I01
aI00
aS'@@visu'
p697
asg315
(lp698
I01
aI00
ag667
asg668
(lp699
NaS'@@solver_subtree'
p700
asg669
(lp701
I01
aI00
aS'@@subtract_after'
p702
asg329
(lp703
I01
ag670
asg678
(lp704
I01
aI00
aS'@@flag_residuals'
p705
asg331
(lp706
Na(lp707
I5
aI2
aa(lp708
I2
aI2
aa(lp709
I3
aI3
aaS'@@num_cells'
p710
assg44
Nsg15
S'2006-02-26 14:20'
p711
sg12
S'MG_JEN_Cohset::insert_solver()'
p712
sg21
S'MG_JEN_Cohsetinsert_solver'
p713
sg29
S'insert_solver'
p714
sg42
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p715
sg52
I00
sg47
g711
sg158
(dp716
g162
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p717
ssg53
(lp718
g10
ag668
ag315
ag331
ag329
ag321
ag666
ag428
ag669
ag664
ag678
aS'./MG_JEN_Cohset.solver_subtree()'
p719
assg331
g710
sg719
(dp720
S'rmin'
p721
Nsg428
I01
sS'epsilon'
p722
F0.0001
sS'rmax'
p723
NsS'usesvd'
p724
I01
sS'debug_level'
p725
I10
sS'solvegroup'
p726
(lp727
sg10
(dp728
g12
S'MG_JEN_Cohset::solver_subtree()'
p729
sg14
g719
sg15
S'2006-02-26 14:20'
p730
sg17
(dp731
g725
I01
sg331
I00
ssg21
S'MG_JEN_Cohsetsolver_subtree'
p732
sg23
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p733
sg25
g26
sg27
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p734
sg29
S'solver_subtree'
p735
sg31
(dp736
g721
(lp737
NaI100
aI200
aI500
aS'@@rmin'
p738
asg428
(lp739
I01
aI00
aS'@@visu'
p740
asg722
(lp741
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p742
asg723
(lp743
NaI500
aI1000
aI2000
aS'@@rmax'
p744
asg724
(lp745
I01
aI00
aS'@@usesvd'
p746
asg725
(lp747
I10
aS'@@debug_level'
p748
asg726
(lp749
g727
a(lp750
g139
aa(lp751
S'Ggain'
p752
aa(lp753
S'Gphase'
p754
aa(lp755
S'Gpol1'
p756
aa(lp757
S'Gpol2'
p758
aa(lp759
g148
aa(lp760
g139
aS'stokesI'
p761
aa(lp762
g761
aa(lp763
S'stokesIQU'
p764
aa(lp765
S'stokesIQUV'
p766
aa(lp767
g139
aS'DJones'
p768
aa(lp769
g768
aa(lp770
S'Dang'
p771
aa(lp772
S'Dell'
p773
aa(lp774
S'Dreal'
p775
aa(lp776
S'Dimag'
p777
aa(lp778
g139
ag768
ag142
aa(lp779
g142
aa(lp780
g139
ag34
aa(lp781
g34
aa(lp782
S'Breal'
p783
aa(lp784
S'Bimag'
p785
aa(lp786
S'Bpol1'
p787
aa(lp788
S'Bpol2'
p789
aaS'@@solvegroup'
p790
asg331
(lp791
Na(lp792
I5
aI2
aa(lp793
I2
aI2
aa(lp794
I3
aI3
aaS'@@num_cells'
p795
asS'history'
p796
(lp797
I01
aI00
aS'@@history'
p798
asS'num_iter'
p799
(lp800
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p801
asS'condition'
p802
(lp803
NaS'Gphase_X_sum=0.0'
p804
aS'Gphase_Y_sum=0.0'
p805
a(lp806
g804
ag805
aa(lp807
S'Gphase_X_first=0.0'
p808
aS'Gphase_Y_first=0.0'
p809
aa(lp810
S'Gphase_X_last=0.0'
p811
aS'Gphase_Y_last=0.0'
p812
aaS'Dang_sum=0.0'
p813
a(lp814
S'Bimag_X_sum=0.0'
p815
aS'Bimag_Y_sum=0.0'
p816
aa(lp817
S'Breal_X_product=1.0'
p818
aS'Breal_Y_product=1.0'
p819
aaS'@@condition'
p820
asS'colin_factor'
p821
(lp822
F1e-08
aF0.0
aS'@@colin_factor'
p823
assg42
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p824
sg44
Nsg45
S'20dec2005'
p825
sg118
(dp826
g721
I70
sg428
I78
sg722
I74
sg723
I71
sg724
I76
sg726
I68
sg331
I72
sg796
I79
sg799
I73
sg802
I69
sg821
I75
ssg47
g730
sg48
S'MG_JEN_Cohset'
p827
sg94
(dp828
g724
I00
sg796
I00
sg428
I00
ssg52
I00
sg53
(lp829
g10
ag726
ag802
ag721
ag723
ag331
ag799
ag722
ag821
ag724
ag725
ag428
ag796
asg55
(dp830
g721
S'if specified, only use baselines>=rmin'
p831
sg428
S'if True, include visualisation'
p832
sg722
S'iteration control criterion'
p833
sg723
S'if specified, only use baselines<=rmax'
p834
sg724
S'if True, use Singular Value Decomposition (SVD)'
p835
sg725
S'solver debug_level'
p836
sg726
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p837
sg331
g332
sg796
S'if True, include history collection of metrics'
p838
sg799
S'max number of iterations'
p839
sg802
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p840
sg821
S'colinearity factor'
p841
ssg61
S'Make a solver-subtree for the given Condeq Cohset'
p842
ssg331
Nsg796
I01
sg799
I20
sg802
Nsg821
F1e-08
ssg678
I00
ss.