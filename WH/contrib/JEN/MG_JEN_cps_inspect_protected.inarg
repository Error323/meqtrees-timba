(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I86
sg17
I91
sg21
I88
sg38
I87
sg25
I90
sg44
I89
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-14 18:46'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I110
sg129
I111
sg131
I109
sg142
I113
sg144
I108
sg146
I114
sg148
I115
sg149
I112
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-14 18:46'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I76
sg217
I78
sg208
I77
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-14 18:46'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I52
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones_WSRT'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg14
(lp294
(lp295
I0
aI1
aI2
aI3
aI4
aa(lp296
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p299
ag121
assg101
Nsg102
S'2006-02-14 18:46'
p300
sg104
S'MG_JEN_Cohset::JJones()'
p301
sg106
S'MG_JEN_CohsetJJones'
p302
sg108
S'JJones'
p303
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p304
sg112
I00
sg113
g300
sg114
(dp305
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p306
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p307
sS'3'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p309
sS'2'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p311
sS'4'
p312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p313
ssg118
(lp314
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p315
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p316
ag122
assg316
(dp317
g12
I00
sg1
S'@@polrep'
p318
sg14
S'@@stations'
p319
sg22
F0.0
sg23
S'@@uvplane_effect'
p320
sg7
S'@@parmtable'
p321
sg26
(dp322
g28
g316
sg29
(dp323
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p324
sg50
(dp325
sg52
(dp326
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p327
sg56
S'12dec2005'
p328
sg58
(dp329
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p330
sg62
(dp331
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p332
sg66
(dp333
g12
(lp334
I01
aI00
aS'@@unsolvable'
p335
asg1
(lp336
g2
ag71
ag318
asg14
(lp337
(lp338
I0
aag319
asg22
(lp339
F0.0
aS'@@ft_coeff_scale'
p340
asg23
(lp341
I00
ag320
asg7
(lp342
Nag321
assg101
Nsg102
S'2006-02-14 18:46'
p343
sg104
S'MG_JEN_Joneset::KJones()'
p344
sg106
S'MG_JEN_JonesetKJones'
p345
sg108
S'KJones'
p346
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p347
sg112
I00
sg113
g343
sg118
(lp348
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg315
(dp349
g12
I00
sg1
S'@@polrep'
p350
sS'fdeg_Ggain'
p351
I0
sS'tdeg_Gphase'
p352
S'@tdeg_Ggain'
p353
sS'stddev_Ggain'
p354
F0.0
sS'c00_Gphase'
p355
F0.0
sg22
F0.0
sg14
S'@@stations'
p356
sS'tdeg_Ggain'
p357
I3
sS'fdeg_Gphase'
p358
S'@fdeg_Ggain'
p359
sg7
S'@@parmtable'
p360
sg26
(dp361
g28
g315
sg29
(dp362
g12
g31
sg1
g32
sg14
g33
sg355
S'default c00 funklet value'
p363
sg351
S'degree of freq polynomial'
p364
sg352
S'degree of time polynomial'
p365
sg22
g37
sg357
g365
sg358
g364
sg7
g43
sg354
S'scatter in default c00 funklet values'
p366
sS'subtile_size_Gphase'
p367
S'sub-tile size (None=entire tile)'
p368
sS'c00_Ggain'
p369
g363
sS'stddev_Gphase'
p370
g366
sS'Gpolar'
p371
S'if True, use MeqPolar, otherwise MeqToComplex'
p372
sS'subtile_size_Ggain'
p373
g368
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p374
sg50
(dp375
g351
I60
sg373
I64
sg352
I63
sg357
I62
sg358
I61
sg367
I65
sg371
I59
ssg52
(dp376
g12
I01
sg1
I01
sg14
I01
sg354
I01
sg355
I01
sg22
I01
sg23
I01
sg7
I01
sg369
I01
sg370
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p377
sg56
S'15dec2005'
p378
sg58
(dp379
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p380
sg62
(dp381
g12
I00
sg371
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p382
sg66
(dp383
g12
(lp384
I01
aI00
aS'@@unsolvable'
p385
asg1
(lp386
g2
ag71
ag350
asg14
(lp387
(lp388
I0
aag356
asg355
(lp389
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p390
asg351
(lp391
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p392
asg352
(lp393
I0
aI1
aI2
aI3
ag353
aS'@@tdeg_Gphase'
p394
asg22
(lp395
F0.0
aS'@@ft_coeff_scale'
p396
asg357
(lp397
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p398
asg358
(lp399
I0
aI1
aI2
aI3
ag359
aS'@@fdeg_Gphase'
p400
asg7
(lp401
Nag360
asg354
(lp402
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p403
asg367
(lp404
S'@subtile_size_Ggain'
p405
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p406
asg369
(lp407
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p408
asg370
(lp409
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p410
asg371
(lp411
I01
aI00
aS'@@Gpolar'
p412
asg373
(lp413
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p414
asg23
(lp415
I00
aS'@@uvplane_effect'
p416
assg101
Nsg102
S'2006-02-14 18:46'
p417
sg104
S'MG_JEN_Joneset::GJones()'
p418
sg106
S'MG_JEN_JonesetGJones'
p419
sg108
S'GJones'
p420
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p421
sg112
I00
sg113
g417
sg114
(dp422
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p423
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p424
ssg118
(lp425
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag371
ag351
ag358
ag357
ag352
ag373
ag367
ag369
ag355
ag354
ag370
assg367
g405
sg369
F1.0
sg370
F0.0
sg371
I00
sg373
Nsg23
g416
ssg263
(lp426
ssg26
(dp427
g28
S'./MG_JEN_cps.'
p428
sg29
(dp429
g1
g262
sS'master_reqseq'
p430
S'if True, use a master reqseq for solver(s)'
p431
sg14
g265
sS'insert_flagger'
p432
S'if True, insert a flagger'
p433
sS'redun'
p434
S'if True, redundant spacing calibration'
p435
sS'insert_solver'
p436
S'if True, insert a solver'
p437
sg5
S'name of the (AIPS++) Measurement Set'
p438
sS'chain_solvers'
p439
S'if True, chain the solvers (recommended)'
p440
sS'num_cells'
p441
S'if defined, ModRes argument [ntime,nfreq]'
p442
sg7
g261
sS'tile_size'
p443
S'(inputrec) size (in time-slots) of the input data-tile'
p444
sg23
g39
ssS'reference'
p445
I00
sg46
g47
sg48
S'MG_JEN_cps'
p446
sg50
(dp447
g1
I8
sg14
I6
sg432
I2
sg434
I12
sg436
I1
sg5
I4
sg7
I7
sg3
I0
sg441
I13
sg443
I5
sg23
I9
ssg52
(dp448
g1
I00
sg430
I01
sg14
I00
sS'last_changed'
p449
I01
sg434
I00
sg23
I00
sg439
I01
sg441
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p450
sg56
g378
sg60
g450
sg62
(dp451
g449
I00
sg432
I00
sg430
I00
sg436
I00
sg434
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p452
sg66
(dp453
g1
(lp454
g2
ag71
aS'@@polrep'
p455
asg430
(lp456
I01
aI00
aS'@@master_reqseq'
p457
asg14
(lp458
(lp459
I0
aI1
aI2
aI3
aI4
aa(lp460
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp461
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp462
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p463
asg432
(lp464
I01
aI00
aS'@@insert_flagger'
p465
asg449
(lp466
S'd30jan2006'
p467
aS'@@last_changed'
p468
asg436
(lp469
I01
aI00
aS'@@insert_solver'
p470
asg434
(lp471
I01
aI00
aS'@@redun'
p472
asg5
(lp473
g6
aS'@@ms_name'
p474
asg439
(lp475
I01
aS'@@chain_solvers'
p476
asg441
(lp477
Na(lp478
I5
aI2
aa(lp479
I2
aI2
aa(lp480
I3
aI3
aaS'@@num_cells'
p481
asg7
(lp482
NaS'@@parmtable'
p483
asg443
(lp484
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p485
asg23
(lp486
I00
aS'@@uvplane_effect'
p487
assg102
S'2006-02-14 18:46'
p488
sS'HISTORY'
p489
(dp490
g253
S'2006-02-14 18:46: Derived from: MG_JEN_cps_inspect.inarg'
p491
sg116
S'2006-02-14 18:46: Derived from: MG_JEN_cps.inarg'
p492
ssg104
g4
sS'save_file'
p493
S'MG_JEN_cps_inspect_protected.inarg'
p494
sS'file_filter'
p495
S'MG_JEN_cps*.inarg'
p496
sg108
S''
p497
sg110
S'<specific>'
p498
sS'browse'
p499
(dp500
g5
S'*.MS'
p501
ssg112
I01
sg113
g488
sg114
(dp502
S'11'
p503
S'.modify( tile_size ): 10  ->  1'
p504
sS'10'
p505
S'.modify(): stripped off: _JEN_inarg_option'
p506
sS'13'
p507
S".modify(): found ={'tile_size': 2, 'insert_solver': 1}"
p508
sS'12'
p509
S'.modify( insert_solver ): True  ->  False'
p510
sg253
S'.modify( uvplane_effect ): False  ->  True'
p511
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p512
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p513
sg310
S".modify(): found ={'uvplane_effect': 1}"
p514
sS'5'
p515
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p516
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p517
sS'7'
p518
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p519
sS'6'
p520
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p521
sS'9'
p522
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p523
sS'8'
p524
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p525
ssg118
(lp526
g26
ag3
ag436
ag432
ag449
ag5
ag443
ag14
ag7
ag1
ag23
ag439
ag430
ag434
ag441
aS'./MG_JEN_exec.stream_control()'
p527
aS'./MG_JEN_Cohset.make_spigots()'
p528
aS'./MG_JEN_Sixpack.newstar_source()'
p529
ag8
aS'./MG_JEN_Cohset.predict()'
p530
aS'./MG_JEN_Cohset.insert_solver()'
p531
aS'./MG_JEN_Cohset.make_sinks()'
p532
assg532
(dp533
S'fullDomainMux'
p534
I01
sS'output_col'
p535
S'PREDICT'
p536
sS'visu'
p537
I01
sS'flag'
p538
I00
sg26
(dp539
g104
S'MG_JEN_Cohset::make_sinks()'
p540
sg28
g532
sg50
(dp541
g538
I147
sg537
I146
sg534
I148
sg535
I144
sS'visu_array_config'
p542
I145
ssg106
S'MG_JEN_Cohsetmake_sinks'
p543
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p544
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p545
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p546
sg108
S'make_sinks'
p547
sg66
(dp548
g538
(lp549
I01
aI00
aS'@@flag'
p550
asg542
(lp551
I01
aI00
aS'@@visu_array_config'
p552
asg535
(lp553
g536
aS'RESIDUALS'
p554
aS'DATA'
p555
aS'@@output_col'
p556
asg534
(lp557
I01
aI00
aS'@@fullDomainMux'
p558
asg537
(lp559
I01
aI00
aS'@@visu'
p560
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p561
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p562
sg48
S'MG_JEN_Cohset'
p563
sg62
(dp564
g538
I00
sg542
I00
sg534
I00
sg537
I00
ssg112
I00
sg102
g562
sg118
(lp565
g26
ag535
ag542
ag537
ag538
ag534
asg29
(dp566
g538
S'if True, insert a flagger for the output uv-data'
p567
sg542
S'if True, visualise the array config (from MS)'
p568
sg535
S'name of the logical (VisTile) output column'
p569
sg534
S'if True, attach an extra VisDataMux'
p570
sg537
S'if True, visualise the output uv-data'
p571
sssg542
I01
ssg443
I1
sg528
(dp572
S'MS_corr_index'
p573
(lp574
I0
aI1
aI2
aI3
asg538
I00
sg26
(dp575
g104
S'MG_JEN_Cohset::make_spigots()'
p576
sg28
g528
sg50
(dp577
g538
I25
sg573
I23
sg537
I24
ssg52
(dp578
S'input_col'
p579
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p580
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p581
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p582
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p583
sg108
S'make_spigots'
p584
sg66
(dp585
g538
(lp586
I01
aI00
aS'@@flag'
p587
asg573
(lp588
g574
a(lp589
I0
aI-1
aI-1
aI1
aa(lp590
I0
aI-1
aI-1
aI3
aaS'@@'
p591
aS'@@MS_corr_index'
p592
asg579
(lp593
g555
ag536
ag554
aS'@@input_col'
p594
asg537
(lp595
I01
aI00
aS'@@visu'
p596
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p597
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p598
sg48
S'MG_JEN_Cohset'
p599
sg62
(dp600
g538
I00
sg537
I00
ssg112
I00
sg102
g598
sg118
(lp601
g26
ag579
ag573
ag537
ag538
asg29
(dp602
g538
S'if True, insert a flagger for the input uv-data'
p603
sg573
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p604
sg579
S'name of the logical (VisTile) input column'
p605
sg537
S'if True, visualise the input uv-data'
p606
sssg579
g555
sg537
I01
ssg530
(dp607
g1
S'@@polrep'
p608
sg26
(dp609
g104
S'MG_JEN_Cohset::predict()'
p610
sg28
g530
sg50
(dp611
sg52
(dp612
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p613
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p614
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p615
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p616
sg108
S'predict'
p617
sg66
(dp618
g1
(lp619
g2
ag71
ag608
asg14
(lp620
(lp621
I0
aI1
aI2
aI3
aI4
aa(lp622
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp623
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp624
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p625
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p626
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p627
sg48
S'MG_JEN_Cohset'
p628
sg58
(dp629
g1
I00
sg14
I00
ssg112
I00
sg102
g627
sg118
(lp630
g26
ag14
ag1
asg29
(dp631
g1
g262
sg14
g265
sssg14
g625
ssg432
I00
sg449
g467
sg23
I01
sg441
Nsg529
(dp632
S'f0'
p633
F1000000.0
sS'major'
p634
F0.0
sg12
I00
sS'shape'
p635
S'point'
p636
sg7
NsS'Upct'
p637
NsS'I0'
p638
F1.0
sS'Vpct'
p639
NsS'dDec'
p640
F0.0
sS'pa'
p641
F0.0
sg26
(dp642
g28
g529
sg29
(dp643
g633
S'reference freq (Hz): I=I0 @ f=f0'
p644
sg634
S'major axis (arcsec)'
p645
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p646
sg638
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p647
sg641
S'position angle (rad)'
p648
sS'SI'
p649
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p650
sS'Qpct'
p651
S'Stokes Q (percentage of I)'
p652
sS'punit'
p653
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p654
sg640
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p655
sg635
S'source shape'
p656
sg7
S'name of the MeqParm table (AIPS++)'
p657
sS'fsr_trace'
p658
S'If True, attach to forest state record'
p659
sS'RA0'
p660
S'If RA0 is a node, RA0+dRA overrides RA'
p661
sS'dRA'
p662
S'RA offset (arcsec): RA = RA0 + dRA'
p663
sS'RM'
p664
S'Intrinsic Rotation Measure (rad/m2)'
p665
sg637
S'Stokes U (percentage of I)'
p666
sS'Dec'
p667
S'Declination (rad, J2000)'
p668
sS'Dec0'
p669
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p670
sg639
S'Stokes V (percentage of I)'
p671
sS'minor'
p672
S'minor axis (arcsec)'
p673
sS'RA'
p674
S'Right Ascension (rad, J2000)'
p675
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p676
sg50
(dp677
g667
I38
sg638
I30
sg651
I31
sg639
I33
sg649
I35
sg7
I28
sg674
I37
sg664
I34
sg637
I32
sg653
I26
ssg52
(dp678
g633
I01
sg634
I01
sg12
I01
sS'name'
p679
I01
sg658
I01
sg653
I00
sg640
I01
sg635
I01
sg641
I01
sg660
I01
sg662
I01
sg669
I01
sg672
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p680
sg56
S'10feb2006'
p681
sg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p682
sg62
(dp683
g12
I00
sg658
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p684
sg66
(dp685
g633
(lp686
F1000000.0
aS'@@f0'
p687
asg634
(lp688
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p689
asg12
(lp690
I01
aI00
aS'@@unsolvable'
p691
asg635
(lp692
g636
aS'ell.gauss'
p693
aS'@@shape'
p694
asg7
(lp695
NaS'@@parmtable'
p696
asg637
(lp697
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p698
asg638
(lp699
F1.0
aF10.0
aS'@@I0'
p700
asg639
(lp701
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p702
asg640
(lp703
F0.0
aS'@@dDec'
p704
asg641
(lp705
F0.0
aF1.0
aF-0.5
aS'@@pa'
p706
asg674
(lp707
F0.0
aF0.5
aF1.0
aS'@@RA'
p708
asg662
(lp709
F0.0
aS'@@dRA'
p710
asg664
(lp711
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p712
asg669
(lp713
NaS'@@Dec0'
p714
asg672
(lp715
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p716
asg651
(lp717
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p718
asg653
(lp719
S'unpol'
p720
aS'unpol2'
p721
aS'unpol10'
p722
aS'QUV'
p723
aS'QU'
p724
aS'Qonly'
p725
aS'Uonly'
p726
aS'Vonly'
p727
aS'3c147'
p728
aS'3c286'
p729
aS'3c48'
p730
aS'3c295'
p731
aS'RMtest'
p732
aS'SItest'
p733
aS'@@punit'
p734
asg660
(lp735
NaS'@@RA0'
p736
asg667
(lp737
F0.5
aF1.0
aS'@@Dec'
p738
asg679
(lp739
NaS'@@name'
p740
asg658
(lp741
I01
aI00
aS'@@fsr_trace'
p742
asg649
(lp743
NaF-0.69999999999999996
a(lp744
F0.44700000000000001
aF-0.184
aaS'@@SI'
p745
assg101
Nsg102
S'2006-02-14 18:46'
p746
sg104
S'MG_JEN_Sixpack::newstar_source()'
p747
sg106
S'MG_JEN_Sixpacknewstar_source'
p748
sg108
S'newstar_source'
p749
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p750
sS'callback'
p751
(dp752
g653
I01
ssg112
I00
sg113
g746
sg118
(lp753
g26
ag653
ag679
ag7
ag12
ag638
ag651
ag637
ag639
ag664
ag649
ag633
ag674
ag667
ag658
ag635
ag634
ag672
ag641
ag660
ag669
ag662
ag640
assg662
F0.0
sg664
Nsg669
Nsg672
F0.0
sg674
F0.0
sg651
Nsg653
g720
sg660
Nsg667
F1.0
sg679
Nsg658
I01
sg649
Nssg430
I00
sg14
g459
sg527
(dp754
S'channel_start_index'
p755
I10
sS'data_column_name'
p756
g555
sS'predict_column'
p757
S'CORRECTED_DATA'
p758
sg5
S'@@ms_name'
p759
sg26
(dp760
g28
g527
sg29
(dp761
g755
S'(inputrec.sel) index of first selected freq channel'
p762
sg756
S'(inputrec) MS input column'
p763
sg757
S'MS output column to be associated with the VisTile predict-column'
p764
sg5
g438
sg443
g444
sS'channel_increment'
p765
S'(inputrec.sel) take every nth channel (1=all)'
p766
sS'channel_end_index'
p767
S'(inputrec.sel) index of last selected freq channel'
p768
sS'write_flags'
p769
S'(outputrec) if True, write flags to MS'
p770
ssg46
g47
sg48
S'MG_JEN_exec'
p771
sg50
(dp772
g755
I17
sg756
I16
sg757
I21
sg769
I20
sg767
I18
sg765
I19
ssg52
(dp773
g5
I01
sg443
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p774
sg56
S'20jan2006'
p775
sg58
(dp776
g5
I00
sg443
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p777
sg62
(dp778
g769
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p779
sg66
(dp780
g755
(lp781
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p782
asg756
(lp783
g555
ag758
aS'@@data_column_name'
p784
asg757
(lp785
g555
ag758
aS'MODEL_DATA'
p786
aS'@@predict_column'
p787
asg5
(lp788
g6
ag759
asg443
(lp789
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p790
asg765
(lp791
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p792
asg767
(lp793
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p794
asg769
(lp795
I01
aI00
aS'@@write_flags'
p796
assg101
Nsg102
S'2006-02-14 18:46'
p797
sg104
S'MG_JEN_exec::stream_control()'
p798
sg106
S'MG_JEN_execstream_control'
p799
sg108
S'stream_control'
p800
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p801
sg499
(dp802
g5
g501
ssg112
I00
sg113
g797
sg114
(dp803
g116
S'.modify( tile_size ): @@tile_size  ->  1'
p804
ssg118
(lp805
g26
ag5
ag443
ag756
ag755
ag767
ag765
ag769
ag757
assg443
I1
sg765
I1
sg767
I50
sg769
I00
ssg434
I00
sg436
I00
sg439
I01
sg531
(dp806
S'correct_after'
p807
I01
sg430
S'@@master_reqseq'
p808
sS'condeq_unop'
p809
Nsg537
I01
sg434
S'@@redun'
p810
sS'solver_subtree'
p811
NsS'subtract_after'
p812
I00
sg439
S'@@chain_solvers'
p813
sg26
(dp814
g28
g531
sg29
(dp815
g807
S'if True, correct measured with predicted.Joneset'
p816
sg430
g431
sg809
S'Optional unary operation on Condeq inputs'
p817
sg537
S'if True, include full visualisation'
p818
sg434
g435
sg811
S'solver subtree qualifier(s)'
p819
sg812
S'if True, subtract predicted from measured'
p820
sg439
g440
sg441
g442
ssg46
g47
sg48
S'MG_JEN_Cohset'
p821
sg50
(dp822
g812
I130
sg807
I131
sg809
I128
sg537
I129
ssg52
(dp823
g811
I01
sg441
I01
sg439
I01
sg434
I01
sg430
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p824
sg56
g270
sg58
(dp825
g441
I00
sg439
I00
sg434
I00
sg430
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p826
sg62
(dp827
g812
I00
sg434
I00
sg807
I00
sg430
I00
sg537
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p828
sg66
(dp829
g807
(lp830
I01
aI00
aS'@@correct_after'
p831
asg430
(lp832
I01
aI00
ag808
asg809
(lp833
NaS'Abs'
p834
aS'Arg'
p835
aS'@@condeq_unop'
p836
asg537
(lp837
I01
aI00
aS'@@visu'
p838
asg434
(lp839
I01
aI00
ag810
asg811
(lp840
NaS'@@solver_subtree'
p841
asg812
(lp842
I01
aI00
aS'@@subtract_after'
p843
asg439
(lp844
I01
ag813
asg441
(lp845
Na(lp846
I5
aI2
aa(lp847
I2
aI2
aa(lp848
I3
aI3
aaS'@@num_cells'
p849
assg101
Nsg102
S'2006-02-14 18:46'
p850
sg104
S'MG_JEN_Cohset::insert_solver()'
p851
sg106
S'MG_JEN_Cohsetinsert_solver'
p852
sg108
S'insert_solver'
p853
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p854
sg112
I00
sg113
g850
sg114
(dp855
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p856
ssg118
(lp857
g26
ag811
ag434
ag441
ag439
ag430
ag809
ag537
ag812
ag807
aS'./MG_JEN_Cohset.solver_subtree()'
p858
assg441
g849
sg858
(dp859
S'rmin'
p860
Nsg537
I01
sS'epsilon'
p861
F0.01
sS'rmax'
p862
NsS'usesvd'
p863
I01
sS'debug_level'
p864
I10
sS'solvegroup'
p865
(lp866
sg26
(dp867
g28
g858
sg29
(dp868
g860
S'if specified, only use baselines>=rmin'
p869
sg537
S'if True, include visualisation'
p870
sg861
S'iteration control criterion'
p871
sg862
S'if specified, only use baselines<=rmax'
p872
sg863
S'if True, use Singular Value Decomposition (SVD)'
p873
sg864
S'solver debug_level'
p874
sg865
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p875
sg441
g442
sS'history'
p876
S'if True, include history collection of metrics'
p877
sS'num_iter'
p878
S'max number of iterations'
p879
sS'condition'
p880
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p881
sS'colin_factor'
p882
S'colinearity factor'
p883
ssg46
g47
sg48
S'MG_JEN_Cohset'
p884
sg50
(dp885
g860
I134
sg537
I142
sg861
I138
sg862
I135
sg863
I140
sg865
I132
sg441
I136
sg876
I143
sg878
I137
sg880
I133
sg882
I139
ssg52
(dp886
g864
I01
sg441
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p887
sg56
S'20dec2005'
p888
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p889
sg62
(dp890
g863
I00
sg876
I00
sg537
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p891
sg66
(dp892
g860
(lp893
NaI100
aI200
aI500
aS'@@rmin'
p894
asg537
(lp895
I01
aI00
aS'@@visu'
p896
asg861
(lp897
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p898
asg862
(lp899
NaI500
aI1000
aI2000
aS'@@rmax'
p900
asg863
(lp901
I01
aI00
aS'@@usesvd'
p902
asg864
(lp903
I10
aS'@@debug_level'
p904
asg865
(lp905
g866
a(lp906
g280
aa(lp907
S'Ggain'
p908
aa(lp909
S'Gphase'
p910
aa(lp911
S'Gpol1'
p912
aa(lp913
S'Gpol2'
p914
aa(lp915
g280
aS'stokesI'
p916
aa(lp917
g916
aa(lp918
S'stokesIQU'
p919
aa(lp920
S'stokesIQUV'
p921
aa(lp922
g280
ag291
aa(lp923
g291
aa(lp924
S'dang'
p925
aa(lp926
S'dell'
p927
aa(lp928
S'Dreal'
p929
aa(lp930
S'Dimag'
p931
aa(lp932
g280
ag291
ag284
aa(lp933
g284
aa(lp934
g280
ag282
aa(lp935
g282
aa(lp936
S'Breal'
p937
aa(lp938
S'Bimag'
p939
aa(lp940
S'Bpol1'
p941
aa(lp942
S'Bpol2'
p943
aaS'@@solvegroup'
p944
asg441
(lp945
Na(lp946
I5
aI2
aa(lp947
I2
aI2
aa(lp948
I3
aI3
aaS'@@num_cells'
p949
asg876
(lp950
I01
aI00
aS'@@history'
p951
asg878
(lp952
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p953
asg880
(lp954
NaS'Gphase_X_sum=0.0'
p955
aS'Gphase_Y_sum=0.0'
p956
a(lp957
g955
ag956
aa(lp958
S'Gphase_X_first=0.0'
p959
aS'Gphase_Y_first=0.0'
p960
aa(lp961
S'Gphase_X_last=0.0'
p962
aS'Gphase_Y_last=0.0'
p963
aa(lp964
S'Dimag_X_sum=0.0'
p965
aS'Dimag_Y_sum=0.0'
p966
aa(lp967
S'Dreal_X_product=1.0'
p968
aS'Dreal_Y_product=1.0'
p969
aaS'dang_sum=0.0'
p970
a(lp971
S'Bimag_X_sum=0.0'
p972
aS'Bimag_Y_sum=0.0'
p973
aa(lp974
S'Breal_X_product=1.0'
p975
aS'Breal_Y_product=1.0'
p976
aaS'@@condition'
p977
asg882
(lp978
F1e-08
aF0.0
aS'@@colin_factor'
p979
assg101
Nsg102
S'2006-02-14 18:46'
p980
sg104
S'MG_JEN_Cohset::solver_subtree()'
p981
sg106
S'MG_JEN_Cohsetsolver_subtree'
p982
sg108
S'solver_subtree'
p983
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p984
sg112
I00
sg113
g980
sg114
(dp985
g253
S'.modify( num_iter ): 20  ->  5'
p986
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p987
ssg118
(lp988
g26
ag865
ag880
ag860
ag862
ag441
ag878
ag861
ag882
ag863
ag864
ag537
ag876
assg441
Nsg876
I01
sg878
I5
sg880
Nsg882
F1e-08
sss.