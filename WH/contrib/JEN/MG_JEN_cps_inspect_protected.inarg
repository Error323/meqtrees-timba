(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stddev_Breal'
p7
F0.0
sg1
S'@@polrep'
p8
sS'stations'
p9
S'@@stations'
p10
sS'c00_Bimag'
p11
F0.0
sS'subtile_size_Bimag'
p12
S'@subtile_size_Breal'
p13
sS'fdeg_Breal'
p14
I5
sS'tdeg_Breal'
p15
I0
sS'fdeg_Bimag'
p16
S'@fdeg_Breal'
p17
sS'uvplane_effect'
p18
S'@@uvplane_effect'
p19
sS'subtile_size_Breal'
p20
NsS'_JEN_inarg_CTRL_record:'
p21
(dp22
S'target_definition'
p23
S'MG_JEN_Joneset::BJones()'
p24
sS'localscope'
p25
g5
sS'JEN_inargGUI_ident'
p26
(dp27
g14
I84
sg12
I87
sg15
I82
sg16
I85
sg20
I86
sS'tdeg_Bimag'
p28
I83
ssS'hide'
p29
(dp30
g1
I01
sg9
I01
sg11
I01
sS'stddev_Bimag'
p31
I01
sg18
I01
sS'parmtable'
p32
I01
sS'c00_Breal'
p33
I01
sg7
I01
sS'@Jsequence'
p34
I01
ssS'description'
p35
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p36
sS'target_dir'
p37
S'.'
p38
sS'oneliner'
p39
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-12 18:48'
p40
sS'target_function'
p41
S'BJones'
p42
sS'choice'
p43
(dp44
g7
(lp45
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p46
asg1
(lp47
g2
aS'circular'
p48
ag8
asg9
(lp49
(lp50
I0
aI1
aI2
aI3
aI4
aa(lp51
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp52
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp53
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p54
ag10
asg11
(lp55
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p56
asg12
(lp57
g13
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p58
asg14
(lp59
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p60
asg15
(lp61
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p62
asg16
(lp63
I3
aI4
aI5
aI6
ag17
aS'@@fdeg_Bimag'
p64
asg18
(lp65
I00
ag19
asg20
(lp66
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p67
asg33
(lp68
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p69
asg32
(lp70
NaS'test'
p71
aS'@@parmtable'
p72
asg28
(lp73
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p74
aS'@@tdeg_Bimag'
p75
asg31
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p77
asg34
(lp78
S'BJones'
p79
aS'@@@Jsequence'
p80
assS'qual'
p81
NsS'protected'
p82
I00
sS'datetime_defined'
p83
S'2006-03-12 18:48'
p84
sS'version'
p85
S'16dec2005'
p86
sS'target_module'
p87
S'MG_JEN_Joneset'
p88
sS'inarg_specific'
p89
S'** Specific description of inarg record for: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-12 18:48'
p90
sS'mutable'
p91
(dp92
g18
I00
sg32
I00
sg1
I00
sg9
I00
ssS'last_edited'
p93
g84
sS'order'
p94
(lp95
g21
ag9
ag1
ag34
ag32
ag18
ag15
ag28
ag14
ag16
ag20
ag12
ag33
ag11
ag7
ag31
asS'help'
p96
(dp97
g7
S'scatter in default c00 funklet values'
p98
sg1
S'polarisation representation'
p99
sg9
S'the (subset of) stations to be used'
p100
sg11
S'default c00 funklet value'
p101
sg12
S'sub-tile size (None=entire tile)'
p102
sg14
S'degree of freq polynomial'
p103
sg15
S'degree of time polynomial'
p104
sg16
g103
sg18
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p105
sg20
g102
sg33
g101
sg32
S'name of the MeqParm table to be used'
p106
sg28
g104
sg31
g98
sg34
S'list membership indication (used in JEN_inargGui)'
p107
ssS'barescope'
p108
S'MG_JEN_JonesetBJones'
p109
ssg32
g72
sg28
g74
sg31
F0.0
sg33
F1.0
sg34
g79
ssg1
S'@@polrep'
p110
sg9
S'@@stations'
p111
sS'./MG_JEN_Joneset.DJones_WSRT()'
p112
(dp113
S'fdeg_Dang'
p114
I0
sS'c00_Dang'
p115
F0.0
sg1
S'@@polrep'
p116
sS'stddev_Dell'
p117
F0.0
sg9
S'@@stations'
p118
sS'fdeg_Dell'
p119
S'@fdeg_Dang'
p120
sS'coupled_XY_Dell'
p121
I01
sS'stddev_Dang'
p122
F0.0
sg18
S'@@uvplane_effect'
p123
sg32
S'@@parmtable'
p124
sg21
(dp125
g23
S'MG_JEN_Joneset::DJones_WSRT()'
p126
sg25
g112
sg26
(dp127
g114
I104
sg119
I105
sg121
I99
sS'tdeg_Dell'
p128
I103
sS'coupled_XY_Dang'
p129
I98
sS'subtile_size_Dang'
p130
I106
sS'subtile_size_Dell'
p131
I107
sS'tdeg_Dang'
p132
I102
ssg29
(dp133
g115
I01
sg1
I01
sg117
I01
sg9
I01
sS'c00_Dell'
p134
I01
sg122
I01
sg18
I01
sg32
I01
sS'c00_PZD'
p135
I01
sg34
I01
ssg35
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p136
sg37
g38
sg39
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-12 18:48'
p137
sg41
S'DJones_WSRT'
p138
sg43
(dp139
g114
(lp140
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p141
asg115
(lp142
F0.0
aF0.10000000000000001
aS'@@c00_Dang'
p143
asg1
(lp144
g2
ag48
ag116
asg117
(lp145
F0.0
aF0.10000000000000001
aS'@@stddev_Dell'
p146
asg9
(lp147
(lp148
I0
aI1
aI2
aI3
aI4
aa(lp149
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp150
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp151
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag54
ag118
asg119
(lp152
I0
aI1
aI2
aI3
ag120
aS'@@fdeg_Dell'
p153
asg121
(lp154
I01
aI00
aS'@@coupled_XY_Dell'
p155
asg122
(lp156
F0.0
aF0.10000000000000001
aS'@@stddev_Dang'
p157
asg18
(lp158
I00
ag123
asg32
(lp159
Nag71
ag124
asg128
(lp160
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p161
aS'@@tdeg_Dell'
p162
asg134
(lp163
F0.0
aF0.10000000000000001
aS'@@c00_Dell'
p164
asg129
(lp165
I01
aI00
aS'@@coupled_XY_Dang'
p166
asg135
(lp167
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p168
asg130
(lp169
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p170
asg131
(lp171
S'@subtile_size_Dang'
p172
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p173
asg132
(lp174
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p175
asg34
(lp176
S'DJones_WSRT'
p177
aS'@@@Jsequence'
p178
assg81
Nsg82
I00
sg83
S'2006-03-12 18:48'
p179
sg85
g86
sg87
S'MG_JEN_Joneset'
p180
sS'editable'
p181
(dp182
g129
I00
sg121
I00
ssg89
S'** Specific description of inarg record for: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-12 18:48'
p183
sg91
(dp184
g18
I00
sg32
I00
sg1
I00
sg9
I00
ssg93
g179
sg94
(lp185
g21
ag9
ag1
ag34
ag129
ag121
ag32
ag18
ag132
ag128
ag114
ag119
ag130
ag131
ag115
ag134
ag135
ag122
ag117
asg96
(dp186
g114
S'degree of freq polynomial'
p187
sg115
S'default c00 funklet value'
p188
sg1
g99
sg117
S'scatter in default c00 funklet values'
p189
sg9
g100
sg119
g187
sg121
S'if True, XDell = -YDell per station'
p190
sg122
g189
sg18
g105
sg32
g106
sg128
S'degree of time polynomial'
p191
sg134
g188
sg129
S'if True, XDang = YDang per station'
p192
sg135
g188
sg130
S'sub-tile size (None=entire tile)'
p193
sg131
g193
sg132
g191
sg34
g107
ssg108
S'MG_JEN_JonesetDJones_WSRT'
p194
ssg128
g161
sg134
F0.0
sg129
I01
sg135
F0.0
sg130
Nsg131
g172
sg132
I0
sg34
g177
ssS'./MG_JEN_Joneset.FJones()'
p195
(dp196
S'c00_RM'
p197
F0.0
sg1
S'@@polrep'
p198
sg9
S'@@stations'
p199
sS'tdeg_RM'
p200
I0
sS'fdeg_RM'
p201
I2
sg32
S'@@parmtable'
p202
sg21
(dp203
g23
S'MG_JEN_Joneset::FJones()'
p204
sg25
g195
sg26
(dp205
g201
I74
sS'subtile_size_RM'
p206
I75
sg200
I73
ssg29
(dp207
g197
I01
sg1
I01
sg9
I01
sg18
I01
sg32
I01
sg34
I01
ssg35
S'defines diagonal FJones Faraday rotation matrices'
p208
sg37
g38
sg39
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-12 18:48'
p209
sg41
S'FJones'
p210
sg43
(dp211
g197
(lp212
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p213
asg1
(lp214
g2
ag48
ag198
asg18
(lp215
I00
aS'@@uvplane_effect'
p216
asg200
(lp217
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p218
asg9
(lp219
(lp220
I0
aI1
aI2
aI3
aI4
aa(lp221
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp222
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp223
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag54
ag199
asg201
(lp224
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p225
asg32
(lp226
Nag71
ag202
asg206
(lp227
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p228
asg34
(lp229
S'FJones'
p230
aS'@@@Jsequence'
p231
assg81
Nsg82
I00
sg83
S'2006-03-12 18:48'
p232
sg85
g86
sg87
S'MG_JEN_Joneset'
p233
sg89
S'** Specific description of inarg record for: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-12 18:48'
p234
sg91
(dp235
g18
I00
sg32
I00
sg1
I00
sg9
I00
ssg93
g232
sg94
(lp236
g21
ag9
ag1
ag34
ag32
ag18
ag200
ag201
ag206
ag197
asg96
(dp237
g197
S'default c00 funklet value'
p238
sg1
g99
sg18
g105
sg200
S'degree of time polynomial'
p239
sg9
g100
sg201
S'degree of freq polynomial'
p240
sg32
g106
sg206
S'sub-tile size (None=entire tile)'
p241
sg34
g107
ssg108
S'MG_JEN_JonesetFJones'
p242
ssg206
I1
sg18
g216
sg34
g230
ssg18
S'@@uvplane_effect'
p243
sg32
S'@@parmtable'
p244
sg21
(dp245
g23
S'MG_JEN_Cohset::Jones()'
p246
sg25
g3
sg26
(dp247
S'Jsequence'
p248
I51
ssg29
(dp249
g18
I01
sg9
I01
sg32
I01
sg1
I01
sg34
I01
ssg108
S'MG_JEN_CohsetJones'
p250
sg37
g38
sg35
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p251
sg39
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-12 18:48'
p252
sg41
S'Jones'
p253
sg43
(dp254
g1
(lp255
g2
ag48
ag110
asg9
(lp256
(lp257
I0
aI1
aI2
aI3
aI4
aa(lp258
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp259
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp260
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag54
ag111
asg18
(lp261
I00
ag243
asg32
(lp262
Nag71
ag244
asg248
(lp263
(lp264
S'GJones'
p265
aa(lp266
g79
aa(lp267
g230
aa(lp268
S'KJones'
p269
aa(lp270
g177
aa(lp271
g265
ag177
aa(lp272
S'JJones'
p273
aa(lp274
aS'@@Jsequence'
p275
asg34
(lp276
NaS'@@@Jsequence'
p277
assg81
Nsg82
I00
sg83
S'2006-03-12 18:48'
p278
sg85
S'25dec2005'
p279
sg87
S'MG_JEN_Cohset'
p280
sg89
S'** Specific description of inarg record for: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-12 18:48'
p281
sS'MESSAGE'
p282
(dp283
S'1'
p284
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p285
sS'0'
p286
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p287
sS'3'
p288
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p289
sS'2'
p290
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p291
sS'5'
p292
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p293
sS'4'
p294
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p295
ssg93
g278
sg91
(dp296
g18
I00
sg32
I00
sg1
I00
sg9
I00
ssg94
(lp297
g21
ag9
ag1
ag34
ag32
ag18
ag248
aS'./MG_JEN_Joneset.GJones()'
p298
ag195
ag5
aS'./MG_JEN_Joneset.KJones()'
p299
ag112
aS'./MG_JEN_Joneset.JJones()'
p300
asg96
(dp301
g1
g99
sg9
g100
sg18
g105
sg32
g106
sg248
S'sequence of Jones matrices to be used'
p302
sg34
g107
sssg299
(dp303
g34
g269
sg1
S'@@polrep'
p304
sg21
(dp305
g23
S'MG_JEN_Joneset::KJones()'
p306
sg25
g299
sg26
(dp307
sg29
(dp308
g34
I01
sg1
I01
sg9
I01
ssg35
S'defines diagonal KJones matrices for DFT Fourier kernel'
p309
sg37
g38
sg39
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-12 18:48'
p310
sg41
S'KJones'
p311
sg43
(dp312
g34
(lp313
g269
aS'@@@Jsequence'
p314
asg1
(lp315
g2
ag48
ag304
asg9
(lp316
(lp317
I0
aI1
aI2
aI3
aI4
aa(lp318
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp319
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp320
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag54
aS'@@stations'
p321
assg81
Nsg82
I00
sg83
S'2006-03-12 18:48'
p322
sg85
S'12dec2005'
p323
sg87
S'MG_JEN_Joneset'
p324
sg89
S'** Specific description of inarg record for: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-12 18:48'
p325
sg91
(dp326
g1
I00
sg9
I00
ssg93
g322
sg94
(lp327
g21
ag9
ag1
ag34
asg96
(dp328
g34
g107
sg1
g99
sg9
g100
ssg108
S'MG_JEN_JonesetKJones'
p329
ssg9
g321
ssg300
(dp330
S'subtile_size_Jimag'
p331
S'@subtile_size_Jreal'
p332
sS'tdeg_Jimag'
p333
S'@tdeg_Jreal'
p334
sg1
S'@@polrep'
p335
sS'tdeg_Jreal'
p336
I0
sg9
S'@@stations'
p337
sS'diagonal_only'
p338
I00
sS'subtile_size_Jreal'
p339
NsS'c00_Jreal'
p340
F1.0
sg18
S'@@uvplane_effect'
p341
sS'all4_always'
p342
Nsg32
S'@@parmtable'
p343
sS'stddev_Jimag'
p344
F0.0
sg21
(dp345
g23
S'MG_JEN_Joneset::JJones()'
p346
sg25
g300
sg26
(dp347
g331
I125
sg333
I121
sg336
I120
sg338
I116
sg342
I117
sS'fdeg_Jimag'
p348
I123
sg339
I124
sS'fdeg_Jreal'
p349
I122
ssg29
(dp350
g1
I01
sg9
I01
sS'c00_Jimag'
p351
I01
sg340
I01
sg18
I01
sg32
I01
sS'stddev_Jreal'
p352
I01
sg344
I01
sg34
I01
ssg35
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p353
sg37
g38
sg39
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-12 18:48'
p354
sg41
S'JJones'
p355
sg43
(dp356
g331
(lp357
g332
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p358
asg349
(lp359
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p360
asg333
(lp361
I0
aI1
aI2
aI3
ag334
aS'@@tdeg_Jimag'
p362
asg1
(lp363
g2
ag48
ag335
asg336
(lp364
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p365
asg9
(lp366
(lp367
I0
aI1
aI2
aI3
aI4
aa(lp368
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp369
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp370
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag54
ag337
asg338
(lp371
I01
aI00
aS'@@diagonal_only'
p372
asg340
(lp373
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Jreal'
p374
asg18
(lp375
I00
ag341
asg342
(lp376
Na(lp377
I14
aaS'WSRT/WHAT'
p378
aS'@@all4_always'
p379
asg32
(lp380
Nag71
ag343
asg348
(lp381
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p382
aS'@@fdeg_Jimag'
p383
asg351
(lp384
F0.0
aF0.10000000000000001
aS'@@c00_Jimag'
p385
asg339
(lp386
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p387
asg344
(lp388
F0.0
aF0.10000000000000001
aS'@@stddev_Jimag'
p389
asg352
(lp390
F0.0
aF0.10000000000000001
aS'@@stddev_Jreal'
p391
asg34
(lp392
g273
aS'@@@Jsequence'
p393
assg81
Nsg82
I00
sg83
S'2006-03-12 18:48'
p394
sg85
S'14feb2006'
p395
sg87
S'MG_JEN_Joneset'
p396
sg181
(dp397
g338
I00
ssg89
S'** Specific description of inarg record for: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-12 18:48'
p398
sg91
(dp399
g18
I00
sg32
I00
sg1
I00
sg9
I00
ssg93
g394
sg94
(lp400
g21
ag9
ag1
ag34
ag338
ag342
ag32
ag18
ag336
ag333
ag349
ag348
ag339
ag331
ag340
ag351
ag352
ag344
asg96
(dp401
g331
S'sub-tile size (None=entire tile)'
p402
sg349
S'degree of freq polynomial'
p403
sg333
S'degree of time polynomial'
p404
sg1
g99
sg336
g404
sg9
g100
sg338
S'if True, solve for diagonal (11,22) elements only'
p405
sg340
S'default c00 funklet value'
p406
sg18
g105
sg342
S'stations for which all 4 elements will always be solved for'
p407
sg32
g106
sg348
g403
sg351
g406
sg339
g402
sg344
S'scatter in default c00 funklet values'
p408
sg352
g408
sg34
g107
ssg108
S'MG_JEN_JonesetJJones'
p409
ssg351
F0.0
sg34
g273
sg352
F0.0
sg348
g382
sg349
I0
ssg298
(dp410
g1
S'@@polrep'
p411
sS'fdeg_Ggain'
p412
I0
sS'c00_Gphase'
p413
F0.0
sg34
g265
sS'subtile_size_Ggain'
p414
I1
sS'tdeg_Gphase'
p415
S'@tdeg_Ggain'
p416
sg9
S'@@stations'
p417
sS'tdeg_Ggain'
p418
I0
sS'fdeg_Gphase'
p419
S'@fdeg_Ggain'
p420
sg32
S'@@parmtable'
p421
sS'stddev_Ggain'
p422
F0.0
sS'subtile_size_Gphase'
p423
S'@subtile_size_Ggain'
p424
sS'c00_Ggain'
p425
F1.0
sS'stddev_Gphase'
p426
F0.0
sS'Gpolar'
p427
I00
sg18
S'@@uvplane_effect'
p428
sg21
(dp429
g23
S'MG_JEN_Joneset::GJones()'
p430
sg25
g298
sg26
(dp431
g412
I60
sg414
I62
sg415
I59
sg418
I58
sg419
I61
sg423
I63
sg427
I55
ssg29
(dp432
g1
I01
sg9
I01
sg422
I01
sg413
I01
sg18
I01
sg32
I01
sg425
I01
sg426
I01
sg34
I01
ssg35
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p433
sg37
g38
sg39
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-12 18:48'
p434
sg41
S'GJones'
p435
sg43
(dp436
g1
(lp437
g2
ag48
ag411
asg9
(lp438
(lp439
I0
aI1
aI2
aI3
aI4
aa(lp440
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp441
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp442
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag54
ag417
asg412
(lp443
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p444
asg413
(lp445
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p446
asg414
(lp447
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p448
asg415
(lp449
I0
aI1
aI2
aI3
ag416
aS'@@tdeg_Gphase'
p450
asg418
(lp451
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p452
asg419
(lp453
I0
aI1
aI2
aI3
ag420
aS'@@fdeg_Gphase'
p454
asg32
(lp455
Nag71
ag421
asg422
(lp456
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p457
asg423
(lp458
g424
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p459
asg425
(lp460
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p461
asg426
(lp462
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p463
asg427
(lp464
I01
aI00
aS'@@Gpolar'
p465
asg18
(lp466
I00
ag428
asg34
(lp467
g265
aS'@@@Jsequence'
p468
assg81
Nsg82
I00
sg83
S'2006-03-12 18:48'
p469
sg85
S'15dec2005'
p470
sg87
S'MG_JEN_Joneset'
p471
sg181
(dp472
g427
I00
ssg89
S'** Specific description of inarg record for: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-12 18:48'
p473
sg91
(dp474
g18
I00
sg32
I00
sg1
I00
sg9
I00
ssg93
g469
sg94
(lp475
g21
ag9
ag1
ag34
ag427
ag32
ag18
ag418
ag415
ag412
ag419
ag414
ag423
ag425
ag413
ag422
ag426
asg96
(dp476
g1
g99
sg9
g100
sg412
S'degree of freq polynomial'
p477
sg413
S'default c00 funklet value'
p478
sg414
S'sub-tile size (None=entire tile)'
p479
sg415
S'degree of time polynomial'
p480
sg418
g480
sg419
g477
sg32
g106
sg422
S'scatter in default c00 funklet values'
p481
sg423
g479
sg425
g478
sg426
g481
sg427
S'if True, use MeqPolar, otherwise MeqToComplex'
p482
sg18
g105
sg34
g107
ssg108
S'MG_JEN_JonesetGJones'
p483
sssg248
(lp484
sg34
NssS'_JEN_inarg_separator_record:_1'
p485
(dp486
S'txt'
p487
S'operations on input uv-data'
p488
ssS'./MG_JEN_Cohset.predict()'
p489
(dp490
g9
S'@@stations'
p491
sg1
S'@@polrep'
p492
sg21
(dp493
g23
S'MG_JEN_Cohset::predict()'
p494
sg25
g489
sg26
(dp495
sg29
(dp496
g9
I01
sg1
I01
sg34
I01
ssg108
S'MG_JEN_Cohsetpredict'
p497
sg37
g38
sg35
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p498
sg39
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-12 18:48'
p499
sg41
S'predict'
p500
sg43
(dp501
g9
(lp502
(lp503
I0
aI1
aI2
aI3
aI4
aa(lp504
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp505
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp506
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag54
ag491
asg1
(lp507
g2
ag48
ag492
asg34
(lp508
NaS'@@@Jsequence'
p509
assg81
Nsg82
I00
sg83
S'2006-03-12 18:48'
p510
sg85
g279
sg87
S'MG_JEN_Cohset'
p511
sg89
S'** Specific description of inarg record for: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-12 18:48'
p512
sg91
(dp513
g1
I00
sg9
I00
ssg93
g510
sg94
(lp514
g21
ag9
ag1
ag34
asg96
(dp515
g9
g100
sg1
g99
sg34
g107
sssg34
NssS'script_name'
p516
S'MG_JEN_cps'
p517
sS'ms_name'
p518
S'D1.MS'
p519
sg32
Nsg21
(dp520
g25
S'./MG_JEN_cps.'
p521
sg96
(dp522
g1
g99
sS'master_reqseq'
p523
S'if True, use a master reqseq for solver(s)'
p524
sg9
g100
sS'insert_flagger'
p525
S'if True, insert a flagger'
p526
sS'redun'
p527
S'if True, redundant spacing calibration'
p528
sS'insert_solver'
p529
S'if True, insert a solver'
p530
sg518
S'name of the (AIPS++) Measurement Set'
p531
sS'chain_solvers'
p532
S'if True, chain the solvers (recommended)'
p533
sS'num_cells'
p534
S'if defined, ModRes argument [ntime,nfreq]'
p535
sg32
g106
sS'tile_size'
p536
S'(inputrec) size (in time-slots) of the input data-tile'
p537
sg18
g105
sg34
g107
ssS'reference'
p538
I00
sg37
g38
sg87
S'MG_JEN_cps'
p539
sg26
(dp540
g1
I7
sg9
I6
sg525
I2
sg527
I13
sg529
I1
sg518
I4
sg32
I9
sg516
I0
sg534
I14
sg536
I5
sg18
I10
ssg29
(dp541
g1
I00
sg523
I01
sg9
I00
sS'last_changed'
p542
I01
sg527
I00
sg18
I00
sg532
I01
sg534
I00
sg34
I01
ssS'browse'
p543
(dp544
g518
S'*.MS'
p545
ssg85
g470
sg35
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p546
sg181
(dp547
g542
I00
sg525
I00
sg523
I00
sg529
I00
sg527
I00
ssg39
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p548
sg43
(dp549
g1
(lp550
g2
ag48
aS'@@polrep'
p551
asg523
(lp552
I01
aI00
aS'@@master_reqseq'
p553
asg9
(lp554
(lp555
I0
aI1
aI2
aI3
aI4
aa(lp556
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp557
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp558
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag54
aS'@@stations'
p559
asg525
(lp560
I01
aI00
aS'@@insert_flagger'
p561
asg542
(lp562
S'd30jan2006'
p563
aS'@@last_changed'
p564
asg529
(lp565
I01
aI00
aS'@@insert_solver'
p566
asg527
(lp567
I01
aI00
aS'@@redun'
p568
asg518
(lp569
g519
aS'@@ms_name'
p570
asg532
(lp571
I01
aS'@@chain_solvers'
p572
asg534
(lp573
Na(lp574
I5
aI2
aa(lp575
I2
aI2
aa(lp576
I3
aI3
aaS'@@num_cells'
p577
asg32
(lp578
Nag71
aS'@@parmtable'
p579
asg536
(lp580
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p581
asg18
(lp582
I00
aS'@@uvplane_effect'
p583
asg34
(lp584
NaS'@@@Jsequence'
p585
assg93
S'2006-03-12 18:48'
p586
sS'HISTORY'
p587
(dp588
g284
S'2006-03-12 18:48: Derived from: MG_JEN_cps_inspect.inarg'
p589
sg286
S'2006-03-12 18:48: Derived from: MG_JEN_cps.inarg'
p590
ssg23
g517
sg89
S'Modify MG_JEN_cps inarg for inspect operation(s)'
p591
sS'save_file'
p592
S'MG_JEN_cps_inspect_protected.inarg'
p593
sS'file_filter'
p594
S'MG_JEN_cps*.inarg'
p595
sg41
S''
p596
sg82
I01
sg83
g586
sg282
(dp597
S'11'
p598
S'.modify( tile_size ): 10  ->  1'
p599
sS'10'
p600
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p601
sS'13'
p602
S".modify():   ** OK ** (['tile_size', 'insert_solver'])"
p603
sS'12'
p604
S'.modify( insert_solver ): True  ->  False'
p605
sg284
S".modify():   ** OK ** (['uvplane_effect'])"
p606
sg286
S'.modify( uvplane_effect ): False  ->  True'
p607
sg288
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p608
sg290
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p609
sg292
S'** JEN_inarg.separator(): : insert a solver'
p610
sg294
S'** JEN_inarg.separator(): : operations on input uv-data'
p611
sS'7'
p612
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p613
sS'6'
p614
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p615
sS'9'
p616
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p617
sS'8'
p618
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p619
ssg94
(lp620
g21
ag516
ag529
ag525
ag542
ag518
ag536
ag9
ag1
ag34
ag32
ag18
ag532
ag523
ag527
ag534
aS'./MG_JEN_exec.stream_control()'
p621
aS'./MG_JEN_Cohset.make_spigots()'
p622
ag485
aS'_JEN_inarg_separator_record:_2'
p623
aS'./MG_JEN_Sixpack.newstar_source()'
p624
ag3
ag489
aS'./MG_JEN_Cohset.insert_solver()'
p625
aS'./MG_JEN_Cohset.make_sinks()'
p626
assg626
(dp627
S'fullDomainMux'
p628
I01
sS'output_col'
p629
S'PREDICT'
p630
sS'visu'
p631
I01
sS'flag'
p632
I00
sg21
(dp633
g23
S'MG_JEN_Cohset::make_sinks()'
p634
sg25
g626
sg26
(dp635
g632
I161
sg631
I160
sg628
I162
sg629
I158
sS'visu_array_config'
p636
I159
ssg89
S'** Specific description of inarg record for: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-12 18:48'
p637
sg108
S'MG_JEN_Cohsetmake_sinks'
p638
sg37
g38
sg35
S'Make sink nodes in the given Cohset object'
p639
sg39
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-12 18:48'
p640
sg41
S'make_sinks'
p641
sg43
(dp642
g632
(lp643
I01
aI00
aS'@@flag'
p644
asg636
(lp645
I01
aI00
aS'@@visu_array_config'
p646
asg629
(lp647
g630
aS'RESIDUALS'
p648
aS'DATA'
p649
aS'@@output_col'
p650
asg628
(lp651
I01
aI00
aS'@@fullDomainMux'
p652
asg631
(lp653
I01
aI00
aS'@@visu'
p654
assg81
Nsg85
g279
sg83
S'2006-03-12 18:48'
p655
sg87
S'MG_JEN_Cohset'
p656
sg181
(dp657
g632
I00
sg636
I00
sg628
I00
sg631
I00
ssg82
I00
sg93
g655
sg94
(lp658
g21
ag629
ag636
ag631
ag632
ag628
asg96
(dp659
g632
S'if True, insert a flagger for the output uv-data'
p660
sg636
S'if True, visualise the array config (from MS)'
p661
sg629
S'name of the logical (VisTile) output column'
p662
sg628
S'if True, attach an extra VisDataMux'
p663
sg631
S'if True, visualise the output uv-data'
p664
sssg636
I01
ssg536
I1
sg622
(dp665
S'MS_corr_index'
p666
(lp667
I0
aI1
aI2
aI3
asg632
I00
sg21
(dp668
g23
S'MG_JEN_Cohset::make_spigots()'
p669
sg25
g622
sg26
(dp670
g632
I26
sg666
I24
sg631
I25
ssg29
(dp671
S'input_col'
p672
I01
ssg108
S'MG_JEN_Cohsetmake_spigots'
p673
sg37
g38
sg35
S'Make spigot nodes in the given Cohset object'
p674
sg39
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-12 18:48'
p675
sg41
S'make_spigots'
p676
sg43
(dp677
g632
(lp678
I01
aI00
aS'@@flag'
p679
asg666
(lp680
(lp681
I0
aI1
aI2
aI3
aa(lp682
I0
aI-1
aI-1
aI1
aa(lp683
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p684
asg672
(lp685
g649
ag630
ag648
aS'@@input_col'
p686
asg631
(lp687
I01
aI00
aS'@@visu'
p688
assg81
Nsg85
g279
sg83
S'2006-03-12 18:48'
p689
sg87
S'MG_JEN_Cohset'
p690
sg181
(dp691
g632
I00
sg631
I00
ssg89
S'** Specific description of inarg record for: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-12 18:48'
p692
sg82
I00
sg93
g689
sg94
(lp693
g21
ag672
ag666
ag631
ag632
asg96
(dp694
g632
S'if True, insert a flagger for the input uv-data'
p695
sg666
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p696
sg672
S'name of the logical (VisTile) input column'
p697
sg631
S'if True, visualise the input uv-data'
p698
sssg672
g649
sg631
I01
ssg34
Nsg525
I00
sg542
g563
sg18
I01
sg534
Nsg624
(dp699
S'f0'
p700
F1000000.0
sS'major'
p701
F0.0
sS'unsolvable'
p702
I00
sS'from_LSM'
p703
NsS'name'
p704
NsS'I0'
p705
F1.0
sS'SI'
p706
NsS'Qpct'
p707
NsS'punit'
p708
S'unpol'
p709
sS'fsr_trace'
p710
I01
sS'shape'
p711
S'point'
p712
sS'pa'
p713
F0.0
sS'RA'
p714
F4.3570000000000002
sg32
NsS'RM'
p715
NsS'Upct'
p716
NsS'Dec'
p717
F1.0920000000000001
sS'Vpct'
p718
NsS'minor'
p719
F0.0
sg21
(dp720
g25
g624
sg96
(dp721
g700
S'reference freq (Hz): I=I0 @ f=f0'
p722
sg701
S'major axis (arcsec)'
p723
sg702
S'if True, do NOT store solvegroup/parmgroup info'
p724
sg703
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p725
sg705
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p726
sg706
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p727
sg707
S'Stokes Q (percentage of I)'
p728
sg708
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p729
sg711
S'source shape'
p730
sg713
S'position angle (rad)'
p731
sg710
S'If True, attach to forest state record'
p732
sg32
S'name of the MeqParm table (AIPS++)'
p733
sg715
S'Intrinsic Rotation Measure (rad/m2)'
p734
sg716
S'Stokes U (percentage of I)'
p735
sg717
S'Declination (rad, J2000)'
p736
sg718
S'Stokes V (percentage of I)'
p737
sg719
S'minor axis (arcsec)'
p738
sg714
S'Right Ascension (rad, J2000)'
p739
ssg37
g38
sg87
S'MG_JEN_Sixpack'
p740
sg26
(dp741
g717
I40
sg703
I28
sg705
I32
sg707
I33
sg708
I27
sg706
I37
sg32
I30
sg714
I39
sg715
I36
sg716
I34
sg718
I35
ssg29
(dp742
g700
I01
sg701
I01
sg702
I01
sg703
I00
sg710
I01
sg708
I00
sg711
I01
sg713
I01
sg719
I01
sg704
I01
ssg543
(dp743
g703
S'*.lsm'
p744
ssg85
S'10feb2006'
p745
sg35
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p746
sg181
(dp747
g702
I00
sg710
I00
ssg39
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-12 18:48'
p748
sg43
(dp749
g700
(lp750
F1000000.0
aS'@@f0'
p751
asg701
(lp752
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p753
asg702
(lp754
I01
aI00
aS'@@unsolvable'
p755
asg703
(lp756
NaS'@@from_LSM'
p757
asg705
(lp758
F1.0
aF10.0
aS'@@I0'
p759
asg706
(lp760
NaF-0.69999999999999996
a(lp761
F0.44700000000000001
aF-0.184
aaS'@@SI'
p762
asg707
(lp763
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p764
asg708
(lp765
g709
aS'unpol2'
p766
aS'unpol10'
p767
aS'QUV'
p768
aS'QU'
p769
aS'Qonly'
p770
aS'Uonly'
p771
aS'Vonly'
p772
aS'3c147'
p773
aS'3c286'
p774
aS'3c48'
p775
aS'3c295'
p776
aS'RMtest'
p777
aS'SItest'
p778
aS'@@punit'
p779
asg710
(lp780
I01
aI00
aS'@@fsr_trace'
p781
asg711
(lp782
g712
aS'ell.gauss'
p783
aS'@@shape'
p784
asg713
(lp785
F0.0
aF1.0
aF-0.5
aS'@@pa'
p786
asg714
(lp787
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p788
asg32
(lp789
NaS'@@parmtable'
p790
asg715
(lp791
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p792
asg716
(lp793
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p794
asg717
(lp795
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p796
asg718
(lp797
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p798
asg719
(lp799
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p800
asg704
(lp801
NaS'@@name'
p802
assg81
Nsg93
S'2006-03-12 18:48'
p803
sg23
S'MG_JEN_Sixpack::newstar_source()'
p804
sg89
S'** Specific description of inarg record for: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-12 18:48'
p805
sg108
S'MG_JEN_Sixpacknewstar_source'
p806
sg41
S'newstar_source'
p807
sS'callback'
p808
(dp809
g708
I01
ssg82
I00
sg83
g803
sg94
(lp810
g21
ag708
ag703
ag704
ag32
ag702
ag705
ag707
ag716
ag718
ag715
ag706
ag700
ag714
ag717
ag710
ag711
ag701
ag719
ag713
asssg523
I00
sg9
g555
sg621
(dp811
S'channel_start_index'
p812
I10
sS'data_column_name'
p813
g649
sS'predict_column'
p814
S'CORRECTED_DATA'
p815
sg518
S'@@ms_name'
p816
sg21
(dp817
g25
g621
sg96
(dp818
g812
S'(inputrec.sel) index of first selected freq channel'
p819
sg813
S'(inputrec) MS input column'
p820
sg814
S'MS output column to be associated with the VisTile predict-column'
p821
sg518
g531
sg536
g537
sS'channel_increment'
p822
S'(inputrec.sel) take every nth channel (1=all)'
p823
sS'channel_end_index'
p824
S'(inputrec.sel) index of last selected freq channel'
p825
sS'write_flags'
p826
S'(outputrec) if True, write flags to MS'
p827
ssg37
g38
sg87
S'MG_JEN_exec'
p828
sg26
(dp829
g812
I18
sg813
I17
sg814
I22
sg826
I21
sg824
I19
sg822
I20
ssg29
(dp830
g518
I01
sg536
I01
ssg543
(dp831
g518
g545
ssg85
S'20jan2006'
p832
sg91
(dp833
g518
I00
sg536
I00
ssg35
S'** Description of script: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-12 18:48'
p834
sg181
(dp835
g826
I00
ssg39
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-12 18:48'
p836
sg43
(dp837
g812
(lp838
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p839
asg813
(lp840
g649
ag815
aS'@@data_column_name'
p841
asg814
(lp842
g649
ag815
aS'MODEL_DATA'
p843
aS'@@predict_column'
p844
asg518
(lp845
g519
ag816
asg536
(lp846
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p847
asg822
(lp848
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p849
asg824
(lp850
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p851
asg826
(lp852
I01
aI00
aS'@@write_flags'
p853
assg81
Nsg93
S'2006-03-12 18:48'
p854
sg23
S'MG_JEN_exec::stream_control()'
p855
sg89
S'** Specific description of inarg record for: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-12 18:48'
p856
sg108
S'MG_JEN_execstream_control'
p857
sg41
S'stream_control'
p858
sg82
I00
sg83
g854
sg282
(dp859
g286
S'.modify( tile_size ): @@tile_size  ->  1'
p860
ssg94
(lp861
g21
ag518
ag536
ag813
ag812
ag824
ag822
ag826
ag814
assg536
I1
sg822
I1
sg824
I50
sg826
I00
ssg527
I00
sg529
I00
sg623
(dp862
g487
S'insert a solver'
p863
ssg532
I01
sg625
(dp864
S'correct_after'
p865
I01
sg523
S'@@master_reqseq'
p866
sS'condeq_unop'
p867
Nsg631
I01
sg527
S'@@redun'
p868
sS'solver_subtree'
p869
NsS'subtract_after'
p870
I00
sg532
S'@@chain_solvers'
p871
sg21
(dp872
g25
g625
sg96
(dp873
g865
S'if True, correct measured with predicted.Joneset'
p874
sg523
g524
sg867
S'Optional unary operation on Condeq inputs'
p875
sg631
S'if True, include full visualisation'
p876
sg527
g528
sg869
S'solver subtree qualifier(s)'
p877
sg870
S'if True, subtract predicted from measured'
p878
sg532
g533
sS'flag_residuals'
p879
S'if True, flag the residuals'
p880
sg534
g535
ssg37
g38
sg87
S'MG_JEN_Cohset'
p881
sg26
(dp882
g870
I140
sg865
I141
sg867
I138
sg631
I139
ssg29
(dp883
g523
I01
sg527
I01
sg869
I01
sg532
I01
sg879
I01
sg534
I01
ssg85
g279
sg91
(dp884
g534
I00
sg532
I00
sg527
I00
sg523
I00
ssg35
S'insert one or more solver subtrees in the data stream'
p885
sg181
(dp886
g865
I00
sg523
I00
sg631
I00
sg527
I00
sg870
I00
sg879
I00
ssg39
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-12 18:48'
p887
sg43
(dp888
g865
(lp889
I01
aI00
aS'@@correct_after'
p890
asg523
(lp891
I01
aI00
ag866
asg867
(lp892
NaS'Abs'
p893
aS'Arg'
p894
aS'@@condeq_unop'
p895
asg631
(lp896
I01
aI00
aS'@@visu'
p897
asg527
(lp898
I01
aI00
ag868
asg869
(lp899
NaS'@@solver_subtree'
p900
asg870
(lp901
I01
aI00
aS'@@subtract_after'
p902
asg532
(lp903
I01
ag871
asg879
(lp904
I01
aI00
aS'@@flag_residuals'
p905
asg534
(lp906
Na(lp907
I5
aI2
aa(lp908
I2
aI2
aa(lp909
I3
aI3
aaS'@@num_cells'
p910
assg81
Nsg93
S'2006-03-12 18:48'
p911
sg23
S'MG_JEN_Cohset::insert_solver()'
p912
sg89
S'** Specific description of inarg record for: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-12 18:48'
p913
sg108
S'MG_JEN_Cohsetinsert_solver'
p914
sg41
S'insert_solver'
p915
sg82
I00
sg83
g911
sg282
(dp916
g286
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p917
ssg94
(lp918
g21
ag869
ag527
ag534
ag532
ag523
ag867
ag631
ag870
ag865
ag879
aS'./MG_JEN_Cohset.solver_subtree()'
p919
assg534
g910
sg919
(dp920
S'rmin'
p921
Nsg631
I01
sS'epsilon'
p922
F0.0001
sS'colin_factor'
p923
F0.0
sS'rmax'
p924
NsS'derivative_eps'
p925
F1e-08
sS'usesvd'
p926
I01
sS'debug_level'
p927
I10
sS'history'
p928
I01
sS'solvegroup'
p929
(lp930
sg21
(dp931
g23
S'MG_JEN_Cohset::solver_subtree()'
p932
sg25
g919
sg93
S'2006-03-12 18:48'
p933
sg29
(dp934
g927
I01
sg925
I01
sS'setBalanced'
p935
I01
sS'epsval'
p936
I01
sg534
I00
ssg35
S'Make a solver-subtree for the given Condeq Cohset'
p937
sg37
g38
sg39
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-12 18:48'
p938
sg41
S'solver_subtree'
p939
sg43
(dp940
g921
(lp941
NaI100
aI200
aI500
aS'@@rmin'
p942
asg631
(lp943
I01
aI00
aS'@@visu'
p944
asg922
(lp945
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p946
asg924
(lp947
NaI500
aI1000
aI2000
aS'@@rmax'
p948
asg925
(lp949
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@derivative_eps'
p950
asg926
(lp951
I01
aI00
aS'@@usesvd'
p952
asg927
(lp953
I10
aS'@@debug_level'
p954
asg928
(lp955
I01
aI00
aS'@@history'
p956
asg929
(lp957
g930
a(lp958
g265
aa(lp959
S'Ggain'
p960
aa(lp961
S'Gphase'
p962
aa(lp963
S'Gpol1'
p964
aa(lp965
S'Gpol2'
p966
aa(lp967
g273
aa(lp968
g273
aS'stokesU'
p969
aa(lp970
g273
aS'stokesQ'
p971
aa(lp972
g273
aS'stokesV'
p973
aa(lp974
S'stokesQU'
p975
ag273
aa(lp976
S'stokesQUV'
p977
ag273
aa(lp978
g265
aS'stokesI'
p979
aa(lp980
g979
aa(lp981
S'stokesIQU'
p982
aa(lp983
S'stokesIQUV'
p984
aa(lp985
S'stokesIV'
p986
aa(lp987
g975
aa(lp988
g977
aa(lp989
g265
aS'DJones'
p990
aa(lp991
g990
aa(lp992
S'Dang'
p993
aa(lp994
S'Dell'
p995
aa(lp996
S'Dreal'
p997
aa(lp998
S'Dimag'
p999
aa(lp1000
g265
ag990
ag230
aa(lp1001
g230
aa(lp1002
g265
ag79
aa(lp1003
g79
aa(lp1004
S'Breal'
p1005
aa(lp1006
S'Bimag'
p1007
aa(lp1008
S'Bpol1'
p1009
aa(lp1010
S'Bpol2'
p1011
aaS'@@solvegroup'
p1012
asg936
(lp1013
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsval'
p1014
asg534
(lp1015
Na(lp1016
I5
aI2
aa(lp1017
I2
aI2
aa(lp1018
I3
aI3
aaS'@@num_cells'
p1019
asg935
(lp1020
I01
aI00
aS'@@setBalanced'
p1021
asS'num_iter'
p1022
(lp1023
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1024
asS'condition'
p1025
(lp1026
NaS'Gphase_X_sum=0.0'
p1027
aS'Gphase_Y_sum=0.0'
p1028
a(lp1029
g1027
ag1028
aa(lp1030
S'Gphase_X_first=0.0'
p1031
aS'Gphase_Y_first=0.0'
p1032
aa(lp1033
S'Gphase_X_last=0.0'
p1034
aS'Gphase_Y_last=0.0'
p1035
aaS'Dang_sum=0.0'
p1036
a(lp1037
S'Bimag_X_sum=0.0'
p1038
aS'Bimag_Y_sum=0.0'
p1039
aa(lp1040
S'Breal_X_product=1.0'
p1041
aS'Breal_Y_product=1.0'
p1042
aaS'@@condition'
p1043
asg923
(lp1044
F1e-08
aF0.0
aS'@@colin_factor'
p1045
assg81
Nsg85
S'20dec2005'
p1046
sg26
(dp1047
g921
I145
sg631
I156
sg922
I149
sg924
I146
sg926
I153
sg929
I143
sg534
I147
sg928
I157
sg1022
I148
sg1025
I144
sg923
I152
ssg83
g933
sg87
S'MG_JEN_Cohset'
p1048
sg181
(dp1049
g926
I00
sg935
I00
sg928
I00
sg631
I00
ssg89
S'** Specific description of inarg record for: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-12 18:48'
p1050
sg82
I00
sg94
(lp1051
g21
ag929
ag1025
ag921
ag924
ag534
ag1022
ag922
ag936
ag925
ag923
ag926
ag935
ag927
ag631
ag928
asg96
(dp1052
g921
S'if specified, only use baselines>=rmin'
p1053
sg631
S'if True, include visualisation'
p1054
sg922
S'iteration control criterion...'
p1055
sg924
S'if specified, only use baselines<=rmax'
p1056
sg925
S'NEW: also iteration control...'
p1057
sg926
S'if True, use Singular Value Decomposition (SVD)'
p1058
sg927
S'solver debug_level'
p1059
sg928
S'if True, include history collection of metrics'
p1060
sg929
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p1061
sg936
S'NEW: WNB version of epsilon....'
p1062
sg534
g535
sg935
S'NEW: if True, add (..) to diagonal, otherwise multiply (1+lambda)'
p1063
sg1022
S'max number of iterations (now also in fitter)'
p1064
sg1025
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p1065
sg923
S'colinearity factor'
p1066
ssg108
S'MG_JEN_Cohsetsolver_subtree'
p1067
ssg534
Nsg935
I00
sg1022
I5
sg1025
Nsg936
F1e-08
ssg879
I00
ss.