(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I86
sg17
I91
sg21
I88
sg38
I87
sg25
I90
sg44
I89
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-10 18:22'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I110
sg129
I111
sg131
I109
sg142
I113
sg144
I108
sg146
I114
sg148
I115
sg149
I112
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-10 18:22'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I76
sg217
I78
sg208
I77
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-10 18:22'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I52
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones_WSRT'
p291
aa(lp292
g280
ag291
aa(lp293
aS'@@Jsequence'
p294
asg14
(lp295
(lp296
I0
aI1
aI2
aI3
aI4
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp299
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p300
ag121
assg101
Nsg102
S'2006-02-10 18:22'
p301
sg104
S'MG_JEN_Cohset::JJones()'
p302
sg106
S'MG_JEN_CohsetJJones'
p303
sg108
S'JJones'
p304
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p305
sg112
I00
sg113
g301
sg114
(dp306
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p307
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p308
sS'3'
p309
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p310
sS'2'
p311
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p312
sS'4'
p313
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p314
ssg118
(lp315
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p316
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p317
ag122
assg317
(dp318
g12
I00
sg1
S'@@polrep'
p319
sg14
S'@@stations'
p320
sg22
F0.0
sg23
S'@@uvplane_effect'
p321
sg7
S'@@parmtable'
p322
sg26
(dp323
g28
g317
sg29
(dp324
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p325
sg50
(dp326
sg52
(dp327
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p328
sg56
S'12dec2005'
p329
sg58
(dp330
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p331
sg62
(dp332
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p333
sg66
(dp334
g12
(lp335
I01
aI00
aS'@@unsolvable'
p336
asg1
(lp337
g2
ag71
ag319
asg14
(lp338
(lp339
I0
aag320
asg22
(lp340
F0.0
aS'@@ft_coeff_scale'
p341
asg23
(lp342
I00
ag321
asg7
(lp343
Nag322
assg101
Nsg102
S'2006-02-10 18:22'
p344
sg104
S'MG_JEN_Joneset::KJones()'
p345
sg106
S'MG_JEN_JonesetKJones'
p346
sg108
S'KJones'
p347
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p348
sg112
I00
sg113
g344
sg118
(lp349
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg316
(dp350
g12
I00
sg1
S'@@polrep'
p351
sS'fdeg_Ggain'
p352
I0
sS'tdeg_Gphase'
p353
S'@tdeg_Ggain'
p354
sS'stddev_Ggain'
p355
F0.0
sS'c00_Gphase'
p356
F0.0
sg22
F0.0
sg14
S'@@stations'
p357
sS'tdeg_Ggain'
p358
I3
sS'fdeg_Gphase'
p359
S'@fdeg_Ggain'
p360
sg7
S'@@parmtable'
p361
sg26
(dp362
g28
g316
sg29
(dp363
g12
g31
sg1
g32
sg14
g33
sg356
S'default c00 funklet value'
p364
sg352
S'degree of freq polynomial'
p365
sg353
S'degree of time polynomial'
p366
sg22
g37
sg358
g366
sg359
g365
sg7
g43
sg355
S'scatter in default c00 funklet values'
p367
sS'subtile_size_Gphase'
p368
S'sub-tile size (None=entire tile)'
p369
sS'c00_Ggain'
p370
g364
sS'stddev_Gphase'
p371
g367
sS'Gpolar'
p372
S'if True, use MeqPolar, otherwise MeqToComplex'
p373
sS'subtile_size_Ggain'
p374
g369
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p375
sg50
(dp376
g352
I60
sg374
I64
sg353
I63
sg358
I62
sg359
I61
sg368
I65
sg372
I59
ssg52
(dp377
g12
I01
sg1
I01
sg14
I01
sg355
I01
sg356
I01
sg22
I01
sg23
I01
sg7
I01
sg370
I01
sg371
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p378
sg56
S'15dec2005'
p379
sg58
(dp380
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p381
sg62
(dp382
g12
I00
sg372
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p383
sg66
(dp384
g12
(lp385
I01
aI00
aS'@@unsolvable'
p386
asg1
(lp387
g2
ag71
ag351
asg14
(lp388
(lp389
I0
aag357
asg356
(lp390
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p391
asg352
(lp392
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p393
asg353
(lp394
I0
aI1
aI2
aI3
ag354
aS'@@tdeg_Gphase'
p395
asg22
(lp396
F0.0
aS'@@ft_coeff_scale'
p397
asg358
(lp398
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p399
asg359
(lp400
I0
aI1
aI2
aI3
ag360
aS'@@fdeg_Gphase'
p401
asg7
(lp402
Nag361
asg355
(lp403
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p404
asg368
(lp405
S'@subtile_size_Ggain'
p406
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p407
asg370
(lp408
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p409
asg371
(lp410
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p411
asg372
(lp412
I01
aI00
aS'@@Gpolar'
p413
asg374
(lp414
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p415
asg23
(lp416
I00
aS'@@uvplane_effect'
p417
assg101
Nsg102
S'2006-02-10 18:22'
p418
sg104
S'MG_JEN_Joneset::GJones()'
p419
sg106
S'MG_JEN_JonesetGJones'
p420
sg108
S'GJones'
p421
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p422
sg112
I00
sg113
g418
sg114
(dp423
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p424
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p425
ssg118
(lp426
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag372
ag352
ag359
ag358
ag353
ag374
ag368
ag370
ag356
ag355
ag371
assg368
g406
sg370
F1.0
sg371
F0.0
sg372
I00
sg374
Nsg23
g417
ssg263
(lp427
ssg26
(dp428
g28
S'./MG_JEN_cps.'
p429
sg29
(dp430
g1
g262
sS'master_reqseq'
p431
S'if True, use a master reqseq for solver(s)'
p432
sg14
g265
sS'insert_flagger'
p433
S'if True, insert a flagger'
p434
sS'redun'
p435
S'if True, redundant spacing calibration'
p436
sS'insert_solver'
p437
S'if True, insert a solver'
p438
sg5
S'name of the (AIPS++) Measurement Set'
p439
sS'chain_solvers'
p440
S'if True, chain the solvers (recommended)'
p441
sS'num_cells'
p442
S'if defined, ModRes argument [ntime,nfreq]'
p443
sg7
g261
sS'tile_size'
p444
S'(inputrec) size (in time-slots) of the input data-tile'
p445
sg23
g39
ssS'reference'
p446
I00
sg46
g47
sg48
S'MG_JEN_cps'
p447
sg50
(dp448
g1
I8
sg14
I6
sg433
I2
sg435
I12
sg437
I1
sg5
I4
sg7
I7
sg3
I0
sg442
I13
sg444
I5
sg23
I9
ssg52
(dp449
g1
I00
sg431
I01
sg14
I00
sS'last_changed'
p450
I01
sg435
I00
sg23
I00
sg440
I01
sg442
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p451
sg56
g379
sg60
g451
sg62
(dp452
g450
I00
sg433
I00
sg431
I00
sg437
I00
sg435
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p453
sg66
(dp454
g1
(lp455
g2
ag71
aS'@@polrep'
p456
asg431
(lp457
I01
aI00
aS'@@master_reqseq'
p458
asg14
(lp459
(lp460
I0
aI1
aI2
aI3
aI4
aa(lp461
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp462
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp463
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p464
asg433
(lp465
I01
aI00
aS'@@insert_flagger'
p466
asg450
(lp467
S'd30jan2006'
p468
aS'@@last_changed'
p469
asg437
(lp470
I01
aI00
aS'@@insert_solver'
p471
asg435
(lp472
I01
aI00
aS'@@redun'
p473
asg5
(lp474
g6
aS'@@ms_name'
p475
asg440
(lp476
I01
aS'@@chain_solvers'
p477
asg442
(lp478
Na(lp479
I5
aI2
aa(lp480
I2
aI2
aa(lp481
I3
aI3
aaS'@@num_cells'
p482
asg7
(lp483
NaS'@@parmtable'
p484
asg444
(lp485
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p486
asg23
(lp487
I00
aS'@@uvplane_effect'
p488
assg102
S'2006-02-10 18:22'
p489
sS'HISTORY'
p490
(dp491
g253
S'2006-02-10 18:22: Derived from: MG_JEN_cps_inspect.inarg'
p492
sg116
S'2006-02-10 18:22: Derived from: MG_JEN_cps.inarg'
p493
ssg104
g4
sS'save_file'
p494
S'MG_JEN_cps_inspect_protected.inarg'
p495
sS'file_filter'
p496
S'MG_JEN_cps*.inarg'
p497
sg108
S''
p498
sg110
S'<specific>'
p499
sS'browse'
p500
(dp501
g5
S'*.MS'
p502
ssg112
I01
sg113
g489
sg114
(dp503
S'11'
p504
S'.modify( tile_size ): 10  ->  1'
p505
sS'10'
p506
S'.modify(): stripped off: _JEN_inarg_option'
p507
sS'13'
p508
S".modify(): found ={'tile_size': 2, 'insert_solver': 1}"
p509
sS'12'
p510
S'.modify( insert_solver ): True  ->  False'
p511
sg253
S'.modify( uvplane_effect ): False  ->  True'
p512
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p513
sg309
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p514
sg311
S".modify(): found ={'uvplane_effect': 1}"
p515
sS'5'
p516
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p517
sg313
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p518
sS'7'
p519
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p520
sS'6'
p521
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p522
sS'9'
p523
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p524
sS'8'
p525
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p526
ssg118
(lp527
g26
ag3
ag437
ag433
ag450
ag5
ag444
ag14
ag7
ag1
ag23
ag440
ag431
ag435
ag442
aS'./MG_JEN_exec.stream_control()'
p528
aS'./MG_JEN_Cohset.make_spigots()'
p529
aS'./MG_JEN_Sixpack.newstar_source()'
p530
ag8
aS'./MG_JEN_Cohset.predict()'
p531
aS'./MG_JEN_Cohset.insert_solver()'
p532
aS'./MG_JEN_Cohset.make_sinks()'
p533
assg533
(dp534
S'fullDomainMux'
p535
I01
sS'output_col'
p536
S'PREDICT'
p537
sS'visu'
p538
I01
sS'flag'
p539
I00
sg26
(dp540
g104
S'MG_JEN_Cohset::make_sinks()'
p541
sg28
g533
sg50
(dp542
g539
I147
sg538
I146
sg535
I148
sg536
I144
sS'visu_array_config'
p543
I145
ssg106
S'MG_JEN_Cohsetmake_sinks'
p544
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p545
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p546
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p547
sg108
S'make_sinks'
p548
sg66
(dp549
g539
(lp550
I01
aI00
aS'@@flag'
p551
asg543
(lp552
I01
aI00
aS'@@visu_array_config'
p553
asg536
(lp554
g537
aS'RESIDUALS'
p555
aS'DATA'
p556
aS'@@output_col'
p557
asg535
(lp558
I01
aI00
aS'@@fullDomainMux'
p559
asg538
(lp560
I01
aI00
aS'@@visu'
p561
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p562
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p563
sg48
S'MG_JEN_Cohset'
p564
sg62
(dp565
g539
I00
sg543
I00
sg535
I00
sg538
I00
ssg112
I00
sg102
g563
sg118
(lp566
g26
ag536
ag543
ag538
ag539
ag535
asg29
(dp567
g539
S'if True, insert a flagger for the output uv-data'
p568
sg543
S'if True, visualise the array config (from MS)'
p569
sg536
S'name of the logical (VisTile) output column'
p570
sg535
S'if True, attach an extra VisDataMux'
p571
sg538
S'if True, visualise the output uv-data'
p572
sssg543
I01
ssg444
I1
sg529
(dp573
S'MS_corr_index'
p574
(lp575
I0
aI1
aI2
aI3
asg539
I00
sg26
(dp576
g104
S'MG_JEN_Cohset::make_spigots()'
p577
sg28
g529
sg50
(dp578
g539
I25
sg574
I23
sg538
I24
ssg52
(dp579
S'input_col'
p580
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p581
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p582
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p583
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p584
sg108
S'make_spigots'
p585
sg66
(dp586
g539
(lp587
I01
aI00
aS'@@flag'
p588
asg574
(lp589
g575
a(lp590
I0
aI-1
aI-1
aI1
aa(lp591
I0
aI-1
aI-1
aI3
aaS'@@'
p592
aS'@@MS_corr_index'
p593
asg580
(lp594
g556
ag537
ag555
aS'@@input_col'
p595
asg538
(lp596
I01
aI00
aS'@@visu'
p597
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p598
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p599
sg48
S'MG_JEN_Cohset'
p600
sg62
(dp601
g539
I00
sg538
I00
ssg112
I00
sg102
g599
sg118
(lp602
g26
ag580
ag574
ag538
ag539
asg29
(dp603
g539
S'if True, insert a flagger for the input uv-data'
p604
sg574
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p605
sg580
S'name of the logical (VisTile) input column'
p606
sg538
S'if True, visualise the input uv-data'
p607
sssg580
g556
sg538
I01
ssg531
(dp608
g1
S'@@polrep'
p609
sg26
(dp610
g104
S'MG_JEN_Cohset::predict()'
p611
sg28
g531
sg50
(dp612
sg52
(dp613
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p614
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p615
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p616
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p617
sg108
S'predict'
p618
sg66
(dp619
g1
(lp620
g2
ag71
ag609
asg14
(lp621
(lp622
I0
aI1
aI2
aI3
aI4
aa(lp623
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp624
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp625
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p626
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p627
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p628
sg48
S'MG_JEN_Cohset'
p629
sg58
(dp630
g1
I00
sg14
I00
ssg112
I00
sg102
g628
sg118
(lp631
g26
ag14
ag1
asg29
(dp632
g1
g262
sg14
g265
sssg14
g626
ssg433
I00
sg450
g468
sg23
I01
sg442
Nsg530
(dp633
S'f0'
p634
F1000000.0
sS'major'
p635
F0.0
sg12
I00
sS'shape'
p636
S'point'
p637
sg7
NsS'Upct'
p638
NsS'I0'
p639
F1.0
sS'Vpct'
p640
NsS'dDec'
p641
F0.0
sS'pa'
p642
F0.0
sg26
(dp643
g28
g530
sg29
(dp644
g634
S'reference freq (Hz): I=I0 @ f=f0'
p645
sg635
S'major axis (arcsec)'
p646
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p647
sg639
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p648
sg642
S'position angle (rad)'
p649
sS'SI'
p650
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p651
sS'Qpct'
p652
S'Stokes Q (percentage of I)'
p653
sS'punit'
p654
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p655
sg641
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p656
sg636
S'source shape'
p657
sg7
S'name of the MeqParm table (AIPS++)'
p658
sS'fsr_trace'
p659
S'If True, attach to forest state record'
p660
sS'RA0'
p661
S'If RA0 is a node, RA0+dRA overrides RA'
p662
sS'dRA'
p663
S'RA offset (arcsec): RA = RA0 + dRA'
p664
sS'RM'
p665
S'Intrinsic Rotation Measure (rad/m2)'
p666
sg638
S'Stokes U (percentage of I)'
p667
sS'Dec'
p668
S'Declination (rad, J2000)'
p669
sS'Dec0'
p670
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p671
sg640
S'Stokes V (percentage of I)'
p672
sS'minor'
p673
S'minor axis (arcsec)'
p674
sS'RA'
p675
S'Right Ascension (rad, J2000)'
p676
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p677
sg50
(dp678
g668
I38
sg639
I30
sg652
I31
sg640
I33
sg650
I35
sg7
I28
sg675
I37
sg665
I34
sg638
I32
sg654
I26
ssg52
(dp679
g634
I01
sg635
I01
sg12
I01
sS'name'
p680
I01
sg659
I01
sg654
I00
sg641
I01
sg636
I01
sg642
I01
sg661
I01
sg663
I01
sg670
I01
sg673
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p681
sg56
S'10feb2006'
p682
sg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p683
sg62
(dp684
g12
I00
sg659
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p685
sg66
(dp686
g634
(lp687
F1000000.0
aS'@@f0'
p688
asg635
(lp689
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p690
asg12
(lp691
I01
aI00
aS'@@unsolvable'
p692
asg636
(lp693
g637
aS'ell.gauss'
p694
aS'@@shape'
p695
asg7
(lp696
NaS'@@parmtable'
p697
asg638
(lp698
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p699
asg639
(lp700
F1.0
aF10.0
aS'@@I0'
p701
asg640
(lp702
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p703
asg641
(lp704
F0.0
aS'@@dDec'
p705
asg642
(lp706
F0.0
aF1.0
aF-0.5
aS'@@pa'
p707
asg675
(lp708
F0.0
aF0.5
aF1.0
aS'@@RA'
p709
asg663
(lp710
F0.0
aS'@@dRA'
p711
asg665
(lp712
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p713
asg670
(lp714
NaS'@@Dec0'
p715
asg673
(lp716
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p717
asg652
(lp718
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p719
asg654
(lp720
S'unpol'
p721
aS'unpol2'
p722
aS'unpol10'
p723
aS'QUV'
p724
aS'QU'
p725
aS'Qonly'
p726
aS'Uonly'
p727
aS'Vonly'
p728
aS'3c147'
p729
aS'3c286'
p730
aS'3c48'
p731
aS'3c295'
p732
aS'RMtest'
p733
aS'SItest'
p734
aS'@@punit'
p735
asg661
(lp736
NaS'@@RA0'
p737
asg668
(lp738
F0.5
aF1.0
aS'@@Dec'
p739
asg680
(lp740
NaS'@@name'
p741
asg659
(lp742
I01
aI00
aS'@@fsr_trace'
p743
asg650
(lp744
NaF-0.69999999999999996
a(lp745
F0.44700000000000001
aF-0.184
aaS'@@SI'
p746
assg101
Nsg102
S'2006-02-10 18:22'
p747
sg104
S'MG_JEN_Sixpack::newstar_source()'
p748
sg106
S'MG_JEN_Sixpacknewstar_source'
p749
sg108
S'newstar_source'
p750
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p751
sS'callback'
p752
(dp753
g654
I01
ssg112
I00
sg113
g747
sg118
(lp754
g26
ag654
ag680
ag7
ag12
ag639
ag652
ag638
ag640
ag665
ag650
ag634
ag675
ag668
ag659
ag636
ag635
ag673
ag642
ag661
ag670
ag663
ag641
assg663
F0.0
sg665
Nsg670
Nsg673
F0.0
sg675
F0.0
sg652
Nsg654
g721
sg661
Nsg668
F1.0
sg680
Nsg659
I01
sg650
Nssg431
I00
sg14
g460
sg528
(dp755
S'channel_start_index'
p756
I10
sS'data_column_name'
p757
g556
sS'predict_column'
p758
S'CORRECTED_DATA'
p759
sg5
S'@@ms_name'
p760
sg26
(dp761
g28
g528
sg29
(dp762
g756
S'(inputrec.sel) index of first selected freq channel'
p763
sg757
S'(inputrec) MS input column'
p764
sg758
S'MS output column to be associated with the VisTile predict-column'
p765
sg5
g439
sg444
g445
sS'channel_increment'
p766
S'(inputrec.sel) take every nth channel (1=all)'
p767
sS'channel_end_index'
p768
S'(inputrec.sel) index of last selected freq channel'
p769
sS'write_flags'
p770
S'(outputrec) if True, write flags to MS'
p771
ssg46
g47
sg48
S'MG_JEN_exec'
p772
sg50
(dp773
g756
I17
sg757
I16
sg758
I21
sg770
I20
sg768
I18
sg766
I19
ssg52
(dp774
g5
I01
sg444
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p775
sg56
S'20jan2006'
p776
sg58
(dp777
g5
I00
sg444
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p778
sg62
(dp779
g770
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p780
sg66
(dp781
g756
(lp782
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p783
asg757
(lp784
g556
ag759
aS'@@data_column_name'
p785
asg758
(lp786
g556
ag759
aS'MODEL_DATA'
p787
aS'@@predict_column'
p788
asg5
(lp789
g6
ag760
asg444
(lp790
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p791
asg766
(lp792
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p793
asg768
(lp794
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p795
asg770
(lp796
I01
aI00
aS'@@write_flags'
p797
assg101
Nsg102
S'2006-02-10 18:22'
p798
sg104
S'MG_JEN_exec::stream_control()'
p799
sg106
S'MG_JEN_execstream_control'
p800
sg108
S'stream_control'
p801
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p802
sg500
(dp803
g5
g502
ssg112
I00
sg113
g798
sg114
(dp804
g116
S'.modify( tile_size ): @@tile_size  ->  1'
p805
ssg118
(lp806
g26
ag5
ag444
ag757
ag756
ag768
ag766
ag770
ag758
assg444
I1
sg766
I1
sg768
I50
sg770
I00
ssg435
I00
sg437
I00
sg440
I01
sg532
(dp807
S'correct_after'
p808
I01
sg431
S'@@master_reqseq'
p809
sS'condeq_unop'
p810
Nsg538
I01
sg435
S'@@redun'
p811
sS'solver_subtree'
p812
NsS'subtract_after'
p813
I00
sg440
S'@@chain_solvers'
p814
sg26
(dp815
g28
g532
sg29
(dp816
g808
S'if True, correct measured with predicted.Joneset'
p817
sg431
g432
sg810
S'Optional unary operation on Condeq inputs'
p818
sg538
S'if True, include full visualisation'
p819
sg435
g436
sg812
S'solver subtree qualifier(s)'
p820
sg813
S'if True, subtract predicted from measured'
p821
sg440
g441
sg442
g443
ssg46
g47
sg48
S'MG_JEN_Cohset'
p822
sg50
(dp823
g813
I130
sg808
I131
sg810
I128
sg538
I129
ssg52
(dp824
g812
I01
sg442
I01
sg440
I01
sg435
I01
sg431
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p825
sg56
g270
sg58
(dp826
g442
I00
sg440
I00
sg435
I00
sg431
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p827
sg62
(dp828
g813
I00
sg435
I00
sg808
I00
sg431
I00
sg538
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p829
sg66
(dp830
g808
(lp831
I01
aI00
aS'@@correct_after'
p832
asg431
(lp833
I01
aI00
ag809
asg810
(lp834
NaS'Abs'
p835
aS'Arg'
p836
aS'@@condeq_unop'
p837
asg538
(lp838
I01
aI00
aS'@@visu'
p839
asg435
(lp840
I01
aI00
ag811
asg812
(lp841
NaS'@@solver_subtree'
p842
asg813
(lp843
I01
aI00
aS'@@subtract_after'
p844
asg440
(lp845
I01
ag814
asg442
(lp846
Na(lp847
I5
aI2
aa(lp848
I2
aI2
aa(lp849
I3
aI3
aaS'@@num_cells'
p850
assg101
Nsg102
S'2006-02-10 18:22'
p851
sg104
S'MG_JEN_Cohset::insert_solver()'
p852
sg106
S'MG_JEN_Cohsetinsert_solver'
p853
sg108
S'insert_solver'
p854
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p855
sg112
I00
sg113
g851
sg114
(dp856
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p857
ssg118
(lp858
g26
ag812
ag435
ag442
ag440
ag431
ag810
ag538
ag813
ag808
aS'./MG_JEN_Cohset.solver_subtree()'
p859
assg442
g850
sg859
(dp860
S'rmin'
p861
Nsg538
I01
sS'epsilon'
p862
F0.01
sS'rmax'
p863
NsS'usesvd'
p864
I01
sS'debug_level'
p865
I10
sS'solvegroup'
p866
(lp867
sg26
(dp868
g28
g859
sg29
(dp869
g861
S'if specified, only use baselines>=rmin'
p870
sg538
S'if True, include visualisation'
p871
sg862
S'iteration control criterion'
p872
sg863
S'if specified, only use baselines<=rmax'
p873
sg864
S'if True, use Singular Value Decomposition (SVD)'
p874
sg865
S'solver debug_level'
p875
sg866
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p876
sg442
g443
sS'history'
p877
S'if True, include history collection of metrics'
p878
sS'num_iter'
p879
S'max number of iterations'
p880
sS'condition'
p881
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p882
sS'colin_factor'
p883
S'colinearity factor'
p884
ssg46
g47
sg48
S'MG_JEN_Cohset'
p885
sg50
(dp886
g861
I134
sg538
I142
sg862
I138
sg863
I135
sg864
I140
sg866
I132
sg442
I136
sg877
I143
sg879
I137
sg881
I133
sg883
I139
ssg52
(dp887
g865
I01
sg442
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p888
sg56
S'20dec2005'
p889
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p890
sg62
(dp891
g864
I00
sg877
I00
sg538
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p892
sg66
(dp893
g861
(lp894
NaI100
aI200
aI500
aS'@@rmin'
p895
asg538
(lp896
I01
aI00
aS'@@visu'
p897
asg862
(lp898
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p899
asg863
(lp900
NaI500
aI1000
aI2000
aS'@@rmax'
p901
asg864
(lp902
I01
aI00
aS'@@usesvd'
p903
asg865
(lp904
I10
aS'@@debug_level'
p905
asg866
(lp906
g867
a(lp907
g280
aa(lp908
S'Ggain'
p909
aa(lp910
S'Gphase'
p911
aa(lp912
S'Gpol1'
p913
aa(lp914
S'Gpol2'
p915
aa(lp916
g280
aS'stokesI'
p917
aa(lp918
g917
aa(lp919
S'stokesIQU'
p920
aa(lp921
S'stokesIQUV'
p922
aa(lp923
g280
ag288
aa(lp924
g288
aa(lp925
S'dang'
p926
aa(lp927
S'dell'
p928
aa(lp929
g280
ag288
ag284
aa(lp930
g284
aa(lp931
g280
ag282
aa(lp932
g282
aa(lp933
S'Breal'
p934
aa(lp935
S'Bimag'
p936
aa(lp937
S'Bpol1'
p938
aa(lp939
S'Bpol2'
p940
aaS'@@solvegroup'
p941
asg442
(lp942
Na(lp943
I5
aI2
aa(lp944
I2
aI2
aa(lp945
I3
aI3
aaS'@@num_cells'
p946
asg877
(lp947
I01
aI00
aS'@@history'
p948
asg879
(lp949
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p950
asg881
(lp951
NaS'Gphase_X_sum=0.0'
p952
aS'Gphase_Y_sum=0.0'
p953
a(lp954
g952
ag953
aa(lp955
S'Gphase_X_first=0.0'
p956
aS'Gphase_Y_first=0.0'
p957
aa(lp958
S'Gphase_X_last=0.0'
p959
aS'Gphase_Y_last=0.0'
p960
aaS'dang_sum=0.0'
p961
a(lp962
S'Bimag_X_sum=0.0'
p963
aS'Bimag_Y_sum=0.0'
p964
aa(lp965
S'Breal_X_product=1.0'
p966
aS'Breal_Y_product=1.0'
p967
aaS'@@condition'
p968
asg883
(lp969
F1e-08
aF0.0
aS'@@colin_factor'
p970
assg101
Nsg102
S'2006-02-10 18:22'
p971
sg104
S'MG_JEN_Cohset::solver_subtree()'
p972
sg106
S'MG_JEN_Cohsetsolver_subtree'
p973
sg108
S'solver_subtree'
p974
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p975
sg112
I00
sg113
g971
sg114
(dp976
g253
S'.modify( num_iter ): 20  ->  5'
p977
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p978
ssg118
(lp979
g26
ag866
ag881
ag861
ag863
ag442
ag879
ag862
ag883
ag864
ag865
ag538
ag877
assg442
Nsg877
I01
sg879
I5
sg881
Nsg883
F1e-08
sss.