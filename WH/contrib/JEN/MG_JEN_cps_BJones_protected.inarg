(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'reset_funklet'
p7
I00
sg1
S'@@polrep'
p8
sS'color'
p9
S'red'
p10
sS'subtile_size_Bimag'
p11
S'@subtile_size_Breal'
p12
sS'save_all'
p13
I00
sS'subtile_size_Breal'
p14
NsS'auto_save'
p15
I01
sS'size'
p16
I10
sS'style'
p17
S'circle'
p18
sS'fdeg_Breal'
p19
I6
sS'condeq_corrs'
p20
S'*'
p21
sS'funklet_shape'
p22
NsS'_JEN_inarg_CTRL_record:'
p23
(dp24
S'target_definition'
p25
S'MG_JEN_Joneset::BJones()'
p26
sS'localscope'
p27
g5
sS'MESSAGE'
p28
(dp29
S'1'
p30
S'  2: ...../MG_JEN_Joneset.BJones() (qual=None): .modify(tdeg_Breal):   0  ->  1'
p31
sS'0'
p32
S'  2: ...../MG_JEN_Joneset.BJones() (qual=None): .modify(fdeg_Breal):   5  ->  6'
p33
ssS'hide'
p34
(dp35
g17
I01
sg1
I01
sS'c00_default'
p36
I01
sS'stations'
p37
I01
sg9
I01
sg22
I01
sg20
I01
sS'uvplane_effect'
p38
I01
sS'subtile_size'
p39
I01
sS'tfdeg'
p40
I01
sS'parmtable'
p41
I01
sS'@Jsequence_KJones'
p42
I01
sS'@Jsequence_simul'
p43
I01
sS'@Jsequence'
p44
I01
sg16
I01
ssS'barescope'
p45
S'MG_JEN_JonesetBJones'
p46
sS'target_dir'
p47
S'.'
p48
sS'description'
p49
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p50
sS'oneliner'
p51
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-30 09:55'
p52
sS'target_function'
p53
S'BJones'
p54
sS'choice'
p55
(dp56
g7
(lp57
I01
aI00
aS'@@reset_funklet'
p58
asg1
(lp59
g2
aS'circular'
p60
ag8
asg9
(lp61
g10
aS'@@color'
p62
asg11
(lp63
g12
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p64
asg13
(lp65
I01
aI00
aS'@@save_all'
p66
asg14
(lp67
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p68
asg15
(lp69
I01
aI00
aS'@@auto_save'
p70
asg16
(lp71
I10
aS'@@size'
p72
asg17
(lp73
g18
aS'@@style'
p74
asg19
(lp75
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p76
asg20
(lp77
g21
aS'@@condeq_corrs'
p78
asg22
(lp79
NaS'@@funklet_shape'
p80
asg42
(lp81
S'BJones'
p82
aS'@@@Jsequence_KJones'
p83
asS'tdeg_Bimag'
p84
(lp85
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p86
aS'@@tdeg_Bimag'
p87
asg44
(lp88
g82
aS'@@@Jsequence'
p89
asg36
(lp90
F1.0
aS'@@c00_default'
p91
asS'fdeg_Bimag'
p92
(lp93
I3
aI4
aI5
aI6
aS'@fdeg_Breal'
p94
aS'@@fdeg_Bimag'
p95
asg38
(lp96
I00
aS'@@uvplane_effect'
p97
asg37
(lp98
(lp99
I0
aI1
aI2
aI3
aI4
aa(lp100
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp101
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp102
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p103
aS'@@stations'
p104
asg40
(lp105
NaS'@@tfdeg'
p106
asS'tdeg_Breal'
p107
(lp108
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p109
asS'use_previous'
p110
(lp111
I01
aI00
aS'@@use_previous'
p112
asg39
(lp113
NaS'@@subtile_size'
p114
asg41
(lp115
NaS'test'
p116
aS'@@parmtable'
p117
asg43
(lp118
g82
aS'@@@Jsequence_simul'
p119
assS'qual'
p120
S''
p121
sS'protected'
p122
I00
sS'datetime_defined'
p123
S'2006-03-30 09:55'
p124
sS'version'
p125
S'16dec2005'
p126
sS'target_module'
p127
S'MG_JEN_Joneset'
p128
sS'editable'
p129
(dp130
g7
I00
sg110
I00
sg15
I00
sg13
I00
ssS'inarg_specific'
p131
S'** Specific description of inarg record for: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-30 09:55'
p132
sS'mutable'
p133
(dp134
g38
I00
sg41
I00
sg1
I00
sg37
I00
ssS'last_edited'
p135
g124
sS'order'
p136
(lp137
g23
ag37
ag1
ag44
ag43
ag42
ag41
ag38
ag107
ag84
ag19
ag92
ag14
ag11
ag110
ag15
ag13
ag7
ag9
ag17
ag16
ag36
ag40
ag22
ag39
ag20
asS'help'
p138
(dp139
g7
S'if True, do NOT use any MeqParm table values when solvable'
p140
sg1
S'polarisation representation'
p141
sg9
S'plot_color'
p142
sg11
S'sub-tile size (None=entire tile)'
p143
sg13
S'if True, save the update result even if not converged'
p144
sg14
g143
sg15
S'if True, save the result of every iteration (slow!)'
p145
sg16
S'size of plotted symbol'
p146
sg17
S'plot_style'
p147
sg19
S'degree of freq polynomial'
p148
sg20
S'correlations to be used for solving'
p149
sg22
S'shape [time,freq] of default funklet'
p150
sg42
S'list membership indication (used in JEN_inargGui)'
p151
sg84
S'degree of time polynomial'
p152
sg44
g151
sg36
S'default value of c[0,0] coefficient'
p153
sg92
g148
sg38
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p154
sg37
S'the (subset of) stations to be used'
p155
sg40
S'(time,freq) polynomial degree'
p156
sg107
g152
sg110
S'if True, start with the previous solution'
p157
sg39
S'size (time-slots) of a domain sub-tile'
p158
sg41
S'name of the MeqParm table to be used'
p159
sg43
g151
sssg42
g82
sg84
g86
sg44
g82
sg36
F1.0
sg92
g94
sg38
g97
sg41
g117
sg37
g104
sg107
I1
sg110
I01
sg39
Nsg40
Nsg43
g82
ssg1
S'@@polrep'
p160
sg37
S'@@stations'
p161
sS'./MG_JEN_Joneset.DJones_WSRT()'
p162
(dp163
g7
I00
sg1
S'@@polrep'
p164
sg9
g10
sS'fdeg_Dell'
p165
S'@fdeg_Dang'
p166
sS'coupled_XY_Dell'
p167
I01
sg13
I00
sg41
S'@@parmtable'
p168
sS'subtile_size_Dang'
p169
Nsg15
I01
sg16
I10
sg17
g18
sg20
g21
sg22
Nsg23
(dp170
g25
S'MG_JEN_Joneset::DJones_WSRT()'
p171
sg27
g162
sg34
(dp172
g17
I01
sg1
I01
sg36
I01
sg37
I01
sg9
I01
sg22
I01
sg20
I01
sg38
I01
sg39
I01
sg40
I01
sg41
I01
sg42
I01
sg43
I01
sg44
I01
sg16
I01
ssg45
S'MG_JEN_JonesetDJones_WSRT'
p173
sg47
g48
sg49
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p174
sg51
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-30 09:55'
p175
sg53
S'DJones_WSRT'
p176
sg55
(dp177
g7
(lp178
I01
aI00
aS'@@reset_funklet'
p179
asg1
(lp180
g2
ag60
ag164
asg9
(lp181
g10
aS'@@color'
p182
asg165
(lp183
I0
aI1
aI2
aI3
ag166
aS'@@fdeg_Dell'
p184
asg167
(lp185
I01
aI00
aS'@@coupled_XY_Dell'
p186
asg13
(lp187
I01
aI00
aS'@@save_all'
p188
asg41
(lp189
Nag116
ag168
asg169
(lp190
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p191
asg15
(lp192
I01
aI00
aS'@@auto_save'
p193
asg16
(lp194
I10
aS'@@size'
p195
asg17
(lp196
g18
aS'@@style'
p197
asg20
(lp198
g21
aS'@@condeq_corrs'
p199
asg22
(lp200
NaS'@@funklet_shape'
p201
asg42
(lp202
S'DJones_WSRT'
p203
aS'@@@Jsequence_KJones'
p204
asS'subtile_size_Dell'
p205
(lp206
S'@subtile_size_Dang'
p207
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p208
asg44
(lp209
g203
aS'@@@Jsequence'
p210
asS'fdeg_Dang'
p211
(lp212
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p213
asg36
(lp214
F1.0
aS'@@c00_default'
p215
asg38
(lp216
I00
aS'@@uvplane_effect'
p217
asS'tdeg_Dell'
p218
(lp219
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p220
aS'@@tdeg_Dell'
p221
asS'coupled_XY_Dang'
p222
(lp223
I01
aI00
aS'@@coupled_XY_Dang'
p224
asS'tdeg_Dang'
p225
(lp226
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p227
asg37
(lp228
(lp229
I0
aI1
aI2
aI3
aI4
aa(lp230
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp231
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp232
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p233
asg110
(lp234
I01
aI00
aS'@@use_previous'
p235
asg39
(lp236
NaS'@@subtile_size'
p237
asg40
(lp238
NaS'@@tfdeg'
p239
asg43
(lp240
g203
aS'@@@Jsequence_simul'
p241
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p242
sg125
g126
sg127
S'MG_JEN_Joneset'
p243
sg129
(dp244
g7
I00
sg167
I00
sg110
I00
sg222
I00
sg13
I00
sg15
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-30 09:55'
p245
sg133
(dp246
g38
I00
sg41
I00
sg1
I00
sg37
I00
ssg135
g242
sg136
(lp247
g23
ag37
ag1
ag44
ag43
ag42
ag222
ag167
ag41
ag38
ag225
ag218
ag211
ag165
ag169
ag205
ag110
ag15
ag13
ag7
ag9
ag17
ag16
ag36
ag40
ag22
ag39
ag20
asg138
(dp248
g7
g140
sg1
g141
sg9
g142
sg165
S'degree of freq polynomial'
p249
sg167
S'if True, XDell = -YDell per station'
p250
sg13
g144
sg41
g159
sg169
S'sub-tile size (None=entire tile)'
p251
sg15
g145
sg16
g146
sg17
g147
sg20
g149
sg22
g150
sg42
g151
sg205
g251
sg44
g151
sg211
g249
sg36
g153
sg38
g154
sg218
S'degree of time polynomial'
p252
sg222
S'if True, XDang = YDang per station'
p253
sg225
g252
sg37
g155
sg110
g157
sg39
g158
sg40
g156
sg43
g151
sssg42
g203
sg205
g207
sg44
g203
sg211
I0
sg36
F1.0
sg38
g217
sg218
g220
sg222
I01
sg225
I0
sg37
g233
sg110
I01
sg39
Nsg40
Nsg43
g203
ssS'./MG_JEN_Joneset.FJones()'
p254
(dp255
g7
I00
sg1
S'@@polrep'
p256
sg9
g10
sg13
I00
sg40
Nsg15
I01
sg16
I10
sg17
g18
sg20
g21
sg22
Nsg23
(dp257
g25
S'MG_JEN_Joneset::FJones()'
p258
sg27
g254
sg34
(dp259
g17
I01
sg1
I01
sg36
I01
sg37
I01
sg9
I01
sg22
I01
sg20
I01
sg38
I01
sg39
I01
sg40
I01
sg41
I01
sg42
I01
sg43
I01
sg44
I01
sg16
I01
ssg45
S'MG_JEN_JonesetFJones'
p260
sg47
g48
sg49
S'defines diagonal FJones Faraday rotation matrices'
p261
sg51
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-30 09:55'
p262
sg53
S'FJones'
p263
sg55
(dp264
g7
(lp265
I01
aI00
aS'@@reset_funklet'
p266
asg1
(lp267
g2
ag60
ag256
asg9
(lp268
g10
aS'@@color'
p269
asg13
(lp270
I01
aI00
aS'@@save_all'
p271
asg40
(lp272
NaS'@@tfdeg'
p273
asg15
(lp274
I01
aI00
aS'@@auto_save'
p275
asg16
(lp276
I10
aS'@@size'
p277
asg17
(lp278
g18
aS'@@style'
p279
asg20
(lp280
g21
aS'@@condeq_corrs'
p281
asg22
(lp282
NaS'@@funklet_shape'
p283
asg42
(lp284
S'FJones'
p285
aS'@@@Jsequence_KJones'
p286
asg44
(lp287
g285
aS'@@@Jsequence'
p288
asg36
(lp289
F1.0
aS'@@c00_default'
p290
asg38
(lp291
I00
aS'@@uvplane_effect'
p292
asg37
(lp293
(lp294
I0
aI1
aI2
aI3
aI4
aa(lp295
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp296
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p298
asS'tdeg_RM'
p299
(lp300
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p301
asg110
(lp302
I01
aI00
aS'@@use_previous'
p303
asS'fdeg_RM'
p304
(lp305
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p306
asg39
(lp307
NaS'@@subtile_size'
p308
asg41
(lp309
Nag116
aS'@@parmtable'
p310
asS'subtile_size_RM'
p311
(lp312
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p313
asg43
(lp314
g285
aS'@@@Jsequence_simul'
p315
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p316
sg125
g126
sg127
S'MG_JEN_Joneset'
p317
sg129
(dp318
g7
I00
sg110
I00
sg15
I00
sg13
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-30 09:55'
p319
sg133
(dp320
g38
I00
sg41
I00
sg1
I00
sg37
I00
ssg135
g316
sg136
(lp321
g23
ag37
ag1
ag44
ag43
ag42
ag41
ag38
ag299
ag304
ag311
ag110
ag15
ag13
ag7
ag9
ag17
ag16
ag36
ag40
ag22
ag39
ag20
asg138
(dp322
g7
g140
sg1
g141
sg9
g142
sg13
g144
sg40
g156
sg15
g145
sg16
g146
sg17
g147
sg20
g149
sg22
g150
sg42
g151
sg44
g151
sg36
g153
sg38
g154
sg37
g155
sg299
S'degree of time polynomial'
p323
sg110
g157
sg304
S'degree of freq polynomial'
p324
sg39
g158
sg41
g159
sg311
S'sub-tile size (None=entire tile)'
p325
sg43
g151
sssg42
g285
sg44
g285
sg36
F1.0
sg38
g292
sg37
g298
sg299
I0
sg110
I01
sg304
I2
sg39
Nsg41
g310
sg311
I1
sg43
g285
ssg38
S'@@uvplane_effect'
p326
sg41
S'@@parmtable'
p327
sg23
(dp328
g25
S'MG_JEN_Cohset::Jones()'
p329
sg27
g3
sg34
(dp330
g1
I01
sg37
I01
sg38
I01
sg41
I01
sg42
I01
sg43
I01
sg44
I01
ssg45
S'MG_JEN_CohsetJones'
p331
sg47
g48
sg51
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-30 09:55'
p332
sg53
S'Jones'
p333
sg55
(dp334
g1
(lp335
g2
ag60
ag160
asg37
(lp336
(lp337
I0
aI1
aI2
aI3
aI4
aa(lp338
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp339
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp340
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
ag161
asg38
(lp341
I00
ag326
asg41
(lp342
Nag116
ag327
asg42
(lp343
NaS'@@@Jsequence_KJones'
p344
asg43
(lp345
NaS'@@@Jsequence_simul'
p346
asS'Jsequence'
p347
(lp348
(lp349
S'GJones'
p350
aa(lp351
g82
aa(lp352
g285
aa(lp353
S'KJones'
p354
aa(lp355
g203
aa(lp356
g350
ag203
aa(lp357
S'JJones'
p358
aa(lp359
aS'@@Jsequence'
p360
asg44
(lp361
NaS'@@@Jsequence'
p362
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p363
sg125
S'25dec2005'
p364
sg127
S'MG_JEN_Cohset'
p365
sg131
S'** Specific description of inarg record for: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-30 09:55'
p366
sg28
(dp367
g30
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p368
sg32
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p369
sS'3'
p370
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p371
sS'2'
p372
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p373
sS'5'
p374
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p375
sS'4'
p376
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p377
sS'6'
p378
S"  1: .../MG_JEN_Cohset.Jones() (qual=None): .modify(Jsequence):   []  ->  ['BJones']"
p379
ssg135
g363
sg133
(dp380
g38
I00
sg41
I00
sg1
I00
sg37
I00
ssg136
(lp381
g23
ag37
ag1
ag44
ag43
ag42
ag41
ag38
ag347
aS'./MG_JEN_Joneset.GJones()'
p382
ag254
ag5
aS'./MG_JEN_Joneset.KJones()'
p383
ag162
aS'./MG_JEN_Joneset.JJones()'
p384
asg138
(dp385
g1
g141
sg37
g155
sg38
g154
sg41
g159
sg42
g151
sg43
g151
sg347
S'sequence of Jones matrices to be used'
p386
sg44
g151
ssg49
S'Make a Joneset by creating and multiplying a sequence of one ore more Jonesets'
p387
ssg383
(dp388
g1
S'@@polrep'
p389
sg37
S'@@stations'
p390
sg23
(dp391
g25
S'MG_JEN_Joneset::KJones()'
p392
sg27
g383
sg34
(dp393
g42
I01
sg43
I01
sg37
I01
sg1
I01
sg44
I01
ssg45
S'MG_JEN_JonesetKJones'
p394
sg47
g48
sg49
S'defines diagonal KJones matrices for DFT Fourier kernel'
p395
sg51
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-30 09:55'
p396
sg53
S'KJones'
p397
sg55
(dp398
g42
(lp399
g354
aS'@@@Jsequence_KJones'
p400
asg43
(lp401
g354
aS'@@@Jsequence_simul'
p402
asg37
(lp403
(lp404
I0
aI1
aI2
aI3
aI4
aa(lp405
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp406
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp407
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
ag390
asg1
(lp408
g2
ag60
ag389
asg44
(lp409
g354
aS'@@@Jsequence'
p410
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p411
sg125
S'12dec2005'
p412
sg127
S'MG_JEN_Joneset'
p413
sg131
S'** Specific description of inarg record for: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-30 09:55'
p414
sg133
(dp415
g1
I00
sg37
I00
ssg135
g411
sg136
(lp416
g23
ag37
ag1
ag44
ag43
ag42
asg138
(dp417
g42
g151
sg43
g151
sg37
g155
sg1
g141
sg44
g151
sssg42
g354
sg43
g354
sg44
g354
ssg384
(dp418
g7
I00
sg1
S'@@polrep'
p419
sS'tdeg_Jreal'
p420
I0
sg9
g10
sg13
I00
sS'all4_always'
p421
Nsg41
S'@@parmtable'
p422
sS'subtile_size_Jreal'
p423
Nsg15
I01
sg16
I10
sg17
g18
sS'tdeg_Jimag'
p424
S'@tdeg_Jreal'
p425
sg20
g21
sg22
Nsg23
(dp426
g25
S'MG_JEN_Joneset::JJones()'
p427
sg27
g384
sg34
(dp428
g17
I01
sg1
I01
sg36
I01
sg37
I01
sg9
I01
sg22
I01
sg20
I01
sg38
I01
sg39
I01
sg40
I01
sg41
I01
sg42
I01
sg43
I01
sg44
I01
sg16
I01
ssg45
S'MG_JEN_JonesetJJones'
p429
sg47
g48
sg49
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p430
sg51
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-30 09:55'
p431
sg53
S'JJones'
p432
sg55
(dp433
g7
(lp434
I01
aI00
aS'@@reset_funklet'
p435
asg1
(lp436
g2
ag60
ag419
asg420
(lp437
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p438
asg9
(lp439
g10
aS'@@color'
p440
asg13
(lp441
I01
aI00
aS'@@save_all'
p442
asg421
(lp443
Na(lp444
I14
aa(lp445
I1
aaS'WSRT/WHAT'
p446
aS'@@all4_always'
p447
asg41
(lp448
Nag116
ag422
asg423
(lp449
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p450
asg15
(lp451
I01
aI00
aS'@@auto_save'
p452
asg16
(lp453
I10
aS'@@size'
p454
asg17
(lp455
g18
aS'@@style'
p456
asg424
(lp457
I0
aI1
aI2
aI3
ag425
aS'@@tdeg_Jimag'
p458
asg20
(lp459
g21
aS'@@condeq_corrs'
p460
asg22
(lp461
NaS'@@funklet_shape'
p462
asg42
(lp463
g358
aS'@@@Jsequence_KJones'
p464
asS'fdeg_Jreal'
p465
(lp466
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p467
asg36
(lp468
F1.0
aS'@@c00_default'
p469
asg38
(lp470
I00
aS'@@uvplane_effect'
p471
asS'fdeg_Jimag'
p472
(lp473
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p474
aS'@@fdeg_Jimag'
p475
asS'subtile_size_Jimag'
p476
(lp477
S'@subtile_size_Jreal'
p478
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p479
asg37
(lp480
(lp481
I0
aI1
aI2
aI3
aI4
aa(lp482
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp483
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp484
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p485
asS'diagonal_only'
p486
(lp487
I01
aI00
aS'@@diagonal_only'
p488
asg110
(lp489
I01
aI00
aS'@@use_previous'
p490
asg39
(lp491
NaS'@@subtile_size'
p492
asg40
(lp493
NaS'@@tfdeg'
p494
asg43
(lp495
g358
aS'@@@Jsequence_simul'
p496
asg44
(lp497
g358
aS'@@@Jsequence'
p498
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p499
sg125
S'14feb2006'
p500
sg127
S'MG_JEN_Joneset'
p501
sg129
(dp502
g7
I00
sg110
I00
sg486
I00
sg15
I00
sg13
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-30 09:55'
p503
sg133
(dp504
g38
I00
sg41
I00
sg1
I00
sg37
I00
ssg135
g499
sg136
(lp505
g23
ag37
ag1
ag44
ag43
ag42
ag486
ag421
ag41
ag38
ag420
ag424
ag465
ag472
ag423
ag476
ag110
ag15
ag13
ag7
ag9
ag17
ag16
ag36
ag40
ag22
ag39
ag20
asg138
(dp506
g7
g140
sg1
g141
sg420
S'degree of time polynomial'
p507
sg9
g142
sg13
g144
sg421
S'stations for which all 4 elements will always be solved for'
p508
sg41
g159
sg423
S'sub-tile size (None=entire tile)'
p509
sg15
g145
sg16
g146
sg17
g147
sg424
g507
sg20
g149
sg22
g150
sg42
g151
sg465
S'degree of freq polynomial'
p510
sg36
g153
sg38
g154
sg472
g510
sg476
g509
sg37
g155
sg486
S'if True, solve for diagonal (11,22) elements only'
p511
sg110
g157
sg39
g158
sg40
g156
sg43
g151
sg44
g151
sssg42
g358
sg465
I0
sg36
F1.0
sg38
g471
sg472
g474
sg476
g478
sg37
g485
sg486
I00
sg110
I01
sg39
Nsg40
Nsg43
g358
sg44
g358
ssg42
Nsg43
Nsg347
(lp512
g82
asg382
(dp513
g7
I00
sg1
S'@@polrep'
p514
sS'fdeg_Ggain'
p515
I0
sg9
g10
sg13
I00
sg41
S'@@parmtable'
p516
sg15
I01
sg16
I10
sg17
g18
sS'subtile_size_Ggain'
p517
I1
sg20
g21
sg22
Nsg23
(dp518
g25
S'MG_JEN_Joneset::GJones()'
p519
sg27
g382
sg34
(dp520
g17
I01
sg1
I01
sg36
I01
sg37
I01
sg9
I01
sg44
I01
sg22
I01
sg20
I01
sg38
I01
sg39
I01
sg40
I01
sg41
I01
sg42
I01
sg43
I01
sS'Gpolar'
p521
I01
sg16
I01
ssg45
S'MG_JEN_JonesetGJones'
p522
sg47
g48
sg49
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p523
sg51
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-30 09:55'
p524
sg53
S'GJones'
p525
sg55
(dp526
g7
(lp527
I01
aI00
aS'@@reset_funklet'
p528
asg1
(lp529
g2
ag60
ag514
asg515
(lp530
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p531
asg9
(lp532
g10
aS'@@color'
p533
asg13
(lp534
I01
aI00
aS'@@save_all'
p535
asg41
(lp536
Nag116
ag516
asg15
(lp537
I01
aI00
aS'@@auto_save'
p538
asg16
(lp539
I10
aS'@@size'
p540
asg17
(lp541
g18
aS'@@style'
p542
asg517
(lp543
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p544
asg20
(lp545
g21
aS'@@condeq_corrs'
p546
asg22
(lp547
NaS'@@funklet_shape'
p548
asg42
(lp549
g350
aS'@@@Jsequence_KJones'
p550
asg44
(lp551
g350
aS'@@@Jsequence'
p552
asg36
(lp553
F1.0
aS'@@c00_default'
p554
asS'tdeg_Gphase'
p555
(lp556
I0
aI1
aI2
aI3
aS'@tdeg_Ggain'
p557
aS'@@tdeg_Gphase'
p558
asS'tdeg_Ggain'
p559
(lp560
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p561
asS'fdeg_Gphase'
p562
(lp563
I0
aI1
aI2
aI3
aS'@fdeg_Ggain'
p564
aS'@@fdeg_Gphase'
p565
asS'subtile_size_Gphase'
p566
(lp567
S'@subtile_size_Ggain'
p568
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p569
asg521
(lp570
I01
aI00
aS'@@Gpolar'
p571
asg38
(lp572
I00
aS'@@uvplane_effect'
p573
asg37
(lp574
(lp575
I0
aI1
aI2
aI3
aI4
aa(lp576
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp577
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp578
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p579
asg110
(lp580
I01
aI00
aS'@@use_previous'
p581
asg39
(lp582
NaS'@@subtile_size'
p583
asg40
(lp584
NaS'@@tfdeg'
p585
asg43
(lp586
g350
aS'@@@Jsequence_simul'
p587
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p588
sg125
S'15dec2005'
p589
sg127
S'MG_JEN_Joneset'
p590
sg129
(dp591
g7
I00
sg110
I00
sg521
I00
sg15
I00
sg13
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-30 09:55'
p592
sg133
(dp593
g38
I00
sg41
I00
sg1
I00
sg37
I00
ssg135
g588
sg136
(lp594
g23
ag37
ag1
ag44
ag43
ag42
ag521
ag41
ag38
ag559
ag555
ag515
ag562
ag517
ag566
ag110
ag15
ag13
ag7
ag9
ag17
ag16
ag36
ag40
ag22
ag39
ag20
asg138
(dp595
g7
g140
sg1
g141
sg515
S'degree of freq polynomial'
p596
sg9
g142
sg13
g144
sg41
g159
sg15
g145
sg16
g146
sg17
g147
sg517
S'sub-tile size (None=entire tile)'
p597
sg20
g149
sg22
g150
sg42
g151
sg44
g151
sg36
g153
sg555
S'degree of time polynomial'
p598
sg559
g598
sg562
g596
sg566
g597
sg521
S'obsolete, kept only for upward compatibility'
p599
sg38
g154
sg37
g155
sg110
g157
sg39
g158
sg40
g156
sg43
g151
sssg42
g350
sg44
g350
sg36
F1.0
sg555
g557
sg559
I0
sg562
g564
sg566
g568
sg521
I01
sg38
g573
sg37
g579
sg110
I01
sg39
Nsg40
Nsg43
g350
ssg44
NssS'_JEN_inarg_separator_record:_1'
p600
(dp601
S'txt'
p602
S'operations on input uv-data'
p603
ssS'./MG_JEN_Sixpack.get_Sixpack()'
p604
(dp605
S'./MG_JEN_Sixpack.newstar_source()'
p606
(dp607
S'f0'
p608
F1000000.0
sg7
I00
sS'major'
p609
F0.0
sS'unsolvable'
p610
I00
sg9
g10
sg13
I00
sS'shape'
p611
S'point'
p612
sg41
NsS'Upct'
p613
Nsg15
I01
sg16
I10
sg17
g18
sS'I0'
p614
F1.0
sS'SI'
p615
Nsg20
g21
sS'Vpct'
p616
Nsg22
NsS'pa'
p617
F0.0
sS'RA'
p618
F1.4950000000000001
sS'RM'
p619
NsS'minor'
p620
F0.0
sg23
(dp621
g25
S'MG_JEN_Sixpack::newstar_source()'
p622
sg27
g606
sg34
(dp623
g608
I01
sg609
I01
sg610
I01
sS'name'
p624
I01
sg36
I01
sg9
I01
sg39
I01
sg611
I01
sS'fsr_trace'
p625
I01
sS'punit'
p626
I00
sg22
I01
sg617
I01
sg20
I01
sg40
I01
sg17
I01
sg620
I01
sg16
I01
ssg45
S'MG_JEN_Sixpacknewstar_source'
p627
sS'callback'
p628
(dp629
g626
I01
ssg47
g48
sg49
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p630
sg51
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-30 09:55'
p631
sg53
S'newstar_source'
p632
sg55
(dp633
g608
(lp634
F1000000.0
aS'@@f0'
p635
asg7
(lp636
I01
aI00
aS'@@reset_funklet'
p637
asg609
(lp638
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p639
asg610
(lp640
I01
aI00
aS'@@unsolvable'
p641
asg9
(lp642
g10
aS'@@color'
p643
asg13
(lp644
I01
aI00
aS'@@save_all'
p645
asg611
(lp646
g612
aS'ell.gauss'
p647
aS'@@shape'
p648
asg41
(lp649
NaS'@@parmtable'
p650
asg613
(lp651
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p652
asg15
(lp653
I01
aI00
aS'@@auto_save'
p654
asg16
(lp655
I10
aS'@@size'
p656
asg17
(lp657
g18
aS'@@style'
p658
asg614
(lp659
F1.0
aF10.0
aS'@@I0'
p660
asg615
(lp661
NaF-0.69999999999999996
a(lp662
F0.44700000000000001
aF-0.184
aaS'@@SI'
p663
asg20
(lp664
g21
aS'@@condeq_corrs'
p665
asg616
(lp666
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p667
asg22
(lp668
NaS'@@funklet_shape'
p669
asg617
(lp670
F0.0
aF1.0
aF-0.5
aS'@@pa'
p671
asg618
(lp672
F0.0
aF0.5
aF1.0
aF1.4950000000000001
aF4.3570000000000002
aS'@@RA'
p673
asg619
(lp674
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p675
asg620
(lp676
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p677
asg36
(lp678
F1.0
aS'@@c00_default'
p679
asS'Qpct'
p680
(lp681
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p682
asg626
(lp683
S'unpol'
p684
aS'unpol2'
p685
aS'unpol10'
p686
aS'QUV'
p687
aS'QU'
p688
aS'Qonly'
p689
aS'Uonly'
p690
aS'Vonly'
p691
aS'3c147'
p692
aS'3c286'
p693
aS'3c48'
p694
aS'3c295'
p695
aS'D1'
p696
aS'RMtest'
p697
aS'SItest'
p698
aS'@@punit'
p699
asS'Dec'
p700
(lp701
F0.5
aF1.0
aF0.87
aF1.0920000000000001
aS'@@Dec'
p702
asg624
(lp703
NaS'@@name'
p704
asg625
(lp705
I01
aI00
aS'@@fsr_trace'
p706
asg110
(lp707
I01
aI00
aS'@@use_previous'
p708
asg39
(lp709
NaS'@@subtile_size'
p710
asg40
(lp711
NaS'@@tfdeg'
p712
assg120
g121
sg125
S'10feb2006'
p713
sg123
S'2006-03-30 09:55'
p714
sg127
S'MG_JEN_Sixpack'
p715
sg129
(dp716
g7
I00
sg610
I00
sg625
I00
sg110
I00
sg13
I00
sg15
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-30 09:55'
p717
sg122
I00
sg135
g714
sg136
(lp718
g23
ag626
ag624
ag41
ag610
ag614
ag680
ag613
ag616
ag619
ag615
ag608
ag618
ag700
ag625
ag611
ag609
ag620
ag617
ag110
ag15
ag13
ag7
ag9
ag17
ag16
ag36
ag40
ag22
ag39
ag20
asg138
(dp719
g608
S'reference freq (Hz): I=I0 @ f=f0'
p720
sg7
g140
sg609
S'major axis (arcsec)'
p721
sg610
S'if True, do NOT store solvegroup/parmgroup info'
p722
sg9
g142
sg13
g144
sg611
S'source shape'
p723
sg41
S'name of the MeqParm table (AIPS++)'
p724
sg613
S'Stokes U (percentage of I)'
p725
sg15
g145
sg16
g146
sg17
g147
sg614
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p726
sg615
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p727
sg20
g149
sg616
S'Stokes V (percentage of I)'
p728
sg22
g150
sg617
S'position angle (rad)'
p729
sg618
S'Right Ascension (rad, J2000)'
p730
sg619
S'Intrinsic Rotation Measure (rad/m2)'
p731
sg620
S'minor axis (arcsec)'
p732
sg36
g153
sg680
S'Stokes Q (percentage of I)'
p733
sg626
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n- D1:      cps in D1.MS \n'
p734
sg700
S'Declination (rad, J2000)'
p735
sg625
S'If True, attach to forest state record'
p736
sg110
g157
sg39
g158
sg40
g156
sssS'slave'
p737
I01
sg36
F1.0
sg680
Nsg626
g684
sg700
F0.87
sg624
Nsg625
I01
sg110
I01
sg39
Nsg40
Nssg23
(dp738
g25
S'MG_JEN_Sixpack::get_Sixpack()'
p739
sg27
g604
sg34
(dp740
S'punit_from_LSM'
p741
I00
ssg45
S'MG_JEN_Sixpackget_Sixpack'
p742
sS'browse'
p743
(dp744
g741
S'*.lsm'
p745
ssg47
g48
sg51
S'MG_JEN_Sixpack::get_Sixpack()  version=22mar2006  defined=2006-03-30 09:55'
p746
sg53
S'get_Sixpack'
p747
sg55
(dp748
g741
(lp749
NaS'@@punit_from_LSM'
p750
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p751
sg125
S'22mar2006'
p752
sg127
S'MG_JEN_Sixpack'
p753
sg131
S'** Specific description of inarg record for: MG_JEN_Sixpack::get_Sixpack()  version=22mar2006  defined=2006-03-30 09:55'
p754
sg28
(dp755
g32
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p756
ssg135
g751
sg136
(lp757
g23
ag741
ag606
asg138
(dp758
g741
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p759
ssg49
S'Get a Sixpack, either from a LSM or a Newstar source'
p760
ssg741
NssS'ms_name'
p761
S'D1.MS'
p762
sg41
Nsg23
(dp763
g27
S'./MG_JEN_cps.'
p764
sg138
(dp765
g1
g141
sS'master_reqseq'
p766
S'if True, use a master reqseq for solver(s)'
p767
sg37
g155
sS'insert_flagger'
p768
S'if True, insert a flagger'
p769
sS'redun'
p770
S'if True, redundant spacing calibration'
p771
sS'insert_solver'
p772
S'if True, insert a solver'
p773
sg761
S'name of the (AIPS++) Measurement Set'
p774
sS'chain_solvers'
p775
S'if True, chain the solvers (recommended)'
p776
sS'num_cells'
p777
S'if defined, ModRes argument [ntime,nfreq]'
p778
sg41
g159
sg42
g151
sg43
g151
sS'tile_size'
p779
S'(inputrec) size (in time-slots) of the input data-tile'
p780
sg38
g154
sg44
g151
ssS'reference'
p781
I00
sg47
g48
sg127
S'MG_JEN_cps'
p782
sg34
(dp783
g1
I00
sg766
I01
sg37
I00
sS'last_changed'
p784
I01
sg770
I00
sg38
I00
sg775
I01
sg777
I00
sg42
I01
sg43
I01
sg44
I01
ssg743
(dp785
g761
S'*.MS'
p786
ssg125
g589
sg49
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p787
sg129
(dp788
g766
I00
sg768
I00
sg770
I00
sg772
I00
sg784
I00
ssg51
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p789
sg55
(dp790
g1
(lp791
g2
ag60
aS'@@polrep'
p792
asg766
(lp793
I01
aI00
aS'@@master_reqseq'
p794
asg37
(lp795
(lp796
I0
aI1
aI2
aI3
aI4
aa(lp797
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp798
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp799
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p800
asg768
(lp801
I01
aI00
aS'@@insert_flagger'
p802
asg784
(lp803
S'd30jan2006'
p804
aS'@@last_changed'
p805
asg772
(lp806
I01
aI00
aS'@@insert_solver'
p807
asg770
(lp808
I01
aI00
aS'@@redun'
p809
asg761
(lp810
g762
aS'@@ms_name'
p811
asg775
(lp812
I01
aS'@@chain_solvers'
p813
asg777
(lp814
Na(lp815
I5
aI2
aa(lp816
I2
aI2
aa(lp817
I3
aI3
aaS'@@num_cells'
p818
asg41
(lp819
Nag116
aS'@@parmtable'
p820
asg42
(lp821
NaS'@@@Jsequence_KJones'
p822
asg43
(lp823
NaS'@@@Jsequence_simul'
p824
asg779
(lp825
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p826
asg38
(lp827
I00
aS'@@uvplane_effect'
p828
asg44
(lp829
NaS'@@@Jsequence'
p830
assg120
Nsg135
S'2006-03-30 09:55'
p831
sS'HISTORY'
p832
(dp833
g30
S'2006-03-30 09:55: Derived from: MG_JEN_cps_BJones.inarg'
p834
sg32
S'2006-03-30 09:55: Derived from: MG_JEN_cps.inarg'
p835
ssg25
S'MG_JEN_cps'
p836
sg131
S'Predefined inarg record for solving for BJones on a Central Point Source'
p837
sS'save_file'
p838
S'MG_JEN_cps_BJones_protected.inarg'
p839
sS'file_filter'
p840
S'MG_JEN_cps*.inarg'
p841
sg53
g121
sg122
I01
sg123
g831
sg28
(dp842
S'11'
p843
S".modify():   ** OK ** (['fdeg_Breal', 'data_column_name', 'tdeg_Breal', 'fdeg_Bimag', 'solvegroup', 'tdeg_Bimag', 'Jsequence'])"
p844
sS'10'
p845
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p846
sg30
S".modify():   ** OK ** (['uvplane_effect'])"
p847
sg32
S'  0: ./MG_JEN_cps. (qual=None): .modify(uvplane_effect):   False  ->  True'
p848
sg370
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p849
sg372
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p850
sg374
S'** JEN_inarg.separator(): : insert a solver'
p851
sg376
S'** JEN_inarg.separator(): : operations on input uv-data'
p852
sS'7'
p853
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p854
sg378
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.get_Sixpack()'
p855
sS'9'
p856
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p857
sS'8'
p858
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict_cps()'
p859
ssg136
(lp860
g23
aS'script_name'
p861
ag772
ag768
ag784
ag761
ag779
ag37
ag1
ag44
ag43
ag42
ag41
ag38
ag775
ag766
ag770
ag777
aS'./MG_JEN_exec.stream_control()'
p862
aS'./MG_JEN_Cohset.make_spigots()'
p863
ag600
aS'_JEN_inarg_separator_record:_2'
p864
ag604
ag3
aS'./MG_JEN_Cohset.predict_cps()'
p865
aS'./MG_JEN_Cohset.insert_solver()'
p866
aS'./MG_JEN_Cohset.make_sinks()'
p867
assg867
(dp868
S'fullDomainMux'
p869
I01
sS'output_col'
p870
S'PREDICT'
p871
sS'visu'
p872
I01
sS'flag'
p873
I00
sg23
(dp874
g25
S'MG_JEN_Cohset::make_sinks()'
p875
sg27
g867
sg135
S'2006-03-30 09:55'
p876
sg131
S'** Specific description of inarg record for: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-30 09:55'
p877
sg45
S'MG_JEN_Cohsetmake_sinks'
p878
sg47
g48
sg51
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-30 09:55'
p879
sg53
S'make_sinks'
p880
sg55
(dp881
g873
(lp882
I01
aI00
aS'@@flag'
p883
asg872
(lp884
I01
aI00
aS'@@visu'
p885
asg869
(lp886
I01
aI00
aS'@@fullDomainMux'
p887
asg870
(lp888
g871
aS'RESIDUALS'
p889
aS'DATA'
p890
aS'@@output_col'
p891
asS'visu_array_config'
p892
(lp893
I01
aI00
aS'@@visu_array_config'
p894
assg120
Nsg125
g364
sg123
g876
sg127
S'MG_JEN_Cohset'
p895
sg129
(dp896
g873
I00
sg872
I00
sg869
I00
sg892
I00
ssg122
I00
sg136
(lp897
g23
ag870
ag892
ag872
ag873
ag869
asg138
(dp898
g873
S'if True, insert a flagger for the output uv-data'
p899
sg872
S'if True, visualise the output uv-data'
p900
sg869
S'if True, attach an extra VisDataMux'
p901
sg870
S'name of the logical (VisTile) output column'
p902
sg892
S'if True, visualise the array config (from MS)'
p903
ssg49
S'Make sink nodes in the given Cohset object'
p904
ssg892
I01
ssg779
I10
sg863
(dp905
g873
I00
sg872
I01
sg23
(dp906
g25
S'MG_JEN_Cohset::make_spigots()'
p907
sg27
g863
sg135
S'2006-03-30 09:55'
p908
sg34
(dp909
S'input_col'
p910
I01
ssg45
S'MG_JEN_Cohsetmake_spigots'
p911
sg47
g48
sg51
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-30 09:55'
p912
sg53
S'make_spigots'
p913
sg55
(dp914
g873
(lp915
I01
aI00
aS'@@flag'
p916
asS'MS_corr_index'
p917
(lp918
(lp919
I0
aI1
aI2
aI3
aa(lp920
I0
aI-1
aI-1
aI1
aa(lp921
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p922
asg910
(lp923
g890
ag871
ag889
aS'@@input_col'
p924
asg872
(lp925
I01
aI00
aS'@@visu'
p926
assg120
Nsg125
g364
sg123
g908
sg127
S'MG_JEN_Cohset'
p927
sg129
(dp928
g873
I00
sg872
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-30 09:55'
p929
sg122
I00
sg136
(lp930
g23
ag910
ag917
ag872
ag873
asg138
(dp931
g873
S'if True, insert a flagger for the input uv-data'
p932
sg917
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p933
sg910
S'name of the logical (VisTile) input column'
p934
sg872
S'if True, visualise the input uv-data'
p935
ssg49
S'Make spigot nodes in the given Cohset object'
p936
ssg910
g890
sg917
(lp937
I0
aI1
aI2
aI3
assg44
Nsg42
Nsg768
I00
sg784
g804
sg38
I01
sg865
(dp938
g1
S'@@polrep'
p939
sg37
S'@@stations'
p940
sg23
(dp941
g25
S'MG_JEN_Cohset::predict_cps()'
p942
sg27
g865
sg34
(dp943
g42
I01
sg43
I01
sg44
I01
sg1
I01
sg37
I01
ssg45
S'MG_JEN_Cohsetpredict_cps'
p944
sg47
g48
sg51
S'MG_JEN_Cohset::predict_cps()  version=20mar2006  defined=2006-03-30 09:55'
p945
sg53
S'predict_cps'
p946
sg55
(dp947
g42
(lp948
NaS'@@@Jsequence_KJones'
p949
asg43
(lp950
NaS'@@@Jsequence_simul'
p951
asg44
(lp952
NaS'@@@Jsequence'
p953
asg1
(lp954
g2
ag60
ag939
asg37
(lp955
(lp956
I0
aI1
aI2
aI3
aI4
aa(lp957
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp958
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp959
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
ag940
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p960
sg125
S'20mar2006'
p961
sg127
S'MG_JEN_Cohset'
p962
sg131
S'** Specific description of inarg record for: MG_JEN_Cohset::predict_cps()  version=20mar2006  defined=2006-03-30 09:55'
p963
sg133
(dp964
g1
I00
sg37
I00
ssg135
g960
sg136
(lp965
g23
ag37
ag1
ag44
ag43
ag42
asg138
(dp966
g42
g151
sg43
g151
sg44
g151
sg1
g141
sg37
g155
ssg49
S'Obsolete (upward compatibility) version of .predict_cps()'
p967
ssg42
Nsg43
Nsg44
Nssg861
g836
sg777
Nsg766
I00
sg37
g796
sg862
(dp968
S'channel_start_index'
p969
I10
sS'data_column_name'
p970
S'CORRECTED_DATA'
p971
sS'predict_column'
p972
g971
sg761
S'@@ms_name'
p973
sg23
(dp974
g27
g862
sg138
(dp975
g969
S'(inputrec.sel) index of first selected freq channel'
p976
sg970
S'(inputrec) MS input column'
p977
sg972
S'MS output column to be associated with the VisTile predict-column'
p978
sg761
g774
sg779
g780
sS'channel_increment'
p979
S'(inputrec.sel) take every nth channel (1=all)'
p980
sS'channel_end_index'
p981
S'(inputrec.sel) index of last selected freq channel'
p982
sS'write_flags'
p983
S'(outputrec) if True, write flags to MS'
p984
ssg47
g48
sg127
S'MG_JEN_exec'
p985
sg34
(dp986
g761
I01
sg779
I01
ssg743
(dp987
g761
g786
ssg125
S'20jan2006'
p988
sg133
(dp989
g761
I00
sg779
I00
ssg49
S'** Description of script: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p990
sg129
(dp991
g983
I00
ssg51
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p992
sg55
(dp993
g969
(lp994
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p995
asg970
(lp996
g890
ag971
aS'@@data_column_name'
p997
asg972
(lp998
g890
ag971
aS'MODEL_DATA'
p999
aS'@@predict_column'
p1000
asg761
(lp1001
g762
ag973
asg779
(lp1002
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p1003
asg979
(lp1004
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p1005
asg981
(lp1006
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p1007
asg983
(lp1008
I01
aI00
aS'@@write_flags'
p1009
assg120
Nsg135
S'2006-03-30 09:55'
p1010
sg25
S'MG_JEN_exec::stream_control()'
p1011
sg131
S'** Specific description of inarg record for: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p1012
sg45
S'MG_JEN_execstream_control'
p1013
sg53
S'stream_control'
p1014
sg122
I00
sg123
g1010
sg28
(dp1015
g32
S'  1: .../MG_JEN_exec.stream_control() (qual=None): .modify(data_column_name):   DATA  ->  CORRECTED_DATA'
p1016
ssg136
(lp1017
g23
ag761
ag779
ag970
ag969
ag981
ag979
ag983
ag972
assg779
g1003
sg979
I1
sg981
I50
sg983
I00
ssg770
I00
sg772
I01
sg864
(dp1018
g602
S'insert a solver'
p1019
ssg775
I01
sg43
Nsg866
(dp1020
S'correct_after'
p1021
I01
sg766
S'@@master_reqseq'
p1022
sS'condeq_unop'
p1023
Nsg872
I01
sg770
S'@@redun'
p1024
sS'solver_subtree'
p1025
NsS'subtract_after'
p1026
I00
sg775
S'@@chain_solvers'
p1027
sg23
(dp1028
g25
S'MG_JEN_Cohset::insert_solver()'
p1029
sg27
g866
sg34
(dp1030
g766
I01
sg770
I01
sg1025
I01
sg775
I01
sS'flag_residuals'
p1031
I01
sg777
I01
ssg45
S'MG_JEN_Cohsetinsert_solver'
p1032
sg47
g48
sg51
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-30 09:55'
p1033
sg53
S'insert_solver'
p1034
sg55
(dp1035
g1021
(lp1036
I01
aI00
aS'@@correct_after'
p1037
asg766
(lp1038
I01
aI00
ag1022
asg1023
(lp1039
NaS'Abs'
p1040
aS'Arg'
p1041
aS'@@condeq_unop'
p1042
asg872
(lp1043
I01
aI00
aS'@@visu'
p1044
asg770
(lp1045
I01
aI00
ag1024
asg1025
(lp1046
NaS'@@solver_subtree'
p1047
asg1026
(lp1048
I01
aI00
aS'@@subtract_after'
p1049
asg775
(lp1050
I01
ag1027
asg1031
(lp1051
I01
aI00
aS'@@flag_residuals'
p1052
asg777
(lp1053
Na(lp1054
I5
aI2
aa(lp1055
I2
aI2
aa(lp1056
I3
aI3
aaS'@@num_cells'
p1057
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p1058
sg125
g364
sg127
S'MG_JEN_Cohset'
p1059
sg129
(dp1060
g1021
I00
sg766
I00
sg872
I00
sg770
I00
sg1026
I00
sg1031
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-30 09:55'
p1061
sg28
(dp1062
g32
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p1063
ssg135
g1058
sg133
(dp1064
g770
I00
sg775
I00
sg766
I00
sg777
I00
ssg136
(lp1065
g23
ag1025
ag770
ag777
ag775
ag766
ag1023
ag872
ag1026
ag1021
ag1031
aS'./MG_JEN_Cohset.solver_subtree()'
p1066
asg138
(dp1067
g1021
S'if True, correct measured with predicted.Joneset'
p1068
sg766
g767
sg1023
S'Optional unary operation on Condeq inputs'
p1069
sg872
S'if True, include full visualisation'
p1070
sg770
g771
sg1025
S'solver subtree qualifier(s)'
p1071
sg1026
S'if True, subtract predicted from measured'
p1072
sg775
g776
sg1031
S'if True, flag the residuals'
p1073
sg777
g778
ssg49
S'insert one or more solver subtrees in the data stream'
p1074
ssg777
g1057
sg1066
(dp1075
S'rmin'
p1076
NsS'setBalanced'
p1077
I00
sg872
I01
sS'epsilon'
p1078
F0.0001
sS'rmax'
p1079
NsS'derivative_eps'
p1080
F1e-08
sS'usesvd'
p1081
I01
sS'debug_level'
p1082
I10
sS'solvegroup'
p1083
(lp1084
g82
asg23
(dp1085
g25
S'MG_JEN_Cohset::solver_subtree()'
p1086
sg27
g1066
sg28
(dp1087
g32
S"  2: ...../MG_JEN_Cohset.solver_subtree() (qual=None): .modify(solvegroup):   []  ->  ['BJones']"
p1088
ssg34
(dp1089
g1082
I01
sg1080
I01
sg1077
I01
sS'epsval'
p1090
I01
sg777
I00
ssg45
S'MG_JEN_Cohsetsolver_subtree'
p1091
sg47
g48
sg49
S'Make a solver-subtree for the given Condeq Cohset'
p1092
sg51
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-30 09:55'
p1093
sg53
S'solver_subtree'
p1094
sg55
(dp1095
g1076
(lp1096
NaI100
aI200
aI500
aS'@@rmin'
p1097
asg872
(lp1098
I01
aI00
aS'@@visu'
p1099
asg1078
(lp1100
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p1101
asS'colin_factor'
p1102
(lp1103
F1e-08
aF0.0
aS'@@colin_factor'
p1104
asg1079
(lp1105
NaI500
aI1000
aI2000
aS'@@rmax'
p1106
asg1080
(lp1107
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@derivative_eps'
p1108
asg1081
(lp1109
I01
aI00
aS'@@usesvd'
p1110
asg1082
(lp1111
I10
aS'@@debug_level'
p1112
asg1083
(lp1113
(lp1114
a(lp1115
g350
aa(lp1116
S'Ggain'
p1117
aa(lp1118
S'Gphase'
p1119
aa(lp1120
S'Gpol1'
p1121
aa(lp1122
S'Gpol2'
p1123
aa(lp1124
g358
aa(lp1125
g358
aS'stokesU'
p1126
aa(lp1127
g358
aS'stokesQ'
p1128
aa(lp1129
g358
aS'stokesV'
p1130
aa(lp1131
S'stokesQU'
p1132
ag358
aa(lp1133
S'stokesQUV'
p1134
ag358
aa(lp1135
g350
aS'stokesI'
p1136
aa(lp1137
g1136
aa(lp1138
S'stokesIQU'
p1139
aa(lp1140
S'stokesIQUV'
p1141
aa(lp1142
S'stokesIV'
p1143
aa(lp1144
g1132
aa(lp1145
g1134
aa(lp1146
g350
aS'DJones'
p1147
aa(lp1148
g1147
aa(lp1149
S'Dang'
p1150
aa(lp1151
S'Dell'
p1152
aa(lp1153
S'Dreal'
p1154
aa(lp1155
S'Dimag'
p1156
aa(lp1157
g350
ag1147
ag285
aa(lp1158
g285
aa(lp1159
g350
ag82
aa(lp1160
g82
aa(lp1161
S'Breal'
p1162
aa(lp1163
S'Bimag'
p1164
aa(lp1165
S'Bpol1'
p1166
aa(lp1167
S'Bpol2'
p1168
aaS'@@solvegroup'
p1169
asg1090
(lp1170
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsval'
p1171
asg777
(lp1172
Na(lp1173
I5
aI2
aa(lp1174
I2
aI2
aa(lp1175
I3
aI3
aaS'@@num_cells'
p1176
asg1077
(lp1177
I01
aI00
aS'@@setBalanced'
p1178
asS'num_iter'
p1179
(lp1180
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1181
asS'condition'
p1182
(lp1183
NaS'Gphase_X_sum=0.0'
p1184
aS'Gphase_Y_sum=0.0'
p1185
a(lp1186
g1184
ag1185
aa(lp1187
S'Gphase_X_first=0.0'
p1188
aS'Gphase_Y_first=0.0'
p1189
aa(lp1190
S'Gphase_X_last=0.0'
p1191
aS'Gphase_Y_last=0.0'
p1192
aaS'Dang_sum=0.0'
p1193
a(lp1194
S'Bimag_X_sum=0.0'
p1195
aS'Bimag_Y_sum=0.0'
p1196
aa(lp1197
S'Breal_X_product=1.0'
p1198
aS'Breal_Y_product=1.0'
p1199
aaS'@@condition'
p1200
asS'history'
p1201
(lp1202
I01
aI00
aS'@@history'
p1203
assg120
Nsg125
S'20dec2005'
p1204
sg123
S'2006-03-30 09:55'
p1205
sg127
S'MG_JEN_Cohset'
p1206
sg129
(dp1207
g1081
I00
sg1077
I00
sg872
I00
sg1201
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-30 09:55'
p1208
sg122
I00
sg135
g1205
sg136
(lp1209
g23
ag1083
ag1182
ag1076
ag1079
ag777
ag1179
ag1078
ag1090
ag1080
ag1102
ag1081
ag1077
ag1082
ag872
ag1201
asg138
(dp1210
g1076
S'if specified, only use baselines>=rmin'
p1211
sg872
S'if True, include visualisation'
p1212
sg1078
S'iteration control criterion...'
p1213
sg1102
S'colinearity factor'
p1214
sg1079
S'if specified, only use baselines<=rmax'
p1215
sg1080
S'NEW: also iteration control...'
p1216
sg1081
S'if True, use Singular Value Decomposition (SVD)'
p1217
sg1082
S'solver debug_level'
p1218
sg1083
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p1219
sg1090
S'NEW: WNB version of epsilon....'
p1220
sg777
g778
sg1077
S'NEW: if True, add (..) to diagonal, otherwise multiply (1+lambda)'
p1221
sg1179
S'max number of iterations (now also in fitter)'
p1222
sg1182
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p1223
sg1201
S'if True, include history collection of metrics'
p1224
sssg777
Nsg1090
F1e-08
sg1201
I01
sg1179
I5
sg1182
Nsg1102
F0.0
ssg1031
I00
ss.