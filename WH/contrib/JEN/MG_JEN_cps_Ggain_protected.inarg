(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'reset_funklet'
p7
I01
sg1
S'@@polrep'
p8
sS'color'
p9
S'red'
p10
sS'subtile_size_Bimag'
p11
NsS'subtile_size_Breal'
p12
NsS'auto_save'
p13
I01
sS'size'
p14
I10
sS'style'
p15
S'circle'
p16
sS'fdeg_Breal'
p17
I5
sS'condeq_corrs'
p18
S'*'
p19
sS'funklet_shape'
p20
NsS'_JEN_inarg_CTRL_record:'
p21
(dp22
S'localscope'
p23
g5
sS'help'
p24
(dp25
g7
S'if True, do NOT use any MeqParm table values when solvable'
p26
sg1
S'polarisation representation'
p27
sg9
S'plot_color'
p28
sg11
S'sub-tile size (None=entire tile)'
p29
sg12
g29
sg13
S'if True, save the result of every iteration (slow!)'
p30
sg14
S'size of plotted symbol'
p31
sg15
S'plot_style'
p32
sg17
S'degree of freq polynomial'
p33
sg18
S'correlations to be used for solving'
p34
sg20
S'shape [time,freq] of default funklet'
p35
sS'@Jsequence_KJones'
p36
S'list membership indication (used in JEN_inargGui)'
p37
sS'tdeg_Bimag'
p38
S'degree of time polynomial'
p39
sS'@Jsequence'
p40
g37
sS'c00_default'
p41
S'default value of c[0,0] coefficient'
p42
sS'fdeg_Bimag'
p43
g33
sS'uvplane_effect'
p44
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p45
sS'parmtable'
p46
S'name of the MeqParm table to be used'
p47
sS'stations'
p48
S'the (subset of) stations to be used'
p49
sS'tdeg_Breal'
p50
g39
sS'use_previous'
p51
S'if True, start with the previous solution'
p52
sS'subtile_size'
p53
S'size (time-slots) of a domain sub-tile'
p54
sS'tfdeg'
p55
S'(time,freq) polynomial degree'
p56
sS'@Jsequence_simul'
p57
g37
ssS'target_dir'
p58
S'.'
p59
sS'target_module'
p60
S'MG_JEN_Joneset'
p61
sS'JEN_inargGUI_ident'
p62
(dp63
g7
I129
sg51
I127
sg17
I123
sg11
I126
sg50
I121
sg43
I124
sg12
I125
sg38
I122
sg13
I128
ssS'hide'
p64
(dp65
g15
I01
sg1
I01
sg41
I01
sg48
I01
sg9
I01
sg53
I01
sg18
I01
sg44
I01
sg20
I01
sg55
I01
sg46
I01
sg36
I01
sg57
I01
sg14
I01
sg40
I01
ssS'version'
p66
S'16dec2005'
p67
sS'mutable'
p68
(dp69
g44
I00
sg46
I00
sg1
I00
sg48
I00
ssS'description'
p70
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p71
sS'editable'
p72
(dp73
g7
I00
sg13
I00
sg51
I00
ssS'oneliner'
p74
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-24 00:11'
p75
sS'choice'
p76
(dp77
g7
(lp78
I01
aI00
aS'@@reset_funklet'
p79
asg1
(lp80
g2
aS'circular'
p81
ag8
asg9
(lp82
g10
aS'@@color'
p83
asg11
(lp84
S'@subtile_size_Breal'
p85
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p86
asg12
(lp87
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p88
asg13
(lp89
I01
aI00
aS'@@auto_save'
p90
asg14
(lp91
I10
aS'@@size'
p92
asg15
(lp93
g16
aS'@@style'
p94
asg17
(lp95
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p96
asg18
(lp97
g19
aS'@@condeq_corrs'
p98
asg20
(lp99
NaS'@@funklet_shape'
p100
asg36
(lp101
S'BJones'
p102
aS'@@@Jsequence_KJones'
p103
asg38
(lp104
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p105
aS'@@tdeg_Bimag'
p106
asg40
(lp107
g102
aS'@@@Jsequence'
p108
asg41
(lp109
F1.0
aS'@@c00_default'
p110
asg43
(lp111
I3
aI4
aI5
aI6
aS'@fdeg_Breal'
p112
aS'@@fdeg_Bimag'
p113
asg44
(lp114
I00
aS'@@uvplane_effect'
p115
asg46
(lp116
NaS'test'
p117
aS'@@parmtable'
p118
asg48
(lp119
(lp120
I0
aI1
aI2
aI3
aI4
aa(lp121
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp122
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp123
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p124
aS'@@stations'
p125
asg50
(lp126
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p127
asg51
(lp128
I01
aI00
aS'@@use_previous'
p129
asg53
(lp130
NaS'@@subtile_size'
p131
asg55
(lp132
NaS'@@tfdeg'
p133
asg57
(lp134
g102
aS'@@@Jsequence_simul'
p135
assS'qual'
p136
S''
p137
sS'last_edited'
p138
S'2006-03-24 00:11'
p139
sS'target_definition'
p140
S'MG_JEN_Joneset::BJones()'
p141
sS'inarg_specific'
p142
S'** Specific description of inarg record for: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-24 00:11'
p143
sS'barescope'
p144
S'MG_JEN_JonesetBJones'
p145
sS'target_function'
p146
S'BJones'
p147
sS'protected'
p148
I00
sS'datetime_defined'
p149
g139
sS'MESSAGE'
p150
(dp151
S'1'
p152
S'.modify( tdeg_Bimag ): @tdeg_Breal  ->  0'
p153
sS'0'
p154
S'.modify( subtile_size_Bimag ): @subtile_size_Breal  ->  None'
p155
ssS'order'
p156
(lp157
g21
ag48
ag1
ag40
ag57
ag36
ag46
ag44
ag50
ag38
ag17
ag43
ag12
ag11
ag51
ag13
ag7
ag9
ag15
ag14
ag41
ag55
ag20
ag53
ag18
assg36
g102
sg38
I0
sg40
g102
sg41
F1.0
sg43
g112
sg44
g115
sg48
g125
sg55
Nsg50
I0
sg51
I01
sg53
Nsg46
g118
sg57
g102
ssg1
S'@@polrep'
p158
sg48
S'@@stations'
p159
sS'./MG_JEN_Joneset.DJones_WSRT()'
p160
(dp161
g7
I01
sg1
S'@@polrep'
p162
sg9
g10
sS'fdeg_Dell'
p163
S'@fdeg_Dang'
p164
sS'coupled_XY_Dell'
p165
I01
sg46
S'@@parmtable'
p166
sS'subtile_size_Dang'
p167
Nsg13
I01
sg14
I10
sg15
g16
sg18
g19
sg20
Nsg21
(dp168
g23
g160
sg24
(dp169
g7
g26
sg1
g27
sg9
g28
sg163
S'degree of freq polynomial'
p170
sg165
S'if True, XDell = -YDell per station'
p171
sg46
g47
sg167
S'sub-tile size (None=entire tile)'
p172
sg13
g30
sg14
g31
sg15
g32
sg18
g34
sg20
g35
sg36
g37
sS'subtile_size_Dell'
p173
g172
sg40
g37
sS'fdeg_Dang'
p174
g170
sg41
g42
sg44
g45
sS'tdeg_Dell'
p175
S'degree of time polynomial'
p176
sS'coupled_XY_Dang'
p177
S'if True, XDang = YDang per station'
p178
sS'tdeg_Dang'
p179
g176
sg48
g49
sg51
g52
sg53
g54
sg55
g56
sg57
g37
ssg58
g59
sg60
S'MG_JEN_Joneset'
p180
sg62
(dp181
g174
I154
sg7
I160
sg163
I155
sg165
I149
sg51
I158
sg13
I159
sg175
I153
sg177
I148
sg167
I156
sg173
I157
sg179
I152
ssg64
(dp182
g15
I01
sg1
I01
sg41
I01
sg48
I01
sg9
I01
sg53
I01
sg18
I01
sg44
I01
sg20
I01
sg55
I01
sg46
I01
sg36
I01
sg57
I01
sg14
I01
sg40
I01
ssg66
g67
sg68
(dp183
g44
I00
sg46
I00
sg1
I00
sg48
I00
ssg70
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p184
sg72
(dp185
g7
I00
sg177
I00
sg165
I00
sg13
I00
sg51
I00
ssg74
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-24 00:11'
p186
sg76
(dp187
g7
(lp188
I01
aI00
aS'@@reset_funklet'
p189
asg1
(lp190
g2
ag81
ag162
asg9
(lp191
g10
aS'@@color'
p192
asg163
(lp193
I0
aI1
aI2
aI3
ag164
aS'@@fdeg_Dell'
p194
asg165
(lp195
I01
aI00
aS'@@coupled_XY_Dell'
p196
asg46
(lp197
Nag117
ag166
asg167
(lp198
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p199
asg13
(lp200
I01
aI00
aS'@@auto_save'
p201
asg14
(lp202
I10
aS'@@size'
p203
asg15
(lp204
g16
aS'@@style'
p205
asg18
(lp206
g19
aS'@@condeq_corrs'
p207
asg20
(lp208
NaS'@@funklet_shape'
p209
asg36
(lp210
S'DJones_WSRT'
p211
aS'@@@Jsequence_KJones'
p212
asg173
(lp213
S'@subtile_size_Dang'
p214
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p215
asg40
(lp216
g211
aS'@@@Jsequence'
p217
asg174
(lp218
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p219
asg41
(lp220
F1.0
aS'@@c00_default'
p221
asg44
(lp222
I00
aS'@@uvplane_effect'
p223
asg175
(lp224
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p225
aS'@@tdeg_Dell'
p226
asg177
(lp227
I01
aI00
aS'@@coupled_XY_Dang'
p228
asg179
(lp229
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p230
asg48
(lp231
(lp232
I0
aI1
aI2
aI3
aI4
aa(lp233
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp234
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp235
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag124
aS'@@stations'
p236
asg51
(lp237
I01
aI00
aS'@@use_previous'
p238
asg53
(lp239
NaS'@@subtile_size'
p240
asg55
(lp241
NaS'@@tfdeg'
p242
asg57
(lp243
g211
aS'@@@Jsequence_simul'
p244
assg136
g137
sg138
S'2006-03-24 00:11'
p245
sg140
S'MG_JEN_Joneset::DJones_WSRT()'
p246
sg142
S'** Specific description of inarg record for: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-24 00:11'
p247
sg144
S'MG_JEN_JonesetDJones_WSRT'
p248
sg146
S'DJones_WSRT'
p249
sg148
I00
sg149
g245
sg150
(dp250
g152
S'.modify( tdeg_Dell ): @tdeg_Dang  ->  0'
p251
sg154
S'.modify( subtile_size_Dell ): @subtile_size_Dang  ->  None'
p252
ssg156
(lp253
g21
ag48
ag1
ag40
ag57
ag36
ag177
ag165
ag46
ag44
ag179
ag175
ag174
ag163
ag167
ag173
ag51
ag13
ag7
ag9
ag15
ag14
ag41
ag55
ag20
ag53
ag18
assg36
g211
sg173
Nsg40
g211
sg174
I0
sg41
F1.0
sg44
g223
sg175
I0
sg177
I01
sg179
I0
sg48
g236
sg51
I01
sg53
Nsg55
Nsg57
g211
ssS'./MG_JEN_Joneset.FJones()'
p254
(dp255
g7
I01
sg1
S'@@polrep'
p256
sg9
g10
sg55
Nsg13
I01
sg14
I10
sg15
g16
sg18
g19
sg20
Nsg21
(dp257
g23
g254
sg24
(dp258
g7
g26
sg15
g32
sg1
g27
sg41
g42
sg48
g49
sg9
g28
sS'tdeg_RM'
p259
S'degree of time polynomial'
p260
sg53
g54
sg18
g34
sg51
g52
sS'fdeg_RM'
p261
S'degree of freq polynomial'
p262
sg20
g35
sg55
g56
sS'subtile_size_RM'
p263
S'sub-tile size (None=entire tile)'
p264
sg46
g47
sg36
g37
sg57
g37
sg14
g31
sg44
g45
sg13
g30
sg40
g37
ssg58
g59
sg60
S'MG_JEN_Joneset'
p265
sg62
(dp266
g7
I105
sg259
I100
sg51
I103
sg261
I101
sg263
I102
sg13
I104
ssg64
(dp267
g15
I01
sg1
I01
sg41
I01
sg48
I01
sg9
I01
sg53
I01
sg18
I01
sg44
I01
sg20
I01
sg55
I01
sg46
I01
sg36
I01
sg57
I01
sg14
I01
sg40
I01
ssg66
g67
sg68
(dp268
g44
I00
sg46
I00
sg1
I00
sg48
I00
ssg70
S'defines diagonal FJones Faraday rotation matrices'
p269
sg72
(dp270
g7
I00
sg13
I00
sg51
I00
ssg74
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-24 00:11'
p271
sg76
(dp272
g7
(lp273
I01
aI00
aS'@@reset_funklet'
p274
asg15
(lp275
g16
aS'@@style'
p276
asg1
(lp277
g2
ag81
ag256
asg41
(lp278
F1.0
aS'@@c00_default'
p279
asg48
(lp280
(lp281
I0
aI1
aI2
aI3
aI4
aa(lp282
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp283
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp284
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag124
aS'@@stations'
p285
asg9
(lp286
g10
aS'@@color'
p287
asg259
(lp288
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p289
asg53
(lp290
NaS'@@subtile_size'
p291
asg18
(lp292
g19
aS'@@condeq_corrs'
p293
asg51
(lp294
I01
aI00
aS'@@use_previous'
p295
asg261
(lp296
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p297
asg20
(lp298
NaS'@@funklet_shape'
p299
asg55
(lp300
NaS'@@tfdeg'
p301
asg263
(lp302
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p303
asg46
(lp304
Nag117
aS'@@parmtable'
p305
asg36
(lp306
S'FJones'
p307
aS'@@@Jsequence_KJones'
p308
asg57
(lp309
g307
aS'@@@Jsequence_simul'
p310
asg14
(lp311
I10
aS'@@size'
p312
asg44
(lp313
I00
aS'@@uvplane_effect'
p314
asg13
(lp315
I01
aI00
aS'@@auto_save'
p316
asg40
(lp317
g307
aS'@@@Jsequence'
p318
assg136
g137
sg138
S'2006-03-24 00:11'
p319
sg140
S'MG_JEN_Joneset::FJones()'
p320
sg142
S'** Specific description of inarg record for: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-24 00:11'
p321
sg144
S'MG_JEN_JonesetFJones'
p322
sg146
S'FJones'
p323
sg148
I00
sg149
g319
sg150
(dp324
g154
S'.modify( subtile_size_RM ): 1  ->  None'
p325
ssg156
(lp326
g21
ag48
ag1
ag40
ag57
ag36
ag46
ag44
ag259
ag261
ag263
ag51
ag13
ag7
ag9
ag15
ag14
ag41
ag55
ag20
ag53
ag18
assg36
g307
sg40
g307
sg41
F1.0
sg44
g314
sg48
g285
sg259
I0
sg51
I01
sg261
I2
sg53
Nsg46
g305
sg263
Nsg57
g307
ssg44
S'@@uvplane_effect'
p327
sg46
S'@@parmtable'
p328
sg21
(dp329
g140
S'MG_JEN_Cohset::Jones()'
p330
sg23
g3
sg62
(dp331
S'Jsequence'
p332
I67
ssg64
(dp333
g1
I01
sg48
I01
sg44
I01
sg46
I01
sg36
I01
sg57
I01
sg40
I01
ssg144
S'MG_JEN_CohsetJones'
p334
sg58
g59
sg70
S'Make a Joneset by creating and multiplying a sequence of one ore more Jonesets'
p335
sg74
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-24 00:11'
p336
sg146
S'Jones'
p337
sg76
(dp338
g1
(lp339
g2
ag81
ag158
asg48
(lp340
(lp341
I0
aI1
aI2
aI3
aI4
aa(lp342
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp343
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp344
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag124
ag159
asg44
(lp345
I00
ag327
asg46
(lp346
Nag117
ag328
asg36
(lp347
NaS'@@@Jsequence_KJones'
p348
asg57
(lp349
NaS'@@@Jsequence_simul'
p350
asg332
(lp351
(lp352
S'GJones'
p353
aa(lp354
g102
aa(lp355
g307
aa(lp356
S'KJones'
p357
aa(lp358
g211
aa(lp359
g353
ag211
aa(lp360
S'JJones'
p361
aa(lp362
aS'@@Jsequence'
p363
asg40
(lp364
NaS'@@@Jsequence'
p365
assg136
Nsg148
I00
sg149
S'2006-03-24 00:11'
p366
sg66
S'25dec2005'
p367
sg60
S'MG_JEN_Cohset'
p368
sg142
S'** Specific description of inarg record for: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-24 00:11'
p369
sg150
(dp370
g152
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p371
sg154
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p372
sS'3'
p373
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p374
sS'2'
p375
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p376
sS'5'
p377
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p378
sS'4'
p379
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p380
sS'6'
p381
S".modify( Jsequence ): []  ->  ['GJones']"
p382
ssg138
g366
sg68
(dp383
g44
I00
sg46
I00
sg1
I00
sg48
I00
ssg156
(lp384
g21
ag48
ag1
ag40
ag57
ag36
ag46
ag44
ag332
aS'./MG_JEN_Joneset.GJones()'
p385
ag254
ag5
aS'./MG_JEN_Joneset.KJones()'
p386
ag160
aS'./MG_JEN_Joneset.JJones()'
p387
asg24
(dp388
g1
g27
sg48
g49
sg44
g45
sg46
g47
sg36
g37
sg57
g37
sg332
S'sequence of Jones matrices to be used'
p389
sg40
g37
sssg386
(dp390
g1
S'@@polrep'
p391
sg48
S'@@stations'
p392
sg21
(dp393
g140
S'MG_JEN_Joneset::KJones()'
p394
sg23
g386
sg62
(dp395
sg64
(dp396
g36
I01
sg57
I01
sg40
I01
sg1
I01
sg48
I01
ssg70
S'defines diagonal KJones matrices for DFT Fourier kernel'
p397
sg58
g59
sg74
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-24 00:11'
p398
sg146
S'KJones'
p399
sg76
(dp400
g36
(lp401
g357
aS'@@@Jsequence_KJones'
p402
asg57
(lp403
g357
aS'@@@Jsequence_simul'
p404
asg40
(lp405
g357
aS'@@@Jsequence'
p406
asg1
(lp407
g2
ag81
ag391
asg48
(lp408
(lp409
I0
aI1
aI2
aI3
aI4
aa(lp410
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp411
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp412
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag124
ag392
assg136
g137
sg148
I00
sg149
S'2006-03-24 00:11'
p413
sg66
S'12dec2005'
p414
sg60
S'MG_JEN_Joneset'
p415
sg142
S'** Specific description of inarg record for: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-24 00:11'
p416
sg68
(dp417
g1
I00
sg48
I00
ssg138
g413
sg156
(lp418
g21
ag48
ag1
ag40
ag57
ag36
asg24
(dp419
g36
g37
sg57
g37
sg40
g37
sg1
g27
sg48
g49
ssg144
S'MG_JEN_JonesetKJones'
p420
ssg36
g357
sg57
g357
sg40
g357
ssg387
(dp421
g7
I01
sg1
S'@@polrep'
p422
sS'tdeg_Jreal'
p423
I0
sg9
g10
sS'all4_always'
p424
Nsg46
S'@@parmtable'
p425
sS'subtile_size_Jreal'
p426
Nsg13
I01
sg14
I10
sg15
g16
sS'tdeg_Jimag'
p427
I0
sg18
g19
sg20
Nsg21
(dp428
g23
g387
sg24
(dp429
g7
g26
sg1
g27
sg423
S'degree of time polynomial'
p430
sg9
g28
sg424
S'stations for which all 4 elements will always be solved for'
p431
sg46
g47
sg426
S'sub-tile size (None=entire tile)'
p432
sg13
g30
sg14
g31
sg15
g32
sg427
g430
sg18
g34
sg20
g35
sg36
g37
sS'fdeg_Jreal'
p433
S'degree of freq polynomial'
p434
sg41
g42
sg44
g45
sS'fdeg_Jimag'
p435
g434
sS'subtile_size_Jimag'
p436
g432
sg48
g49
sS'diagonal_only'
p437
S'if True, solve for diagonal (11,22) elements only'
p438
sg51
g52
sg53
g54
sg55
g56
sg57
g37
sg40
g37
ssg58
g59
sg60
S'MG_JEN_Joneset'
p439
sg62
(dp440
g7
I186
sg436
I183
sg427
I179
sg423
I178
sg437
I174
sg51
I184
sg424
I175
sg435
I181
sg426
I182
sg13
I185
sg433
I180
ssg64
(dp441
g15
I01
sg1
I01
sg41
I01
sg48
I01
sg9
I01
sg53
I01
sg18
I01
sg44
I01
sg20
I01
sg55
I01
sg46
I01
sg36
I01
sg57
I01
sg14
I01
sg40
I01
ssg66
S'14feb2006'
p442
sg68
(dp443
g44
I00
sg46
I00
sg1
I00
sg48
I00
ssg70
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p444
sg72
(dp445
g7
I00
sg437
I00
sg13
I00
sg51
I00
ssg74
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-24 00:11'
p446
sg76
(dp447
g7
(lp448
I01
aI00
aS'@@reset_funklet'
p449
asg1
(lp450
g2
ag81
ag422
asg423
(lp451
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p452
asg9
(lp453
g10
aS'@@color'
p454
asg424
(lp455
Na(lp456
I14
aa(lp457
I1
aaS'WSRT/WHAT'
p458
aS'@@all4_always'
p459
asg46
(lp460
Nag117
ag425
asg426
(lp461
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p462
asg13
(lp463
I01
aI00
aS'@@auto_save'
p464
asg14
(lp465
I10
aS'@@size'
p466
asg15
(lp467
g16
aS'@@style'
p468
asg427
(lp469
I0
aI1
aI2
aI3
aS'@tdeg_Jreal'
p470
aS'@@tdeg_Jimag'
p471
asg18
(lp472
g19
aS'@@condeq_corrs'
p473
asg20
(lp474
NaS'@@funklet_shape'
p475
asg36
(lp476
g361
aS'@@@Jsequence_KJones'
p477
asg433
(lp478
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p479
asg41
(lp480
F1.0
aS'@@c00_default'
p481
asg44
(lp482
I00
aS'@@uvplane_effect'
p483
asg435
(lp484
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p485
aS'@@fdeg_Jimag'
p486
asg436
(lp487
S'@subtile_size_Jreal'
p488
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p489
asg48
(lp490
(lp491
I0
aI1
aI2
aI3
aI4
aa(lp492
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp493
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp494
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag124
aS'@@stations'
p495
asg437
(lp496
I01
aI00
aS'@@diagonal_only'
p497
asg51
(lp498
I01
aI00
aS'@@use_previous'
p499
asg53
(lp500
NaS'@@subtile_size'
p501
asg55
(lp502
NaS'@@tfdeg'
p503
asg57
(lp504
g361
aS'@@@Jsequence_simul'
p505
asg40
(lp506
g361
aS'@@@Jsequence'
p507
assg136
g137
sg138
S'2006-03-24 00:11'
p508
sg140
S'MG_JEN_Joneset::JJones()'
p509
sg142
S'** Specific description of inarg record for: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-24 00:11'
p510
sg144
S'MG_JEN_JonesetJJones'
p511
sg146
S'JJones'
p512
sg148
I00
sg149
g508
sg150
(dp513
g152
S'.modify( tdeg_Jimag ): @tdeg_Jreal  ->  0'
p514
sg154
S'.modify( subtile_size_Jimag ): @subtile_size_Jreal  ->  None'
p515
ssg156
(lp516
g21
ag48
ag1
ag40
ag57
ag36
ag437
ag424
ag46
ag44
ag423
ag427
ag433
ag435
ag426
ag436
ag51
ag13
ag7
ag9
ag15
ag14
ag41
ag55
ag20
ag53
ag18
assg36
g361
sg433
I0
sg41
F1.0
sg44
g483
sg435
g485
sg436
Nsg48
g495
sg437
I00
sg51
I01
sg53
Nsg55
Nsg57
g361
sg40
g361
ssg36
Nsg57
Nsg332
(lp517
g353
asg385
(dp518
g7
I01
sg1
S'@@polrep'
p519
sS'fdeg_Ggain'
p520
I0
sg9
g10
sg46
S'@@parmtable'
p521
sg13
I01
sg14
I10
sg15
g16
sS'subtile_size_Ggain'
p522
Nsg18
g19
sg20
Nsg21
(dp523
g23
g385
sg24
(dp524
g7
g26
sg1
g27
sg520
S'degree of freq polynomial'
p525
sg9
g28
sg55
g56
sg13
g30
sg14
g31
sg15
g32
sg522
S'sub-tile size (None=entire tile)'
p526
sg18
g34
sg20
g35
sg36
g37
sg40
g37
sg41
g42
sS'tdeg_Gphase'
p527
S'degree of time polynomial'
p528
sS'tdeg_Ggain'
p529
g528
sS'fdeg_Gphase'
p530
g525
sS'subtile_size_Gphase'
p531
g526
sS'Gpolar'
p532
S'obsolete, kept only for upward compatibility'
p533
sg44
g45
sg48
g49
sg51
g52
sg53
g54
sg46
g47
sg57
g37
ssg58
g59
sg60
S'MG_JEN_Joneset'
p534
sg62
(dp535
g7
I84
sg520
I78
sg522
I80
sg527
I77
sg51
I82
sg529
I76
sg530
I79
sg531
I81
sg13
I83
ssg64
(dp536
g14
I01
sg15
I01
sg1
I01
sg41
I01
sg48
I01
sg9
I01
sg53
I01
sg18
I01
sg44
I01
sg20
I01
sg55
I01
sg46
I01
sg36
I01
sg57
I01
sg532
I01
sg40
I01
ssg66
S'15dec2005'
p537
sg68
(dp538
g44
I00
sg46
I00
sg1
I00
sg48
I00
ssg70
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p539
sg72
(dp540
g7
I00
sg532
I00
sg13
I00
sg51
I00
ssg74
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-24 00:11'
p541
sg76
(dp542
g7
(lp543
I01
aI00
aS'@@reset_funklet'
p544
asg1
(lp545
g2
ag81
ag519
asg520
(lp546
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p547
asg9
(lp548
g10
aS'@@color'
p549
asg55
(lp550
NaS'@@tfdeg'
p551
asg13
(lp552
I01
aI00
aS'@@auto_save'
p553
asg14
(lp554
I10
aS'@@size'
p555
asg15
(lp556
g16
aS'@@style'
p557
asg522
(lp558
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p559
asg18
(lp560
g19
aS'@@condeq_corrs'
p561
asg20
(lp562
NaS'@@funklet_shape'
p563
asg36
(lp564
g353
aS'@@@Jsequence_KJones'
p565
asg40
(lp566
g353
aS'@@@Jsequence'
p567
asg41
(lp568
F1.0
aS'@@c00_default'
p569
asg527
(lp570
I0
aI1
aI2
aI3
aS'@tdeg_Ggain'
p571
aS'@@tdeg_Gphase'
p572
asg529
(lp573
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p574
asg530
(lp575
I0
aI1
aI2
aI3
aS'@fdeg_Ggain'
p576
aS'@@fdeg_Gphase'
p577
asg531
(lp578
S'@subtile_size_Ggain'
p579
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p580
asg532
(lp581
I01
aI00
aS'@@Gpolar'
p582
asg44
(lp583
I00
aS'@@uvplane_effect'
p584
asg48
(lp585
(lp586
I0
aI1
aI2
aI3
aI4
aa(lp587
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp588
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp589
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag124
aS'@@stations'
p590
asg51
(lp591
I01
aI00
aS'@@use_previous'
p592
asg53
(lp593
NaS'@@subtile_size'
p594
asg46
(lp595
Nag117
ag521
asg57
(lp596
g353
aS'@@@Jsequence_simul'
p597
assg136
g137
sg138
S'2006-03-24 00:11'
p598
sg140
S'MG_JEN_Joneset::GJones()'
p599
sg142
S'** Specific description of inarg record for: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-24 00:11'
p600
sg144
S'MG_JEN_JonesetGJones'
p601
sg146
S'GJones'
p602
sg148
I00
sg149
g598
sg150
(dp603
g152
S'.modify( subtile_size_Gphase ): @subtile_size_Ggain  ->  None'
p604
sg154
S'.modify( subtile_size_Ggain ): 1  ->  None'
p605
sg375
S'.modify( tdeg_Gphase ): @tdeg_Ggain  ->  0'
p606
ssg156
(lp607
g21
ag48
ag1
ag40
ag57
ag36
ag532
ag46
ag44
ag529
ag527
ag520
ag530
ag522
ag531
ag51
ag13
ag7
ag9
ag15
ag14
ag41
ag55
ag20
ag53
ag18
assg36
g353
sg40
g353
sg41
F1.0
sg527
I0
sg529
I0
sg530
g576
sg531
Nsg532
I01
sg44
g584
sg48
g590
sg51
I01
sg53
Nsg55
Nsg57
g353
ssg40
NssS'./MG_JEN_exec.stream_control()'
p608
(dp609
S'channel_start_index'
p610
I10
sS'data_column_name'
p611
S'DATA'
p612
sS'predict_column'
p613
S'CORRECTED_DATA'
p614
sS'ms_name'
p615
S'@@ms_name'
p616
sg21
(dp617
g23
g608
sg24
(dp618
g610
S'(inputrec.sel) index of first selected freq channel'
p619
sg611
S'(inputrec) MS input column'
p620
sg613
S'MS output column to be associated with the VisTile predict-column'
p621
sg615
S'name of the (AIPS++) Measurement Set'
p622
sS'tile_size'
p623
S'(inputrec) size (in time-slots) of the input data-tile'
p624
sS'channel_increment'
p625
S'(inputrec.sel) take every nth channel (1=all)'
p626
sS'channel_end_index'
p627
S'(inputrec.sel) index of last selected freq channel'
p628
sS'write_flags'
p629
S'(outputrec) if True, write flags to MS'
p630
ssg58
g59
sg60
S'MG_JEN_exec'
p631
sg62
(dp632
g610
I20
sg611
I19
sg613
I24
sg629
I23
sg627
I21
sg625
I22
ssg64
(dp633
g615
I01
sg623
I01
ssS'browse'
p634
(dp635
g615
S'*.MS'
p636
ssg66
S'20jan2006'
p637
sg68
(dp638
g615
I00
sg623
I00
ssg70
S'** Description of script: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-24 00:11'
p639
sg72
(dp640
g629
I00
ssg74
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-24 00:11'
p641
sg76
(dp642
g610
(lp643
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p644
asg611
(lp645
g612
ag614
aS'@@data_column_name'
p646
asg613
(lp647
g612
ag614
aS'MODEL_DATA'
p648
aS'@@predict_column'
p649
asg615
(lp650
S'D1.MS'
p651
ag616
asg623
(lp652
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p653
asg625
(lp654
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p655
asg627
(lp656
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p657
asg629
(lp658
I01
aI00
aS'@@write_flags'
p659
assg136
Nsg138
S'2006-03-24 00:11'
p660
sg140
S'MG_JEN_exec::stream_control()'
p661
sg142
S'** Specific description of inarg record for: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-24 00:11'
p662
sg144
S'MG_JEN_execstream_control'
p663
sg146
S'stream_control'
p664
sg148
I00
sg149
g660
sg150
(dp665
g154
S'.modify( tile_size ): @@tile_size  ->  1'
p666
ssg156
(lp667
g21
ag615
ag623
ag611
ag610
ag627
ag625
ag629
ag613
assg623
I1
sg625
I1
sg627
I50
sg629
I00
ssS'script_name'
p668
S'MG_JEN_cps'
p669
sg615
g651
sg46
NsS'_JEN_inarg_separator_record:_2'
p670
(dp671
S'txt'
p672
S'insert a solver'
p673
ssg21
(dp674
g23
S'./MG_JEN_cps.'
p675
sg24
(dp676
g1
g27
sS'master_reqseq'
p677
S'if True, use a master reqseq for solver(s)'
p678
sg48
g49
sS'insert_flagger'
p679
S'if True, insert a flagger'
p680
sS'redun'
p681
S'if True, redundant spacing calibration'
p682
sS'insert_solver'
p683
S'if True, insert a solver'
p684
sg615
g622
sS'chain_solvers'
p685
S'if True, chain the solvers (recommended)'
p686
sS'num_cells'
p687
S'if defined, ModRes argument [ntime,nfreq]'
p688
sg46
g47
sg36
g37
sg57
g37
sg623
g624
sg44
g45
sg40
g37
ssS'reference'
p689
I00
sg58
g59
sg60
S'MG_JEN_cps'
p690
sg62
(dp691
g1
I7
sg48
I6
sg679
I2
sg681
I15
sg683
I1
sg615
I4
sg46
I11
sg668
I0
sg687
I16
sg623
I5
sg44
I12
ssg64
(dp692
g1
I00
sg677
I01
sg48
I00
sS'last_changed'
p693
I01
sg681
I00
sg44
I00
sg685
I01
sg687
I00
sg36
I01
sg57
I01
sg40
I01
ssg634
(dp694
g615
g636
ssg66
g537
sg70
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p695
sg72
(dp696
g693
I00
sg679
I00
sg677
I00
sg683
I00
sg681
I00
ssg74
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p697
sg76
(dp698
g1
(lp699
g2
ag81
aS'@@polrep'
p700
asg677
(lp701
I01
aI00
aS'@@master_reqseq'
p702
asg48
(lp703
(lp704
I0
aI1
aI2
aI3
aI4
aa(lp705
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp706
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp707
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag124
aS'@@stations'
p708
asg679
(lp709
I01
aI00
aS'@@insert_flagger'
p710
asg693
(lp711
S'd30jan2006'
p712
aS'@@last_changed'
p713
asg683
(lp714
I01
aI00
aS'@@insert_solver'
p715
asg681
(lp716
I01
aI00
aS'@@redun'
p717
asg615
(lp718
g651
aS'@@ms_name'
p719
asg685
(lp720
I01
aS'@@chain_solvers'
p721
asg687
(lp722
Na(lp723
I5
aI2
aa(lp724
I2
aI2
aa(lp725
I3
aI3
aaS'@@num_cells'
p726
asg46
(lp727
Nag117
aS'@@parmtable'
p728
asg36
(lp729
NaS'@@@Jsequence_KJones'
p730
asg57
(lp731
NaS'@@@Jsequence_simul'
p732
asg623
(lp733
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p734
asg44
(lp735
I00
aS'@@uvplane_effect'
p736
asg40
(lp737
NaS'@@@Jsequence'
p738
assg136
Nsg138
S'2006-03-24 00:11'
p739
sS'HISTORY'
p740
(dp741
g152
S'2006-03-24 00:12: Derived from: MG_JEN_cps_Ggain.inarg'
p742
sg154
S'2006-03-24 00:12: Derived from: MG_JEN_cps.inarg'
p743
ssg140
g669
sg142
S'Modify MG_JEN_cps inarg for Ggain operation'
p744
sS'save_file'
p745
S'MG_JEN_cps_Ggain_protected.inarg'
p746
sS'file_filter'
p747
S'MG_JEN_cps*.inarg'
p748
sg146
g137
sg148
I01
sg149
g739
sg150
(dp749
S'11'
p750
S".modify():   ** OK ** (['solvegroup', 'Jsequence', 'condeq_unop'])"
p751
sS'10'
p752
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p753
sS'13'
p754
S".modify():   ** OK ** (['tile_size', 'num_iter', 'epsilon'])"
p755
sS'12'
p756
S'.modify( tile_size ): 10  ->  1'
p757
sS'14'
p758
S".modify():   ** OK ** (['subtile_size_', 'tdeg_'])"
p759
sg152
S".modify():   ** OK ** (['uvplane_effect'])"
p760
sg154
S'.modify( uvplane_effect ): False  ->  True'
p761
sg373
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p762
sg375
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p763
sg377
S'** JEN_inarg.separator(): : insert a solver'
p764
sg379
S'** JEN_inarg.separator(): : operations on input uv-data'
p765
sS'7'
p766
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p767
sg381
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.get_Sixpack()'
p768
sS'9'
p769
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p770
sS'8'
p771
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict_cps()'
p772
ssg156
(lp773
g21
ag668
ag683
ag679
ag693
ag615
ag623
ag48
ag1
ag40
ag57
ag36
ag46
ag44
ag685
ag677
ag681
ag687
ag608
aS'./MG_JEN_Cohset.make_spigots()'
p774
aS'_JEN_inarg_separator_record:_1'
p775
ag670
aS'./MG_JEN_Sixpack.get_Sixpack()'
p776
ag3
aS'./MG_JEN_Cohset.predict_cps()'
p777
aS'./MG_JEN_Cohset.insert_solver()'
p778
aS'./MG_JEN_Cohset.make_sinks()'
p779
assg779
(dp780
S'fullDomainMux'
p781
I01
sS'output_col'
p782
S'PREDICT'
p783
sS'visu'
p784
I01
sS'flag'
p785
I00
sg21
(dp786
g140
S'MG_JEN_Cohset::make_sinks()'
p787
sg23
g779
sg62
(dp788
g785
I228
sg784
I227
sg781
I229
sg782
I225
sS'visu_array_config'
p789
I226
ssg142
S'** Specific description of inarg record for: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-24 00:11'
p790
sg144
S'MG_JEN_Cohsetmake_sinks'
p791
sg58
g59
sg70
S'Make sink nodes in the given Cohset object'
p792
sg74
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-24 00:11'
p793
sg146
S'make_sinks'
p794
sg76
(dp795
g785
(lp796
I01
aI00
aS'@@flag'
p797
asg789
(lp798
I01
aI00
aS'@@visu_array_config'
p799
asg782
(lp800
g783
aS'RESIDUALS'
p801
ag612
aS'@@output_col'
p802
asg781
(lp803
I01
aI00
aS'@@fullDomainMux'
p804
asg784
(lp805
I01
aI00
aS'@@visu'
p806
assg136
Nsg66
g367
sg149
S'2006-03-24 00:11'
p807
sg60
S'MG_JEN_Cohset'
p808
sg72
(dp809
g785
I00
sg789
I00
sg781
I00
sg784
I00
ssg148
I00
sg138
g807
sg156
(lp810
g21
ag782
ag789
ag784
ag785
ag781
asg24
(dp811
g785
S'if True, insert a flagger for the output uv-data'
p812
sg789
S'if True, visualise the array config (from MS)'
p813
sg782
S'name of the logical (VisTile) output column'
p814
sg781
S'if True, attach an extra VisDataMux'
p815
sg784
S'if True, visualise the output uv-data'
p816
sssg789
I01
ssg36
Nsg623
I1
sg40
Nsg679
I00
sg693
g712
sg44
I01
sg777
(dp817
g1
S'@@polrep'
p818
sg48
S'@@stations'
p819
sg21
(dp820
g140
S'MG_JEN_Cohset::predict_cps()'
p821
sg23
g777
sg62
(dp822
sg64
(dp823
g36
I01
sg57
I01
sg48
I01
sg1
I01
sg40
I01
ssg144
S'MG_JEN_Cohsetpredict_cps'
p824
sg58
g59
sg70
S'Obsolete (upward compatibility) version of .predict_cps()'
p825
sg74
S'MG_JEN_Cohset::predict_cps()  version=20mar2006  defined=2006-03-24 00:11'
p826
sg146
S'predict_cps'
p827
sg76
(dp828
g36
(lp829
NaS'@@@Jsequence_KJones'
p830
asg57
(lp831
NaS'@@@Jsequence_simul'
p832
asg48
(lp833
(lp834
I0
aI1
aI2
aI3
aI4
aa(lp835
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp836
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp837
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag124
ag819
asg1
(lp838
g2
ag81
ag818
asg40
(lp839
NaS'@@@Jsequence'
p840
assg136
Nsg148
I00
sg149
S'2006-03-24 00:11'
p841
sg66
S'20mar2006'
p842
sg60
S'MG_JEN_Cohset'
p843
sg142
S'** Specific description of inarg record for: MG_JEN_Cohset::predict_cps()  version=20mar2006  defined=2006-03-24 00:11'
p844
sg68
(dp845
g1
I00
sg48
I00
ssg138
g841
sg156
(lp846
g21
ag48
ag1
ag40
ag57
ag36
asg24
(dp847
g36
g37
sg57
g37
sg48
g49
sg1
g27
sg40
g37
sssg36
Nsg57
Nsg40
Nssg776
(dp848
S'./MG_JEN_Sixpack.newstar_source()'
p849
(dp850
S'f0'
p851
F1000000.0
sg7
I01
sS'major'
p852
F0.0
sS'unsolvable'
p853
I00
sg9
g10
sS'shape'
p854
S'point'
p855
sg46
NsS'Upct'
p856
Nsg13
I01
sg14
I10
sg15
g16
sS'I0'
p857
F1.0
sg53
Nsg18
g19
sS'Vpct'
p858
Nsg20
NsS'pa'
p859
F0.0
sg21
(dp860
g140
S'MG_JEN_Sixpack::newstar_source()'
p861
sg23
g849
sg138
S'2006-03-24 00:11'
p862
sg64
(dp863
g851
I01
sg852
I01
sg853
I01
sS'name'
p864
I01
sg41
I01
sg20
I01
sg9
I01
sg854
I01
sS'fsr_trace'
p865
I01
sS'punit'
p866
I00
sg53
I01
sg859
I01
sg18
I01
sg55
I01
sg15
I01
sS'minor'
p867
I01
sg14
I01
ssg144
S'MG_JEN_Sixpacknewstar_source'
p868
sg136
g137
sg58
g59
sg74
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-24 00:11'
p869
sg146
S'newstar_source'
p870
sg76
(dp871
g851
(lp872
F1000000.0
aS'@@f0'
p873
asg7
(lp874
I01
aI00
aS'@@reset_funklet'
p875
asg852
(lp876
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p877
asg853
(lp878
I01
aI00
aS'@@unsolvable'
p879
asg9
(lp880
g10
aS'@@color'
p881
asg854
(lp882
g855
aS'ell.gauss'
p883
aS'@@shape'
p884
asg46
(lp885
NaS'@@parmtable'
p886
asg856
(lp887
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p888
asg13
(lp889
I01
aI00
aS'@@auto_save'
p890
asg14
(lp891
I10
aS'@@size'
p892
asg15
(lp893
g16
aS'@@style'
p894
asg857
(lp895
F1.0
aF10.0
aS'@@I0'
p896
asg53
(lp897
NaS'@@subtile_size'
p898
asg18
(lp899
g19
aS'@@condeq_corrs'
p900
asg858
(lp901
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p902
asg20
(lp903
NaS'@@funklet_shape'
p904
asg859
(lp905
F0.0
aF1.0
aF-0.5
aS'@@pa'
p906
asS'RA'
p907
(lp908
F0.0
aF0.5
aF1.0
aF1.4950000000000001
aF4.3570000000000002
aS'@@RA'
p909
asS'RM'
p910
(lp911
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p912
asg867
(lp913
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p914
asg41
(lp915
F1.0
aS'@@c00_default'
p916
asS'Qpct'
p917
(lp918
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p919
asg866
(lp920
S'unpol'
p921
aS'unpol2'
p922
aS'unpol10'
p923
aS'QUV'
p924
aS'QU'
p925
aS'Qonly'
p926
aS'Uonly'
p927
aS'Vonly'
p928
aS'3c147'
p929
aS'3c286'
p930
aS'3c48'
p931
aS'3c295'
p932
aS'D1'
p933
aS'RMtest'
p934
aS'SItest'
p935
aS'@@punit'
p936
asS'Dec'
p937
(lp938
F0.5
aF1.0
aF0.87
aF1.0920000000000001
aS'@@Dec'
p939
asg864
(lp940
NaS'@@name'
p941
asg865
(lp942
I01
aI00
aS'@@fsr_trace'
p943
asg51
(lp944
I01
aI00
aS'@@use_previous'
p945
asS'SI'
p946
(lp947
NaF-0.69999999999999996
a(lp948
F0.44700000000000001
aF-0.184
aaS'@@SI'
p949
asg55
(lp950
NaS'@@tfdeg'
p951
assS'callback'
p952
(dp953
g866
I01
ssg66
S'10feb2006'
p954
sg62
(dp955
g7
I50
sg51
I48
sg937
I42
sS'slave'
p956
I59
sg857
I34
sg917
I35
sg858
I37
sg946
I39
sg46
I32
sg907
I41
sg910
I38
sg856
I36
sg866
I30
sg13
I49
ssg149
g862
sg60
S'MG_JEN_Sixpack'
p957
sg72
(dp958
g7
I00
sg853
I00
sg13
I00
sg865
I00
sg51
I00
ssg142
S'** Specific description of inarg record for: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-24 00:11'
p959
sg148
I00
sg156
(lp960
g21
ag866
ag864
ag46
ag853
ag857
ag917
ag856
ag858
ag910
ag946
ag851
ag907
ag937
ag865
ag854
ag852
ag867
ag859
ag51
ag13
ag7
ag9
ag15
ag14
ag41
ag55
ag20
ag53
ag18
ag956
asg24
(dp961
g851
S'reference freq (Hz): I=I0 @ f=f0'
p962
sg7
g26
sg852
S'major axis (arcsec)'
p963
sg853
S'if True, do NOT store solvegroup/parmgroup info'
p964
sg9
g28
sg854
S'source shape'
p965
sg46
S'name of the MeqParm table (AIPS++)'
p966
sg856
S'Stokes U (percentage of I)'
p967
sg13
g30
sg14
g31
sg15
g32
sg857
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p968
sg53
g54
sg18
g34
sg858
S'Stokes V (percentage of I)'
p969
sg20
g35
sg859
S'position angle (rad)'
p970
sg907
S'Right Ascension (rad, J2000)'
p971
sg910
S'Intrinsic Rotation Measure (rad/m2)'
p972
sg867
S'minor axis (arcsec)'
p973
sg41
g42
sg917
S'Stokes Q (percentage of I)'
p974
sg866
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n- D1:      cps in D1.MS \n'
p975
sg937
S'Declination (rad, J2000)'
p976
sg865
S'If True, attach to forest state record'
p977
sg51
g52
sg946
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p978
sg55
g56
ssg70
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p979
ssg910
Nsg867
F0.0
sg907
F1.4950000000000001
sg956
I01
sg41
F1.0
sg917
Nsg866
g921
sg937
F0.87
sg864
Nsg865
I01
sg51
I01
sg946
Nsg55
Nssg21
(dp980
g140
S'MG_JEN_Sixpack::get_Sixpack()'
p981
sg23
g776
sg62
(dp982
S'punit_from_LSM'
p983
I29
ssg64
(dp984
g983
I00
ssg144
S'MG_JEN_Sixpackget_Sixpack'
p985
sg634
(dp986
g983
S'*.lsm'
p987
ssg58
g59
sg70
S'Get a Sixpack, either from a LSM or a Newstar source'
p988
sg74
S'MG_JEN_Sixpack::get_Sixpack()  version=22mar2006  defined=2006-03-24 00:11'
p989
sg146
S'get_Sixpack'
p990
sg76
(dp991
g983
(lp992
NaS'@@punit_from_LSM'
p993
assg136
Nsg148
I00
sg149
S'2006-03-24 00:11'
p994
sg66
S'22mar2006'
p995
sg60
S'MG_JEN_Sixpack'
p996
sg142
S'** Specific description of inarg record for: MG_JEN_Sixpack::get_Sixpack()  version=22mar2006  defined=2006-03-24 00:11'
p997
sg150
(dp998
g154
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p999
ssg138
g994
sg156
(lp1000
g21
ag983
ag849
asg24
(dp1001
g983
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p1002
sssg983
Nssg687
Nsg677
I00
sg48
g704
sg775
(dp1003
g672
S'operations on input uv-data'
p1004
ssg681
I00
sg683
I01
sg774
(dp1005
S'MS_corr_index'
p1006
(lp1007
I0
aI1
aI2
aI3
asg785
I00
sg21
(dp1008
g140
S'MG_JEN_Cohset::make_spigots()'
p1009
sg23
g774
sg62
(dp1010
g785
I28
sg1006
I26
sg784
I27
ssg64
(dp1011
S'input_col'
p1012
I01
ssg144
S'MG_JEN_Cohsetmake_spigots'
p1013
sg58
g59
sg70
S'Make spigot nodes in the given Cohset object'
p1014
sg74
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-24 00:11'
p1015
sg146
S'make_spigots'
p1016
sg76
(dp1017
g785
(lp1018
I01
aI00
aS'@@flag'
p1019
asg1006
(lp1020
(lp1021
I0
aI1
aI2
aI3
aa(lp1022
I0
aI-1
aI-1
aI1
aa(lp1023
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p1024
asg1012
(lp1025
g612
ag783
ag801
aS'@@input_col'
p1026
asg784
(lp1027
I01
aI00
aS'@@visu'
p1028
assg136
Nsg66
g367
sg149
S'2006-03-24 00:11'
p1029
sg60
S'MG_JEN_Cohset'
p1030
sg72
(dp1031
g785
I00
sg784
I00
ssg142
S'** Specific description of inarg record for: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-24 00:11'
p1032
sg148
I00
sg138
g1029
sg156
(lp1033
g21
ag1012
ag1006
ag784
ag785
asg24
(dp1034
g785
S'if True, insert a flagger for the input uv-data'
p1035
sg1006
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p1036
sg1012
S'name of the logical (VisTile) input column'
p1037
sg784
S'if True, visualise the input uv-data'
p1038
sssg1012
g612
sg784
I01
ssg685
I01
sg57
Nsg778
(dp1039
S'correct_after'
p1040
I01
sg677
S'@@master_reqseq'
p1041
sS'condeq_unop'
p1042
S'Abs'
p1043
sg784
I01
sg681
S'@@redun'
p1044
sS'solver_subtree'
p1045
NsS'subtract_after'
p1046
I00
sg685
S'@@chain_solvers'
p1047
sg21
(dp1048
g23
g778
sg24
(dp1049
g1040
S'if True, correct measured with predicted.Joneset'
p1050
sg677
g678
sg1042
S'Optional unary operation on Condeq inputs'
p1051
sg784
S'if True, include full visualisation'
p1052
sg681
g682
sg1045
S'solver subtree qualifier(s)'
p1053
sg1046
S'if True, subtract predicted from measured'
p1054
sg685
g686
sS'flag_residuals'
p1055
S'if True, flag the residuals'
p1056
sg687
g688
ssg58
g59
sg60
S'MG_JEN_Cohset'
p1057
sg62
(dp1058
g1046
I207
sg1040
I208
sg1042
I205
sg784
I206
ssg64
(dp1059
g677
I01
sg681
I01
sg1045
I01
sg685
I01
sg1055
I01
sg687
I01
ssg66
g367
sg68
(dp1060
g687
I00
sg685
I00
sg681
I00
sg677
I00
ssg70
S'insert one or more solver subtrees in the data stream'
p1061
sg72
(dp1062
g1040
I00
sg677
I00
sg784
I00
sg681
I00
sg1046
I00
sg1055
I00
ssg74
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-24 00:11'
p1063
sg76
(dp1064
g1040
(lp1065
I01
aI00
aS'@@correct_after'
p1066
asg677
(lp1067
I01
aI00
ag1041
asg1042
(lp1068
Nag1043
aS'Arg'
p1069
aS'@@condeq_unop'
p1070
asg784
(lp1071
I01
aI00
aS'@@visu'
p1072
asg681
(lp1073
I01
aI00
ag1044
asg1045
(lp1074
NaS'@@solver_subtree'
p1075
asg1046
(lp1076
I01
aI00
aS'@@subtract_after'
p1077
asg685
(lp1078
I01
ag1047
asg1055
(lp1079
I01
aI00
aS'@@flag_residuals'
p1080
asg687
(lp1081
Na(lp1082
I5
aI2
aa(lp1083
I2
aI2
aa(lp1084
I3
aI3
aaS'@@num_cells'
p1085
assg136
Nsg138
S'2006-03-24 00:11'
p1086
sg140
S'MG_JEN_Cohset::insert_solver()'
p1087
sg142
S'** Specific description of inarg record for: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-24 00:11'
p1088
sg144
S'MG_JEN_Cohsetinsert_solver'
p1089
sg146
S'insert_solver'
p1090
sg148
I00
sg149
g1086
sg150
(dp1091
g152
S'.modify( condeq_unop ): None  ->  Abs'
p1092
sg154
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p1093
ssg156
(lp1094
g21
ag1045
ag681
ag687
ag685
ag677
ag1042
ag784
ag1046
ag1040
ag1055
aS'./MG_JEN_Cohset.solver_subtree()'
p1095
assg687
g1085
sg1095
(dp1096
S'rmin'
p1097
Nsg784
I01
sS'epsilon'
p1098
F0.0001
sS'colin_factor'
p1099
F0.0
sS'rmax'
p1100
NsS'derivative_eps'
p1101
F1e-08
sS'usesvd'
p1102
I01
sS'debug_level'
p1103
I10
sS'history'
p1104
I01
sS'solvegroup'
p1105
(lp1106
S'Ggain'
p1107
asg21
(dp1108
g140
S'MG_JEN_Cohset::solver_subtree()'
p1109
sg23
g1095
sg138
S'2006-03-24 00:11'
p1110
sg64
(dp1111
g1103
I01
sg1101
I01
sS'setBalanced'
p1112
I01
sS'epsval'
p1113
I01
sg687
I00
ssg70
S'Make a solver-subtree for the given Condeq Cohset'
p1114
sg58
g59
sg74
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-24 00:11'
p1115
sg146
S'solver_subtree'
p1116
sg76
(dp1117
g1097
(lp1118
NaI100
aI200
aI500
aS'@@rmin'
p1119
asg784
(lp1120
I01
aI00
aS'@@visu'
p1121
asg1098
(lp1122
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p1123
asg1100
(lp1124
NaI500
aI1000
aI2000
aS'@@rmax'
p1125
asg1101
(lp1126
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@derivative_eps'
p1127
asg1102
(lp1128
I01
aI00
aS'@@usesvd'
p1129
asg1103
(lp1130
I10
aS'@@debug_level'
p1131
asg1104
(lp1132
I01
aI00
aS'@@history'
p1133
asg1105
(lp1134
(lp1135
a(lp1136
g353
aa(lp1137
g1107
aa(lp1138
S'Gphase'
p1139
aa(lp1140
S'Gpol1'
p1141
aa(lp1142
S'Gpol2'
p1143
aa(lp1144
g361
aa(lp1145
g361
aS'stokesU'
p1146
aa(lp1147
g361
aS'stokesQ'
p1148
aa(lp1149
g361
aS'stokesV'
p1150
aa(lp1151
S'stokesQU'
p1152
ag361
aa(lp1153
S'stokesQUV'
p1154
ag361
aa(lp1155
g353
aS'stokesI'
p1156
aa(lp1157
g1156
aa(lp1158
S'stokesIQU'
p1159
aa(lp1160
S'stokesIQUV'
p1161
aa(lp1162
S'stokesIV'
p1163
aa(lp1164
g1152
aa(lp1165
g1154
aa(lp1166
g353
aS'DJones'
p1167
aa(lp1168
g1167
aa(lp1169
S'Dang'
p1170
aa(lp1171
S'Dell'
p1172
aa(lp1173
S'Dreal'
p1174
aa(lp1175
S'Dimag'
p1176
aa(lp1177
g353
ag1167
ag307
aa(lp1178
g307
aa(lp1179
g353
ag102
aa(lp1180
g102
aa(lp1181
S'Breal'
p1182
aa(lp1183
S'Bimag'
p1184
aa(lp1185
S'Bpol1'
p1186
aa(lp1187
S'Bpol2'
p1188
aaS'@@solvegroup'
p1189
asg1113
(lp1190
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsval'
p1191
asg687
(lp1192
Na(lp1193
I5
aI2
aa(lp1194
I2
aI2
aa(lp1195
I3
aI3
aaS'@@num_cells'
p1196
asg1112
(lp1197
I01
aI00
aS'@@setBalanced'
p1198
asS'num_iter'
p1199
(lp1200
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1201
asS'condition'
p1202
(lp1203
NaS'Gphase_X_sum=0.0'
p1204
aS'Gphase_Y_sum=0.0'
p1205
a(lp1206
g1204
ag1205
aa(lp1207
S'Gphase_X_first=0.0'
p1208
aS'Gphase_Y_first=0.0'
p1209
aa(lp1210
S'Gphase_X_last=0.0'
p1211
aS'Gphase_Y_last=0.0'
p1212
aaS'Dang_sum=0.0'
p1213
a(lp1214
S'Bimag_X_sum=0.0'
p1215
aS'Bimag_Y_sum=0.0'
p1216
aa(lp1217
S'Breal_X_product=1.0'
p1218
aS'Breal_Y_product=1.0'
p1219
aaS'@@condition'
p1220
asg1099
(lp1221
F1e-08
aF0.0
aS'@@colin_factor'
p1222
assg136
Nsg66
S'20dec2005'
p1223
sg62
(dp1224
g1097
I212
sg784
I223
sg1098
I216
sg1100
I213
sg1102
I220
sg1105
I210
sg687
I214
sg1104
I224
sg1199
I215
sg1202
I211
sg1099
I219
ssg149
g1110
sg60
S'MG_JEN_Cohset'
p1225
sg72
(dp1226
g1102
I00
sg1112
I00
sg1104
I00
sg784
I00
ssg142
S'** Specific description of inarg record for: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-24 00:11'
p1227
sg150
(dp1228
g154
S".modify( solvegroup ): []  ->  ['Ggain']"
p1229
ssg148
I00
sg156
(lp1230
g21
ag1105
ag1202
ag1097
ag1100
ag687
ag1199
ag1098
ag1113
ag1101
ag1099
ag1102
ag1112
ag1103
ag784
ag1104
asg24
(dp1231
g1097
S'if specified, only use baselines>=rmin'
p1232
sg784
S'if True, include visualisation'
p1233
sg1098
S'iteration control criterion...'
p1234
sg1100
S'if specified, only use baselines<=rmax'
p1235
sg1101
S'NEW: also iteration control...'
p1236
sg1102
S'if True, use Singular Value Decomposition (SVD)'
p1237
sg1103
S'solver debug_level'
p1238
sg1104
S'if True, include history collection of metrics'
p1239
sg1105
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p1240
sg1113
S'NEW: WNB version of epsilon....'
p1241
sg687
g688
sg1112
S'NEW: if True, add (..) to diagonal, otherwise multiply (1+lambda)'
p1242
sg1199
S'max number of iterations (now also in fitter)'
p1243
sg1202
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p1244
sg1099
S'colinearity factor'
p1245
ssg144
S'MG_JEN_Cohsetsolver_subtree'
p1246
ssg687
Nsg1112
I00
sg1199
I5
sg1202
Nsg1113
F1e-08
ssg1055
I00
ss.