(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stddev_Breal'
p7
F0.0
sg1
S'@@polrep'
p8
sS'stations'
p9
S'@@stations'
p10
sS'c00_Bimag'
p11
F0.0
sS'subtile_size_Bimag'
p12
NsS'fdeg_Breal'
p13
I5
sS'tdeg_Breal'
p14
I0
sS'fdeg_Bimag'
p15
S'@fdeg_Breal'
p16
sS'uvplane_effect'
p17
S'@@uvplane_effect'
p18
sS'subtile_size_Breal'
p19
NsS'_JEN_inarg_CTRL_record:'
p20
(dp21
S'localscope'
p22
g5
sS'help'
p23
(dp24
g7
S'scatter in default c00 funklet values'
p25
sg1
S'polarisation representation'
p26
sg9
S'the (subset of) stations to be used'
p27
sg11
S'default c00 funklet value'
p28
sg12
S'sub-tile size (None=entire tile)'
p29
sg13
S'degree of freq polynomial'
p30
sg14
S'degree of time polynomial'
p31
sg15
g30
sg17
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p32
sg19
g29
sS'c00_Breal'
p33
g28
sS'parmtable'
p34
S'name of the MeqParm table to be used'
p35
sS'tdeg_Bimag'
p36
g31
sS'stddev_Bimag'
p37
g25
sS'@Jsequence'
p38
S'list membership indication (used in JEN_inargGui)'
p39
ssS'target_dir'
p40
S'.'
p41
sS'target_module'
p42
S'MG_JEN_Joneset'
p43
sS'JEN_inargGUI_ident'
p44
(dp45
g13
I84
sg12
I87
sg14
I82
sg15
I85
sg19
I86
sg36
I83
ssS'hide'
p46
(dp47
g1
I01
sg9
I01
sg11
I01
sg37
I01
sg17
I01
sg34
I01
sg33
I01
sg7
I01
sg38
I01
ssS'generic'
p48
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-01 11:30'
p49
sS'version'
p50
S'16dec2005'
p51
sS'mutable'
p52
(dp53
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssS'description'
p54
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p55
sS'oneliner'
p56
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-01 11:30'
p57
sS'choice'
p58
(dp59
g7
(lp60
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p61
asg1
(lp62
g2
aS'circular'
p63
ag8
asg9
(lp64
(lp65
I0
aI1
aI2
aI3
aI4
aa(lp66
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp67
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp68
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p69
ag10
asg11
(lp70
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p71
asg12
(lp72
S'@subtile_size_Breal'
p73
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p74
asg13
(lp75
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p76
asg14
(lp77
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p78
asg15
(lp79
I3
aI4
aI5
aI6
ag16
aS'@@fdeg_Bimag'
p80
asg17
(lp81
I00
ag18
asg19
(lp82
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p83
asg33
(lp84
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p85
asg34
(lp86
NaS'test'
p87
aS'@@parmtable'
p88
asg36
(lp89
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p90
aS'@@tdeg_Bimag'
p91
asg37
(lp92
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p93
asg38
(lp94
S'BJones'
p95
aS'@@@Jsequence'
p96
assS'qual'
p97
NsS'last_edited'
p98
S'2006-03-01 11:30'
p99
sS'target_definition'
p100
S'MG_JEN_Joneset::BJones()'
p101
sS'barescope'
p102
S'MG_JEN_JonesetBJones'
p103
sS'target_function'
p104
S'BJones'
p105
sS'specific'
p106
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-01 11:30'
p107
sS'protected'
p108
I00
sS'datetime_defined'
p109
g99
sS'MESSAGE'
p110
(dp111
S'1'
p112
S'.modify( tdeg_Bimag ): @tdeg_Breal  ->  0'
p113
sS'0'
p114
S'.modify( subtile_size_Bimag ): @subtile_size_Breal  ->  None'
p115
ssS'order'
p116
(lp117
g20
ag9
ag1
ag38
ag34
ag17
ag14
ag36
ag13
ag15
ag19
ag12
ag33
ag11
ag7
ag37
assg34
g88
sg36
I0
sg37
F0.0
sg33
F1.0
sg38
g95
ssg1
S'@@polrep'
p118
sg9
S'@@stations'
p119
sS'./MG_JEN_Joneset.DJones_WSRT()'
p120
(dp121
S'fdeg_Dang'
p122
I0
sS'c00_Dang'
p123
F0.0
sg1
S'@@polrep'
p124
sS'stddev_Dell'
p125
F0.0
sg9
S'@@stations'
p126
sS'fdeg_Dell'
p127
S'@fdeg_Dang'
p128
sS'coupled_XY_Dell'
p129
I01
sS'stddev_Dang'
p130
F0.0
sg17
S'@@uvplane_effect'
p131
sg34
S'@@parmtable'
p132
sg20
(dp133
g22
g120
sg23
(dp134
g122
S'degree of freq polynomial'
p135
sg123
S'default c00 funklet value'
p136
sg1
g26
sg125
S'scatter in default c00 funklet values'
p137
sg9
g27
sg127
g135
sg129
S'if True, XDell = -YDell per station'
p138
sg130
g137
sg17
g32
sg34
g35
sS'tdeg_Dell'
p139
S'degree of time polynomial'
p140
sS'c00_Dell'
p141
g136
sS'coupled_XY_Dang'
p142
S'if True, XDang = YDang per station'
p143
sS'c00_PZD'
p144
g136
sS'subtile_size_Dang'
p145
S'sub-tile size (None=entire tile)'
p146
sS'subtile_size_Dell'
p147
g146
sS'tdeg_Dang'
p148
g140
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p149
sg44
(dp150
g122
I104
sg127
I105
sg129
I99
sg139
I103
sg142
I98
sg145
I106
sg147
I107
sg148
I102
ssg46
(dp151
g123
I01
sg1
I01
sg125
I01
sg9
I01
sg141
I01
sg130
I01
sg17
I01
sg34
I01
sg144
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-01 11:30'
p152
sg50
g51
sg52
(dp153
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p154
sS'editable'
p155
(dp156
g142
I00
sg129
I00
ssg56
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-01 11:30'
p157
sg58
(dp158
g122
(lp159
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p160
asg123
(lp161
F0.0
aF0.10000000000000001
aS'@@c00_Dang'
p162
asg1
(lp163
g2
ag63
ag124
asg125
(lp164
F0.0
aF0.10000000000000001
aS'@@stddev_Dell'
p165
asg9
(lp166
(lp167
I0
aI1
aI2
aI3
aI4
aa(lp168
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp169
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp170
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag126
asg127
(lp171
I0
aI1
aI2
aI3
ag128
aS'@@fdeg_Dell'
p172
asg129
(lp173
I01
aI00
aS'@@coupled_XY_Dell'
p174
asg130
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_Dang'
p176
asg17
(lp177
I00
ag131
asg34
(lp178
Nag87
ag132
asg139
(lp179
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p180
aS'@@tdeg_Dell'
p181
asg141
(lp182
F0.0
aF0.10000000000000001
aS'@@c00_Dell'
p183
asg142
(lp184
I01
aI00
aS'@@coupled_XY_Dang'
p185
asg144
(lp186
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p187
asg145
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p189
asg147
(lp190
S'@subtile_size_Dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p192
asg148
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p194
asg38
(lp195
S'DJones_WSRT'
p196
aS'@@@Jsequence'
p197
assg97
Nsg98
S'2006-03-01 11:30'
p198
sg100
S'MG_JEN_Joneset::DJones_WSRT()'
p199
sg102
S'MG_JEN_JonesetDJones_WSRT'
p200
sg104
S'DJones_WSRT'
p201
sg106
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-01 11:30'
p202
sg108
I00
sg109
g198
sg110
(dp203
g112
S'.modify( tdeg_Dell ): @tdeg_Dang  ->  0'
p204
sg114
S'.modify( subtile_size_Dell ): @subtile_size_Dang  ->  None'
p205
ssg116
(lp206
g20
ag9
ag1
ag38
ag142
ag129
ag34
ag17
ag148
ag139
ag122
ag127
ag145
ag147
ag123
ag141
ag144
ag130
ag125
assg139
I0
sg141
F0.0
sg142
I01
sg144
F0.0
sg145
Nsg147
Nsg148
I0
sg38
g196
ssS'./MG_JEN_Joneset.FJones()'
p207
(dp208
S'c00_RM'
p209
F0.0
sg1
S'@@polrep'
p210
sg9
S'@@stations'
p211
sS'tdeg_RM'
p212
I0
sS'fdeg_RM'
p213
I2
sg34
S'@@parmtable'
p214
sg20
(dp215
g22
g207
sg23
(dp216
g209
S'default c00 funklet value'
p217
sg1
g26
sg17
g32
sg212
S'degree of time polynomial'
p218
sg9
g27
sg213
S'degree of freq polynomial'
p219
sg34
g35
sS'subtile_size_RM'
p220
S'sub-tile size (None=entire tile)'
p221
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p222
sg44
(dp223
g213
I74
sg220
I75
sg212
I73
ssg46
(dp224
g209
I01
sg1
I01
sg9
I01
sg17
I01
sg34
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-01 11:30'
p225
sg50
g51
sg52
(dp226
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'defines diagonal FJones Faraday rotation matrices'
p227
sg56
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-01 11:30'
p228
sg58
(dp229
g209
(lp230
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p231
asg1
(lp232
g2
ag63
ag210
asg17
(lp233
I00
aS'@@uvplane_effect'
p234
asg212
(lp235
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p236
asg9
(lp237
(lp238
I0
aI1
aI2
aI3
aI4
aa(lp239
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp240
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp241
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag211
asg213
(lp242
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p243
asg34
(lp244
Nag87
ag214
asg220
(lp245
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p246
asg38
(lp247
S'FJones'
p248
aS'@@@Jsequence'
p249
assg97
Nsg98
S'2006-03-01 11:30'
p250
sg100
S'MG_JEN_Joneset::FJones()'
p251
sg102
S'MG_JEN_JonesetFJones'
p252
sg104
S'FJones'
p253
sg106
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-01 11:30'
p254
sg108
I00
sg109
g250
sg110
(dp255
g114
S'.modify( subtile_size_RM ): 1  ->  None'
p256
ssg116
(lp257
g20
ag9
ag1
ag38
ag34
ag17
ag212
ag213
ag220
ag209
assg220
Nsg17
g234
sg38
g248
ssg17
S'@@uvplane_effect'
p258
sg34
S'@@parmtable'
p259
sg20
(dp260
g22
g3
sg23
(dp261
g1
g26
sg9
g27
sg17
g32
sg34
g35
sS'Jsequence'
p262
S'sequence of Jones matrices to be used'
p263
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Cohset'
p264
sg44
(dp265
g262
I51
ssg46
(dp266
g17
I01
sg9
I01
sg34
I01
sg1
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-01 11:30'
p267
sg50
S'25dec2005'
p268
sg52
(dp269
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p270
sg56
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-01 11:30'
p271
sg58
(dp272
g1
(lp273
g2
ag63
ag118
asg9
(lp274
(lp275
I0
aI1
aI2
aI3
aI4
aa(lp276
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp277
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp278
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag119
asg17
(lp279
I00
ag258
asg34
(lp280
Nag87
ag259
asg262
(lp281
(lp282
S'GJones'
p283
aa(lp284
g95
aa(lp285
g248
aa(lp286
S'KJones'
p287
aa(lp288
g196
aa(lp289
g283
ag196
aa(lp290
S'JJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg38
(lp294
NaS'@@@Jsequence'
p295
assg97
Nsg98
S'2006-03-01 11:30'
p296
sg100
S'MG_JEN_Cohset::Jones()'
p297
sg102
S'MG_JEN_CohsetJones'
p298
sg104
S'Jones'
p299
sg106
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-01 11:30'
p300
sg108
I00
sg109
g296
sg110
(dp301
g112
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p302
sg114
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p303
sS'3'
p304
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p305
sS'2'
p306
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p307
sS'5'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p309
sS'4'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p311
sS'6'
p312
S".modify( Jsequence ): []  ->  ['GJones']"
p313
ssg116
(lp314
g20
ag9
ag1
ag38
ag34
ag17
ag262
aS'./MG_JEN_Joneset.GJones()'
p315
ag207
ag5
aS'./MG_JEN_Joneset.KJones()'
p316
ag120
aS'./MG_JEN_Joneset.JJones()'
p317
assg316
(dp318
g38
g287
sg1
S'@@polrep'
p319
sg20
(dp320
g100
S'MG_JEN_Joneset::KJones()'
p321
sg22
g316
sg98
S'2006-03-01 11:30'
p322
sg46
(dp323
g38
I01
sg1
I01
sg9
I01
ssg102
S'MG_JEN_JonesetKJones'
p324
sg48
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-01 11:30'
p325
sg40
g41
sg56
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-01 11:30'
p326
sg104
S'KJones'
p327
sg58
(dp328
g38
(lp329
g287
aS'@@@Jsequence'
p330
asg1
(lp331
g2
ag63
ag319
asg9
(lp332
(lp333
I0
aI1
aI2
aI3
aI4
aa(lp334
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp335
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp336
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
aS'@@stations'
p337
assg106
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-01 11:30'
p338
sg97
Nsg50
S'12dec2005'
p339
sg44
(dp340
sg109
g322
sg42
S'MG_JEN_Joneset'
p341
sg52
(dp342
g1
I00
sg9
I00
ssg108
I00
sg116
(lp343
g20
ag9
ag1
ag38
asg23
(dp344
g38
g39
sg1
g26
sg9
g27
ssg54
S'defines diagonal KJones matrices for DFT Fourier kernel'
p345
ssg9
g337
ssg317
(dp346
S'subtile_size_Jimag'
p347
NsS'tdeg_Jimag'
p348
I0
sg1
S'@@polrep'
p349
sS'tdeg_Jreal'
p350
I0
sg9
S'@@stations'
p351
sS'c00_Jimag'
p352
F0.0
sS'subtile_size_Jreal'
p353
NsS'c00_Jreal'
p354
F1.0
sg17
S'@@uvplane_effect'
p355
sg34
S'@@parmtable'
p356
sS'stddev_Jimag'
p357
F0.0
sg20
(dp358
g22
g317
sg23
(dp359
g347
S'sub-tile size (None=entire tile)'
p360
sS'fdeg_Jreal'
p361
S'degree of freq polynomial'
p362
sg348
S'degree of time polynomial'
p363
sg1
g26
sg350
g363
sg352
S'default c00 funklet value'
p364
sg9
g27
sg354
g364
sg17
g32
sg34
g35
sS'fdeg_Jimag'
p365
g362
sg353
g360
sg357
S'scatter in default c00 funklet values'
p366
sS'stddev_Jreal'
p367
g366
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p368
sg44
(dp369
g347
I123
sg348
I119
sg350
I118
sg365
I121
sg353
I122
sg361
I120
ssg46
(dp370
g1
I01
sg9
I01
sg352
I01
sg354
I01
sg17
I01
sg34
I01
sg367
I01
sg357
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-01 11:30'
p371
sg50
S'14feb2006'
p372
sg52
(dp373
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p374
sg56
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-01 11:30'
p375
sg58
(dp376
g347
(lp377
S'@subtile_size_Jreal'
p378
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p379
asg361
(lp380
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p381
asg348
(lp382
I0
aI1
aI2
aI3
aS'@tdeg_Jreal'
p383
aS'@@tdeg_Jimag'
p384
asg1
(lp385
g2
ag63
ag349
asg350
(lp386
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p387
asg352
(lp388
F0.0
aF0.10000000000000001
aS'@@c00_Jimag'
p389
asg9
(lp390
(lp391
I0
aI1
aI2
aI3
aI4
aa(lp392
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp393
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp394
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag351
asg354
(lp395
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Jreal'
p396
asg17
(lp397
I00
ag355
asg34
(lp398
Nag87
ag356
asg365
(lp399
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p400
aS'@@fdeg_Jimag'
p401
asg353
(lp402
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p403
asg357
(lp404
F0.0
aF0.10000000000000001
aS'@@stddev_Jimag'
p405
asg367
(lp406
F0.0
aF0.10000000000000001
aS'@@stddev_Jreal'
p407
asg38
(lp408
g291
aS'@@@Jsequence'
p409
assg97
Nsg98
S'2006-03-01 11:30'
p410
sg100
S'MG_JEN_Joneset::JJones()'
p411
sg102
S'MG_JEN_JonesetJJones'
p412
sg104
S'JJones'
p413
sg106
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-01 11:30'
p414
sg108
I00
sg109
g410
sg110
(dp415
g112
S'.modify( tdeg_Jimag ): @tdeg_Jreal  ->  0'
p416
sg114
S'.modify( subtile_size_Jimag ): @subtile_size_Jreal  ->  None'
p417
ssg116
(lp418
g20
ag9
ag1
ag38
ag34
ag17
ag350
ag348
ag361
ag365
ag353
ag347
ag354
ag352
ag367
ag357
assg38
g291
sg367
F0.0
sg365
g400
sg361
I0
ssg315
(dp419
g1
S'@@polrep'
p420
sS'fdeg_Ggain'
p421
I0
sS'c00_Gphase'
p422
F0.0
sg38
g283
sS'subtile_size_Ggain'
p423
NsS'tdeg_Gphase'
p424
I0
sg9
S'@@stations'
p425
sS'tdeg_Ggain'
p426
I0
sS'fdeg_Gphase'
p427
S'@fdeg_Ggain'
p428
sg34
S'@@parmtable'
p429
sS'stddev_Ggain'
p430
F0.0
sS'subtile_size_Gphase'
p431
NsS'c00_Ggain'
p432
F1.0
sS'stddev_Gphase'
p433
F0.0
sS'Gpolar'
p434
I00
sg17
S'@@uvplane_effect'
p435
sg20
(dp436
g22
g315
sg23
(dp437
g1
g26
sg9
g27
sg421
S'degree of freq polynomial'
p438
sg422
S'default c00 funklet value'
p439
sg423
S'sub-tile size (None=entire tile)'
p440
sg424
S'degree of time polynomial'
p441
sg426
g441
sg427
g438
sg34
g35
sg430
S'scatter in default c00 funklet values'
p442
sg431
g440
sg432
g439
sg433
g442
sg434
S'if True, use MeqPolar, otherwise MeqToComplex'
p443
sg17
g32
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p444
sg44
(dp445
g421
I60
sg423
I62
sg424
I59
sg426
I58
sg427
I61
sg431
I63
sg434
I55
ssg46
(dp446
g1
I01
sg9
I01
sg430
I01
sg422
I01
sg17
I01
sg34
I01
sg432
I01
sg433
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-01 11:30'
p447
sg50
S'15dec2005'
p448
sg52
(dp449
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p450
sg155
(dp451
g434
I00
ssg56
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-01 11:30'
p452
sg58
(dp453
g1
(lp454
g2
ag63
ag420
asg9
(lp455
(lp456
I0
aI1
aI2
aI3
aI4
aa(lp457
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp458
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp459
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag425
asg421
(lp460
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p461
asg422
(lp462
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p463
asg423
(lp464
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p465
asg424
(lp466
I0
aI1
aI2
aI3
aS'@tdeg_Ggain'
p467
aS'@@tdeg_Gphase'
p468
asg426
(lp469
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p470
asg427
(lp471
I0
aI1
aI2
aI3
ag428
aS'@@fdeg_Gphase'
p472
asg34
(lp473
Nag87
ag429
asg430
(lp474
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p475
asg431
(lp476
S'@subtile_size_Ggain'
p477
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p478
asg432
(lp479
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p480
asg433
(lp481
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p482
asg434
(lp483
I01
aI00
aS'@@Gpolar'
p484
asg17
(lp485
I00
ag435
asg38
(lp486
g283
aS'@@@Jsequence'
p487
assg97
Nsg98
S'2006-03-01 11:30'
p488
sg100
S'MG_JEN_Joneset::GJones()'
p489
sg102
S'MG_JEN_JonesetGJones'
p490
sg104
S'GJones'
p491
sg106
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-01 11:30'
p492
sg108
I00
sg109
g488
sg110
(dp493
g112
S'.modify( subtile_size_Gphase ): @subtile_size_Ggain  ->  None'
p494
sg114
S'.modify( subtile_size_Ggain ): 1  ->  None'
p495
sg306
S'.modify( tdeg_Gphase ): @tdeg_Ggain  ->  0'
p496
ssg116
(lp497
g20
ag9
ag1
ag38
ag434
ag34
ag17
ag426
ag424
ag421
ag427
ag423
ag431
ag432
ag422
ag430
ag433
asssg262
(lp498
g283
asg38
NssS'./MG_JEN_Cohset.predict()'
p499
(dp500
g9
S'@@stations'
p501
sg1
S'@@polrep'
p502
sg20
(dp503
g100
S'MG_JEN_Cohset::predict()'
p504
sg22
g499
sg44
(dp505
sg46
(dp506
g9
I01
sg1
I01
sg38
I01
ssg102
S'MG_JEN_Cohsetpredict'
p507
sg48
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-01 11:30'
p508
sg40
g41
sg54
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p509
sg56
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-01 11:30'
p510
sg104
S'predict'
p511
sg58
(dp512
g9
(lp513
(lp514
I0
aI1
aI2
aI3
aI4
aa(lp515
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp516
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp517
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag501
asg1
(lp518
g2
ag63
ag502
asg38
(lp519
NaS'@@@Jsequence'
p520
assg106
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-01 11:30'
p521
sg97
Nsg50
g268
sg109
S'2006-03-01 11:30'
p522
sg42
S'MG_JEN_Cohset'
p523
sg52
(dp524
g1
I00
sg9
I00
ssg108
I00
sg98
g522
sg116
(lp525
g20
ag9
ag1
ag38
asg23
(dp526
g9
g27
sg1
g26
sg38
g39
sssg38
NssS'script_name'
p527
S'MG_JEN_cps'
p528
sS'ms_name'
p529
S'D1.MS'
p530
sg34
Nsg20
(dp531
g22
S'./MG_JEN_cps.'
p532
sg23
(dp533
g1
g26
sS'master_reqseq'
p534
S'if True, use a master reqseq for solver(s)'
p535
sg9
g27
sS'insert_flagger'
p536
S'if True, insert a flagger'
p537
sS'redun'
p538
S'if True, redundant spacing calibration'
p539
sS'insert_solver'
p540
S'if True, insert a solver'
p541
sg529
S'name of the (AIPS++) Measurement Set'
p542
sS'chain_solvers'
p543
S'if True, chain the solvers (recommended)'
p544
sS'num_cells'
p545
S'if defined, ModRes argument [ntime,nfreq]'
p546
sg34
g35
sS'tile_size'
p547
S'(inputrec) size (in time-slots) of the input data-tile'
p548
sg17
g32
sg38
g39
ssS'reference'
p549
I00
sg40
g41
sg42
S'MG_JEN_cps'
p550
sg44
(dp551
g1
I7
sg9
I6
sg536
I2
sg538
I13
sg540
I1
sg529
I4
sg34
I9
sg527
I0
sg545
I14
sg547
I5
sg17
I10
ssg46
(dp552
g1
I00
sg534
I01
sg9
I00
sS'last_changed'
p553
I01
sg538
I00
sg17
I00
sg543
I01
sg545
I00
sg38
I01
ssg48
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p554
sg50
g448
sg54
g554
sg155
(dp555
g553
I00
sg536
I00
sg534
I00
sg540
I00
sg538
I00
ssg56
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p556
sg58
(dp557
g1
(lp558
g2
ag63
aS'@@polrep'
p559
asg534
(lp560
I01
aI00
aS'@@master_reqseq'
p561
asg9
(lp562
(lp563
I0
aI1
aI2
aI3
aI4
aa(lp564
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp565
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp566
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
aS'@@stations'
p567
asg536
(lp568
I01
aI00
aS'@@insert_flagger'
p569
asg553
(lp570
S'd30jan2006'
p571
aS'@@last_changed'
p572
asg540
(lp573
I01
aI00
aS'@@insert_solver'
p574
asg538
(lp575
I01
aI00
aS'@@redun'
p576
asg529
(lp577
g530
aS'@@ms_name'
p578
asg543
(lp579
I01
aS'@@chain_solvers'
p580
asg545
(lp581
Na(lp582
I5
aI2
aa(lp583
I2
aI2
aa(lp584
I3
aI3
aaS'@@num_cells'
p585
asg34
(lp586
Nag87
aS'@@parmtable'
p587
asg547
(lp588
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p589
asg17
(lp590
I00
aS'@@uvplane_effect'
p591
asg38
(lp592
NaS'@@@Jsequence'
p593
assg98
S'2006-03-01 11:30'
p594
sS'HISTORY'
p595
(dp596
g112
S'2006-03-01 11:30: Derived from: MG_JEN_cps_Gphase.inarg'
p597
sg114
S'2006-03-01 11:30: Derived from: MG_JEN_cps.inarg'
p598
ssg100
g528
sS'save_file'
p599
S'MG_JEN_cps_Gphase_protected.inarg'
p600
sS'file_filter'
p601
S'MG_JEN_cps*.inarg'
p602
sg104
S''
p603
sg106
S'<specific>'
p604
sS'browse'
p605
(dp606
g529
S'*.MS'
p607
ssg108
I01
sg109
g594
sg110
(dp608
S'11'
p609
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1, 'condeq_unop': 1}"
p610
sS'10'
p611
S'.modify(): stripped off: _JEN_inarg_option'
p612
sS'13'
p613
S'.modify( tile_size ): 10  ->  1'
p614
sS'12'
p615
S'.modify(): stripped off: _JEN_inarg_option'
p616
sS'15'
p617
S'.modify(): stripped off: _JEN_inarg_option'
p618
sS'14'
p619
S".modify(): found ={'tile_size': 2, 'num_iter': 1, 'epsilon': 1}"
p620
sS'16'
p621
S".modify(): found ={'subtile_size_': 9, 'tdeg_': 9}"
p622
sg112
S'.modify( uvplane_effect ): False  ->  True'
p623
sg114
S'.modify(): stripped off: _JEN_inarg_option'
p624
sg304
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p625
sg306
S".modify(): found ={'uvplane_effect': 1}"
p626
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p627
sg310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p628
sS'7'
p629
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p630
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p631
sS'9'
p632
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p633
sS'8'
p634
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p635
ssg116
(lp636
g20
ag527
ag540
ag536
ag553
ag529
ag547
ag9
ag1
ag38
ag34
ag17
ag543
ag534
ag538
ag545
aS'./MG_JEN_exec.stream_control()'
p637
aS'./MG_JEN_Cohset.make_spigots()'
p638
aS'./MG_JEN_Sixpack.newstar_source()'
p639
ag3
ag499
aS'./MG_JEN_Cohset.insert_solver()'
p640
aS'./MG_JEN_Cohset.make_sinks()'
p641
assg641
(dp642
S'fullDomainMux'
p643
I01
sS'output_col'
p644
S'PREDICT'
p645
sS'visu'
p646
I01
sS'flag'
p647
I00
sg20
(dp648
g100
S'MG_JEN_Cohset::make_sinks()'
p649
sg22
g641
sg44
(dp650
g647
I156
sg646
I155
sg643
I157
sg644
I153
sS'visu_array_config'
p651
I154
ssg102
S'MG_JEN_Cohsetmake_sinks'
p652
sg48
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-01 11:30'
p653
sg40
g41
sg54
S'Make sink nodes in the given Cohset object'
p654
sg56
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-01 11:30'
p655
sg104
S'make_sinks'
p656
sg58
(dp657
g647
(lp658
I01
aI00
aS'@@flag'
p659
asg651
(lp660
I01
aI00
aS'@@visu_array_config'
p661
asg644
(lp662
g645
aS'RESIDUALS'
p663
aS'DATA'
p664
aS'@@output_col'
p665
asg643
(lp666
I01
aI00
aS'@@fullDomainMux'
p667
asg646
(lp668
I01
aI00
aS'@@visu'
p669
assg106
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-01 11:30'
p670
sg97
Nsg50
g268
sg109
S'2006-03-01 11:30'
p671
sg42
S'MG_JEN_Cohset'
p672
sg155
(dp673
g647
I00
sg651
I00
sg643
I00
sg646
I00
ssg108
I00
sg98
g671
sg116
(lp674
g20
ag644
ag651
ag646
ag647
ag643
asg23
(dp675
g647
S'if True, insert a flagger for the output uv-data'
p676
sg651
S'if True, visualise the array config (from MS)'
p677
sg644
S'name of the logical (VisTile) output column'
p678
sg643
S'if True, attach an extra VisDataMux'
p679
sg646
S'if True, visualise the output uv-data'
p680
sssg651
I01
ssg547
I1
sg638
(dp681
S'MS_corr_index'
p682
(lp683
I0
aI1
aI2
aI3
asg647
I00
sg20
(dp684
g100
S'MG_JEN_Cohset::make_spigots()'
p685
sg22
g638
sg44
(dp686
g647
I26
sg682
I24
sg646
I25
ssg46
(dp687
S'input_col'
p688
I01
ssg102
S'MG_JEN_Cohsetmake_spigots'
p689
sg48
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-01 11:30'
p690
sg40
g41
sg54
S'Make spigot nodes in the given Cohset object'
p691
sg56
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-01 11:30'
p692
sg104
S'make_spigots'
p693
sg58
(dp694
g647
(lp695
I01
aI00
aS'@@flag'
p696
asg682
(lp697
(lp698
I0
aI1
aI2
aI3
aa(lp699
I0
aI-1
aI-1
aI1
aa(lp700
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p701
asg688
(lp702
g664
ag645
ag663
aS'@@input_col'
p703
asg646
(lp704
I01
aI00
aS'@@visu'
p705
assg106
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-01 11:30'
p706
sg97
Nsg50
g268
sg109
S'2006-03-01 11:30'
p707
sg42
S'MG_JEN_Cohset'
p708
sg155
(dp709
g647
I00
sg646
I00
ssg108
I00
sg98
g707
sg116
(lp710
g20
ag688
ag682
ag646
ag647
asg23
(dp711
g647
S'if True, insert a flagger for the input uv-data'
p712
sg682
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p713
sg688
S'name of the logical (VisTile) input column'
p714
sg646
S'if True, visualise the input uv-data'
p715
sssg688
g664
sg646
I01
ssg38
Nsg536
I00
sg553
g571
sg17
I01
sg545
Nsg639
(dp716
S'f0'
p717
F1000000.0
sS'major'
p718
F0.0
sS'unsolvable'
p719
I00
sS'from_LSM'
p720
NsS'name'
p721
NsS'I0'
p722
F1.0
sS'SI'
p723
NsS'Qpct'
p724
NsS'punit'
p725
S'unpol'
p726
sS'fsr_trace'
p727
I01
sS'shape'
p728
S'point'
p729
sS'pa'
p730
F0.0
sS'RA'
p731
F4.3570000000000002
sg34
NsS'RM'
p732
NsS'Upct'
p733
NsS'Dec'
p734
F1.0920000000000001
sS'Vpct'
p735
NsS'minor'
p736
F0.0
sg20
(dp737
g22
g639
sg23
(dp738
g717
S'reference freq (Hz): I=I0 @ f=f0'
p739
sg718
S'major axis (arcsec)'
p740
sg719
S'if True, do NOT store solvegroup/parmgroup info'
p741
sg720
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p742
sg722
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p743
sg723
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p744
sg724
S'Stokes Q (percentage of I)'
p745
sg725
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p746
sg728
S'source shape'
p747
sg730
S'position angle (rad)'
p748
sg727
S'If True, attach to forest state record'
p749
sg34
S'name of the MeqParm table (AIPS++)'
p750
sg732
S'Intrinsic Rotation Measure (rad/m2)'
p751
sg733
S'Stokes U (percentage of I)'
p752
sg734
S'Declination (rad, J2000)'
p753
sg735
S'Stokes V (percentage of I)'
p754
sg736
S'minor axis (arcsec)'
p755
sg731
S'Right Ascension (rad, J2000)'
p756
ssg40
g41
sg42
S'MG_JEN_Sixpack'
p757
sg44
(dp758
g734
I40
sg720
I28
sg722
I32
sg724
I33
sg725
I27
sg723
I37
sg34
I30
sg731
I39
sg732
I36
sg733
I34
sg735
I35
ssg46
(dp759
g717
I01
sg718
I01
sg719
I01
sg720
I00
sg727
I01
sg725
I00
sg728
I01
sg730
I01
sg736
I01
sg721
I01
ssg48
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-01 11:30'
p760
sg50
S'10feb2006'
p761
sg605
(dp762
g720
S'*.lsm'
p763
ssg54
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p764
sg155
(dp765
g719
I00
sg727
I00
ssg56
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-01 11:30'
p766
sg58
(dp767
g717
(lp768
F1000000.0
aS'@@f0'
p769
asg718
(lp770
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p771
asg719
(lp772
I01
aI00
aS'@@unsolvable'
p773
asg720
(lp774
NaS'@@from_LSM'
p775
asg722
(lp776
F1.0
aF10.0
aS'@@I0'
p777
asg723
(lp778
NaF-0.69999999999999996
a(lp779
F0.44700000000000001
aF-0.184
aaS'@@SI'
p780
asg724
(lp781
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p782
asg725
(lp783
g726
aS'unpol2'
p784
aS'unpol10'
p785
aS'QUV'
p786
aS'QU'
p787
aS'Qonly'
p788
aS'Uonly'
p789
aS'Vonly'
p790
aS'3c147'
p791
aS'3c286'
p792
aS'3c48'
p793
aS'3c295'
p794
aS'RMtest'
p795
aS'SItest'
p796
aS'@@punit'
p797
asg727
(lp798
I01
aI00
aS'@@fsr_trace'
p799
asg728
(lp800
g729
aS'ell.gauss'
p801
aS'@@shape'
p802
asg730
(lp803
F0.0
aF1.0
aF-0.5
aS'@@pa'
p804
asg731
(lp805
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p806
asg34
(lp807
NaS'@@parmtable'
p808
asg732
(lp809
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p810
asg733
(lp811
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p812
asg734
(lp813
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p814
asg735
(lp815
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p816
asg736
(lp817
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p818
asg721
(lp819
NaS'@@name'
p820
assg97
Nsg98
S'2006-03-01 11:30'
p821
sg100
S'MG_JEN_Sixpack::newstar_source()'
p822
sg102
S'MG_JEN_Sixpacknewstar_source'
p823
sg104
S'newstar_source'
p824
sg106
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-01 11:30'
p825
sS'callback'
p826
(dp827
g725
I01
ssg108
I00
sg109
g821
sg116
(lp828
g20
ag725
ag720
ag721
ag34
ag719
ag722
ag724
ag733
ag735
ag732
ag723
ag717
ag731
ag734
ag727
ag728
ag718
ag736
ag730
asssg534
I00
sg9
g563
sg637
(dp829
S'channel_start_index'
p830
I10
sS'data_column_name'
p831
g664
sS'predict_column'
p832
S'CORRECTED_DATA'
p833
sg529
S'@@ms_name'
p834
sg20
(dp835
g22
g637
sg23
(dp836
g830
S'(inputrec.sel) index of first selected freq channel'
p837
sg831
S'(inputrec) MS input column'
p838
sg832
S'MS output column to be associated with the VisTile predict-column'
p839
sg529
g542
sg547
g548
sS'channel_increment'
p840
S'(inputrec.sel) take every nth channel (1=all)'
p841
sS'channel_end_index'
p842
S'(inputrec.sel) index of last selected freq channel'
p843
sS'write_flags'
p844
S'(outputrec) if True, write flags to MS'
p845
ssg40
g41
sg42
S'MG_JEN_exec'
p846
sg44
(dp847
g830
I18
sg831
I17
sg832
I22
sg844
I21
sg842
I19
sg840
I20
ssg46
(dp848
g529
I01
sg547
I01
ssg48
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-01 11:30'
p849
sg50
S'20jan2006'
p850
sg52
(dp851
g529
I00
sg547
I00
ssg54
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-01 11:30'
p852
sg155
(dp853
g844
I00
ssg56
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-01 11:30'
p854
sg58
(dp855
g830
(lp856
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p857
asg831
(lp858
g664
ag833
aS'@@data_column_name'
p859
asg832
(lp860
g664
ag833
aS'MODEL_DATA'
p861
aS'@@predict_column'
p862
asg529
(lp863
g530
ag834
asg547
(lp864
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p865
asg840
(lp866
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p867
asg842
(lp868
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p869
asg844
(lp870
I01
aI00
aS'@@write_flags'
p871
assg97
Nsg98
S'2006-03-01 11:30'
p872
sg100
S'MG_JEN_exec::stream_control()'
p873
sg102
S'MG_JEN_execstream_control'
p874
sg104
S'stream_control'
p875
sg106
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-01 11:30'
p876
sg605
(dp877
g529
g607
ssg108
I00
sg109
g872
sg110
(dp878
g114
S'.modify( tile_size ): @@tile_size  ->  1'
p879
ssg116
(lp880
g20
ag529
ag547
ag831
ag830
ag842
ag840
ag844
ag832
assg547
I1
sg840
I1
sg842
I50
sg844
I00
ssg538
I00
sg540
I01
sg543
I01
sg640
(dp881
S'correct_after'
p882
I01
sg534
S'@@master_reqseq'
p883
sS'condeq_unop'
p884
S'Arg'
p885
sg646
I01
sg538
S'@@redun'
p886
sS'solver_subtree'
p887
NsS'subtract_after'
p888
I00
sg543
S'@@chain_solvers'
p889
sg20
(dp890
g22
g640
sg23
(dp891
g882
S'if True, correct measured with predicted.Joneset'
p892
sg534
g535
sg884
S'Optional unary operation on Condeq inputs'
p893
sg646
S'if True, include full visualisation'
p894
sg538
g539
sg887
S'solver subtree qualifier(s)'
p895
sg888
S'if True, subtract predicted from measured'
p896
sg543
g544
sS'flag_residuals'
p897
S'if True, flag the residuals'
p898
sg545
g546
ssg40
g41
sg42
S'MG_JEN_Cohset'
p899
sg44
(dp900
g888
I138
sg882
I139
sg884
I136
sg646
I137
ssg46
(dp901
g534
I01
sg538
I01
sg887
I01
sg543
I01
sg897
I01
sg545
I01
ssg48
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-01 11:30'
p902
sg50
g268
sg52
(dp903
g545
I00
sg543
I00
sg538
I00
sg534
I00
ssg54
S'insert one or more solver subtrees in the data stream'
p904
sg155
(dp905
g882
I00
sg534
I00
sg646
I00
sg538
I00
sg888
I00
sg897
I00
ssg56
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-01 11:30'
p906
sg58
(dp907
g882
(lp908
I01
aI00
aS'@@correct_after'
p909
asg534
(lp910
I01
aI00
ag883
asg884
(lp911
NaS'Abs'
p912
ag885
aS'@@condeq_unop'
p913
asg646
(lp914
I01
aI00
aS'@@visu'
p915
asg538
(lp916
I01
aI00
ag886
asg887
(lp917
NaS'@@solver_subtree'
p918
asg888
(lp919
I01
aI00
aS'@@subtract_after'
p920
asg543
(lp921
I01
ag889
asg897
(lp922
I01
aI00
aS'@@flag_residuals'
p923
asg545
(lp924
Na(lp925
I5
aI2
aa(lp926
I2
aI2
aa(lp927
I3
aI3
aaS'@@num_cells'
p928
assg97
Nsg98
S'2006-03-01 11:30'
p929
sg100
S'MG_JEN_Cohset::insert_solver()'
p930
sg102
S'MG_JEN_Cohsetinsert_solver'
p931
sg104
S'insert_solver'
p932
sg106
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-01 11:30'
p933
sg108
I00
sg109
g929
sg110
(dp934
g112
S'.modify( condeq_unop ): None  ->  Arg'
p935
sg114
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p936
ssg116
(lp937
g20
ag887
ag538
ag545
ag543
ag534
ag884
ag646
ag888
ag882
ag897
aS'./MG_JEN_Cohset.solver_subtree()'
p938
assg545
g928
sg938
(dp939
S'rmin'
p940
Nsg646
I01
sS'epsilon'
p941
F0.0001
sS'rmax'
p942
NsS'usesvd'
p943
I01
sS'debug_level'
p944
I10
sS'solvegroup'
p945
(lp946
S'Gphase'
p947
asg20
(dp948
g22
g938
sg23
(dp949
g940
S'if specified, only use baselines>=rmin'
p950
sg646
S'if True, include visualisation'
p951
sg941
S'iteration control criterion'
p952
sg942
S'if specified, only use baselines<=rmax'
p953
sg943
S'if True, use Singular Value Decomposition (SVD)'
p954
sg944
S'solver debug_level'
p955
sg945
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p956
sg545
g546
sS'history'
p957
S'if True, include history collection of metrics'
p958
sS'num_iter'
p959
S'max number of iterations'
p960
sS'condition'
p961
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p962
sS'colin_factor'
p963
S'colinearity factor'
p964
ssg40
g41
sg42
S'MG_JEN_Cohset'
p965
sg44
(dp966
g940
I143
sg646
I151
sg941
I147
sg942
I144
sg943
I149
sg945
I141
sg545
I145
sg957
I152
sg959
I146
sg961
I142
sg963
I148
ssg46
(dp967
g944
I01
sg545
I00
ssg48
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-01 11:30'
p968
sg50
S'20dec2005'
p969
sg54
S'Make a solver-subtree for the given Condeq Cohset'
p970
sg155
(dp971
g943
I00
sg957
I00
sg646
I00
ssg56
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-01 11:30'
p972
sg58
(dp973
g940
(lp974
NaI100
aI200
aI500
aS'@@rmin'
p975
asg646
(lp976
I01
aI00
aS'@@visu'
p977
asg941
(lp978
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p979
asg942
(lp980
NaI500
aI1000
aI2000
aS'@@rmax'
p981
asg943
(lp982
I01
aI00
aS'@@usesvd'
p983
asg944
(lp984
I10
aS'@@debug_level'
p985
asg945
(lp986
(lp987
a(lp988
g283
aa(lp989
S'Ggain'
p990
aa(lp991
g947
aa(lp992
S'Gpol1'
p993
aa(lp994
S'Gpol2'
p995
aa(lp996
g291
aa(lp997
g291
aS'stokesU'
p998
aa(lp999
g291
aS'stokesQ'
p1000
aa(lp1001
g291
aS'stokesV'
p1002
aa(lp1003
S'stokesQU'
p1004
ag291
aa(lp1005
S'stokesQUV'
p1006
ag291
aa(lp1007
g283
aS'stokesI'
p1008
aa(lp1009
g1008
aa(lp1010
S'stokesIQU'
p1011
aa(lp1012
S'stokesIQUV'
p1013
aa(lp1014
S'stokesIV'
p1015
aa(lp1016
g1004
aa(lp1017
g1006
aa(lp1018
g283
aS'DJones'
p1019
aa(lp1020
g1019
aa(lp1021
S'Dang'
p1022
aa(lp1023
S'Dell'
p1024
aa(lp1025
S'Dreal'
p1026
aa(lp1027
S'Dimag'
p1028
aa(lp1029
g283
ag1019
ag248
aa(lp1030
g248
aa(lp1031
g283
ag95
aa(lp1032
g95
aa(lp1033
S'Breal'
p1034
aa(lp1035
S'Bimag'
p1036
aa(lp1037
S'Bpol1'
p1038
aa(lp1039
S'Bpol2'
p1040
aaS'@@solvegroup'
p1041
asg545
(lp1042
Na(lp1043
I5
aI2
aa(lp1044
I2
aI2
aa(lp1045
I3
aI3
aaS'@@num_cells'
p1046
asg957
(lp1047
I01
aI00
aS'@@history'
p1048
asg959
(lp1049
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1050
asg961
(lp1051
NaS'Gphase_X_sum=0.0'
p1052
aS'Gphase_Y_sum=0.0'
p1053
a(lp1054
g1052
ag1053
aa(lp1055
S'Gphase_X_first=0.0'
p1056
aS'Gphase_Y_first=0.0'
p1057
aa(lp1058
S'Gphase_X_last=0.0'
p1059
aS'Gphase_Y_last=0.0'
p1060
aaS'Dang_sum=0.0'
p1061
a(lp1062
S'Bimag_X_sum=0.0'
p1063
aS'Bimag_Y_sum=0.0'
p1064
aa(lp1065
S'Breal_X_product=1.0'
p1066
aS'Breal_Y_product=1.0'
p1067
aaS'@@condition'
p1068
asg963
(lp1069
F1e-08
aF0.0
aS'@@colin_factor'
p1070
assg97
Nsg98
S'2006-03-01 11:30'
p1071
sg100
S'MG_JEN_Cohset::solver_subtree()'
p1072
sg102
S'MG_JEN_Cohsetsolver_subtree'
p1073
sg104
S'solver_subtree'
p1074
sg106
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-01 11:30'
p1075
sg108
I00
sg109
g1071
sg110
(dp1076
g112
S'.modify( num_iter ): 5  ->  10'
p1077
sg114
S".modify( solvegroup ): []  ->  ['Gphase']"
p1078
ssg116
(lp1079
g20
ag945
ag961
ag940
ag942
ag545
ag959
ag941
ag963
ag943
ag944
ag646
ag957
assg545
Nsg957
I01
sg959
I10
sg961
Nsg963
F1e-08
ssg897
I00
ss.