(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stddev_Breal'
p7
F0.0
sg1
S'@@polrep'
p8
sS'stations'
p9
S'@@stations'
p10
sS'c00_Bimag'
p11
F0.0
sS'subtile_size_Bimag'
p12
NsS'fdeg_Breal'
p13
I5
sS'tdeg_Breal'
p14
I0
sS'fdeg_Bimag'
p15
S'@fdeg_Breal'
p16
sS'uvplane_effect'
p17
S'@@uvplane_effect'
p18
sS'subtile_size_Breal'
p19
NsS'_JEN_inarg_CTRL_record:'
p20
(dp21
S'localscope'
p22
g5
sS'help'
p23
(dp24
g7
S'scatter in default c00 funklet values'
p25
sg1
S'polarisation representation'
p26
sg9
S'the (subset of) stations to be used'
p27
sg11
S'default c00 funklet value'
p28
sg12
S'sub-tile size (None=entire tile)'
p29
sg13
S'degree of freq polynomial'
p30
sg14
S'degree of time polynomial'
p31
sg15
g30
sg17
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p32
sg19
g29
sS'c00_Breal'
p33
g28
sS'parmtable'
p34
S'name of the MeqParm table to be used'
p35
sS'tdeg_Bimag'
p36
g31
sS'stddev_Bimag'
p37
g25
sS'@Jsequence'
p38
S'list membership indication (used in JEN_inargGui)'
p39
ssS'target_dir'
p40
S'.'
p41
sS'target_module'
p42
S'MG_JEN_Joneset'
p43
sS'JEN_inargGUI_ident'
p44
(dp45
g13
I84
sg12
I87
sg14
I82
sg15
I85
sg19
I86
sg36
I83
ssS'hide'
p46
(dp47
g1
I01
sg9
I01
sg11
I01
sg37
I01
sg17
I01
sg34
I01
sg33
I01
sg7
I01
sg38
I01
ssS'generic'
p48
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 21:15'
p49
sS'version'
p50
S'16dec2005'
p51
sS'mutable'
p52
(dp53
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssS'description'
p54
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p55
sS'oneliner'
p56
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 21:15'
p57
sS'choice'
p58
(dp59
g7
(lp60
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p61
asg1
(lp62
g2
aS'circular'
p63
ag8
asg9
(lp64
(lp65
I0
aI1
aI2
aI3
aI4
aa(lp66
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp67
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp68
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p69
ag10
asg11
(lp70
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p71
asg12
(lp72
S'@subtile_size_Breal'
p73
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p74
asg13
(lp75
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p76
asg14
(lp77
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p78
asg15
(lp79
I3
aI4
aI5
aI6
ag16
aS'@@fdeg_Bimag'
p80
asg17
(lp81
I00
ag18
asg19
(lp82
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p83
asg33
(lp84
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p85
asg34
(lp86
NaS'test'
p87
aS'@@parmtable'
p88
asg36
(lp89
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p90
aS'@@tdeg_Bimag'
p91
asg37
(lp92
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p93
asg38
(lp94
S'BJones'
p95
aS'@@@Jsequence'
p96
assS'qual'
p97
NsS'last_edited'
p98
S'2006-02-28 21:15'
p99
sS'target_definition'
p100
S'MG_JEN_Joneset::BJones()'
p101
sS'barescope'
p102
S'MG_JEN_JonesetBJones'
p103
sS'target_function'
p104
S'BJones'
p105
sS'specific'
p106
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 21:15'
p107
sS'protected'
p108
I00
sS'datetime_defined'
p109
g99
sS'MESSAGE'
p110
(dp111
S'1'
p112
S'.modify( tdeg_Bimag ): @tdeg_Breal  ->  0'
p113
sS'0'
p114
S'.modify( subtile_size_Bimag ): @subtile_size_Breal  ->  None'
p115
ssS'order'
p116
(lp117
g20
ag9
ag1
ag38
ag34
ag17
ag14
ag36
ag13
ag15
ag19
ag12
ag33
ag11
ag7
ag37
assg34
g88
sg36
I0
sg37
F0.0
sg33
F1.0
sg38
g95
ssg1
S'@@polrep'
p118
sg9
S'@@stations'
p119
sS'./MG_JEN_Joneset.DJones_WSRT()'
p120
(dp121
S'fdeg_Dang'
p122
I0
sS'c00_Dang'
p123
F0.0
sg1
S'@@polrep'
p124
sS'stddev_Dell'
p125
F0.0
sg9
S'@@stations'
p126
sS'fdeg_Dell'
p127
S'@fdeg_Dang'
p128
sS'coupled_XY_Dell'
p129
I01
sS'stddev_Dang'
p130
F0.0
sg17
S'@@uvplane_effect'
p131
sg34
S'@@parmtable'
p132
sg20
(dp133
g22
g120
sg23
(dp134
g122
S'degree of freq polynomial'
p135
sg123
S'default c00 funklet value'
p136
sg1
g26
sg125
S'scatter in default c00 funklet values'
p137
sg9
g27
sg127
g135
sg129
S'if True, XDell = -YDell per station'
p138
sg130
g137
sg17
g32
sg34
g35
sS'tdeg_Dell'
p139
S'degree of time polynomial'
p140
sS'c00_Dell'
p141
g136
sS'coupled_XY_Dang'
p142
S'if True, XDang = YDang per station'
p143
sS'c00_PZD'
p144
g136
sS'subtile_size_Dang'
p145
S'sub-tile size (None=entire tile)'
p146
sS'subtile_size_Dell'
p147
g146
sS'tdeg_Dang'
p148
g140
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p149
sg44
(dp150
g122
I105
sg127
I106
sg129
I100
sg139
I104
sg142
I99
sg145
I107
sg147
I108
sg148
I103
ssg46
(dp151
g123
I01
sg1
I01
sg125
I01
sg9
I01
sg141
I01
sg130
I01
sg17
I01
sg34
I01
sg144
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 21:15'
p152
sg50
g51
sg52
(dp153
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p154
sS'editable'
p155
(dp156
g142
I00
sg129
I00
ssg56
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 21:15'
p157
sg58
(dp158
g122
(lp159
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p160
asg123
(lp161
F0.0
aF0.10000000000000001
aS'@@c00_Dang'
p162
asg1
(lp163
g2
ag63
ag124
asg125
(lp164
F0.0
aF0.10000000000000001
aS'@@stddev_Dell'
p165
asg9
(lp166
(lp167
I0
aI1
aI2
aI3
aI4
aa(lp168
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp169
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp170
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag126
asg127
(lp171
I0
aI1
aI2
aI3
ag128
aS'@@fdeg_Dell'
p172
asg129
(lp173
I01
aI00
aS'@@coupled_XY_Dell'
p174
asg130
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_Dang'
p176
asg17
(lp177
I00
ag131
asg34
(lp178
Nag87
ag132
asg139
(lp179
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p180
aS'@@tdeg_Dell'
p181
asg141
(lp182
F0.0
aF0.10000000000000001
aS'@@c00_Dell'
p183
asg142
(lp184
I01
aI00
aS'@@coupled_XY_Dang'
p185
asg144
(lp186
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p187
asg145
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p189
asg147
(lp190
S'@subtile_size_Dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p192
asg148
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p194
asg38
(lp195
S'DJones_WSRT'
p196
aS'@@@Jsequence'
p197
assg97
Nsg98
S'2006-02-28 21:15'
p198
sg100
S'MG_JEN_Joneset::DJones_WSRT()'
p199
sg102
S'MG_JEN_JonesetDJones_WSRT'
p200
sg104
S'DJones_WSRT'
p201
sg106
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 21:15'
p202
sg108
I00
sg109
g198
sg110
(dp203
g112
S'.modify( tdeg_Dell ): @tdeg_Dang  ->  0'
p204
sg114
S'.modify( subtile_size_Dell ): @subtile_size_Dang  ->  None'
p205
ssg116
(lp206
g20
ag9
ag1
ag38
ag142
ag129
ag34
ag17
ag148
ag139
ag122
ag127
ag145
ag147
ag123
ag141
ag144
ag130
ag125
assg139
I0
sg141
F0.0
sg142
I01
sg144
F0.0
sg145
Nsg147
Nsg148
I0
sg38
g196
ssS'./MG_JEN_Joneset.FJones()'
p207
(dp208
S'c00_RM'
p209
F0.0
sg1
S'@@polrep'
p210
sg9
S'@@stations'
p211
sS'tdeg_RM'
p212
I0
sS'fdeg_RM'
p213
I2
sg34
S'@@parmtable'
p214
sg20
(dp215
g22
g207
sg23
(dp216
g209
S'default c00 funklet value'
p217
sg1
g26
sg17
g32
sg212
S'degree of time polynomial'
p218
sg9
g27
sg213
S'degree of freq polynomial'
p219
sg34
g35
sS'subtile_size_RM'
p220
S'sub-tile size (None=entire tile)'
p221
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p222
sg44
(dp223
g213
I74
sg220
I75
sg212
I73
ssg46
(dp224
g209
I01
sg1
I01
sg9
I01
sg17
I01
sg34
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 21:15'
p225
sg50
g51
sg52
(dp226
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'defines diagonal FJones Faraday rotation matrices'
p227
sg56
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 21:15'
p228
sg58
(dp229
g209
(lp230
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p231
asg1
(lp232
g2
ag63
ag210
asg17
(lp233
I00
aS'@@uvplane_effect'
p234
asg212
(lp235
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p236
asg9
(lp237
(lp238
I0
aI1
aI2
aI3
aI4
aa(lp239
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp240
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp241
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag211
asg213
(lp242
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p243
asg34
(lp244
Nag87
ag214
asg220
(lp245
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p246
asg38
(lp247
S'FJones'
p248
aS'@@@Jsequence'
p249
assg97
Nsg98
S'2006-02-28 21:15'
p250
sg100
S'MG_JEN_Joneset::FJones()'
p251
sg102
S'MG_JEN_JonesetFJones'
p252
sg104
S'FJones'
p253
sg106
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 21:15'
p254
sg108
I00
sg109
g250
sg110
(dp255
g114
S'.modify( subtile_size_RM ): 1  ->  None'
p256
ssg116
(lp257
g20
ag9
ag1
ag38
ag34
ag17
ag212
ag213
ag220
ag209
assg220
Nsg17
g234
sg38
g248
ssg17
S'@@uvplane_effect'
p258
sg34
S'@@parmtable'
p259
sg20
(dp260
g22
g3
sg23
(dp261
g1
g26
sg9
g27
sg17
g32
sg34
g35
sS'Jsequence'
p262
S'sequence of Jones matrices to be used'
p263
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Cohset'
p264
sg44
(dp265
g262
I51
ssg46
(dp266
g17
I01
sg9
I01
sg34
I01
sg1
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 21:15'
p267
sg50
S'25dec2005'
p268
sg52
(dp269
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p270
sg56
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 21:15'
p271
sg58
(dp272
g1
(lp273
g2
ag63
ag118
asg9
(lp274
(lp275
I0
aI1
aI2
aI3
aI4
aa(lp276
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp277
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp278
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag119
asg17
(lp279
I00
ag258
asg34
(lp280
Nag87
ag259
asg262
(lp281
(lp282
S'GJones'
p283
aa(lp284
g95
aa(lp285
g248
aa(lp286
S'KJones'
p287
aa(lp288
g196
aa(lp289
g283
ag196
aa(lp290
S'JJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg38
(lp294
NaS'@@@Jsequence'
p295
assg97
Nsg98
S'2006-02-28 21:15'
p296
sg100
S'MG_JEN_Cohset::Jones()'
p297
sg102
S'MG_JEN_CohsetJones'
p298
sg104
S'Jones'
p299
sg106
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 21:15'
p300
sg108
I00
sg109
g296
sg110
(dp301
g112
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p302
sg114
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p303
sS'3'
p304
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p305
sS'2'
p306
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p307
sS'5'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p309
sS'4'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p311
sS'6'
p312
S".modify( Jsequence ): []  ->  ['GJones']"
p313
ssg116
(lp314
g20
ag9
ag1
ag38
ag34
ag17
ag262
aS'./MG_JEN_Joneset.GJones()'
p315
ag207
ag5
aS'./MG_JEN_Joneset.KJones()'
p316
ag120
aS'./MG_JEN_Joneset.JJones()'
p317
assg316
(dp318
g9
S'@@stations'
p319
sS'simul'
p320
I00
sg1
S'@@polrep'
p321
sg20
(dp322
g100
S'MG_JEN_Joneset::KJones()'
p323
sg22
g316
sg98
S'2006-02-28 21:15'
p324
sg46
(dp325
g38
I01
sg1
I01
sg9
I01
ssg102
S'MG_JEN_JonesetKJones'
p326
sg48
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 21:15'
p327
sg40
g41
sg56
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 21:15'
p328
sg104
S'KJones'
p329
sg58
(dp330
g38
(lp331
g287
aS'@@@Jsequence'
p332
asg1
(lp333
g2
ag63
ag321
asg9
(lp334
(lp335
I0
aI1
aI2
aI3
aI4
aa(lp336
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp337
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp338
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag319
assg106
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 21:15'
p339
sg97
Nsg50
S'12dec2005'
p340
sg44
(dp341
g320
I95
ssg109
g324
sg42
S'MG_JEN_Joneset'
p342
sg52
(dp343
g1
I00
sg9
I00
ssg108
I00
sg116
(lp344
g20
ag9
ag1
ag38
ag320
asg23
(dp345
g38
g39
sg1
g26
sg9
g27
ssg54
S'defines diagonal KJones matrices for DFT Fourier kernel'
p346
ssg38
g287
ssg317
(dp347
S'subtile_size_Jimag'
p348
NsS'tdeg_Jimag'
p349
I0
sg1
S'@@polrep'
p350
sS'tdeg_Jreal'
p351
I0
sg9
S'@@stations'
p352
sS'c00_Jimag'
p353
F0.0
sS'subtile_size_Jreal'
p354
NsS'c00_Jreal'
p355
F1.0
sg17
S'@@uvplane_effect'
p356
sg34
S'@@parmtable'
p357
sS'stddev_Jimag'
p358
F0.0
sg20
(dp359
g22
g317
sg23
(dp360
g348
S'sub-tile size (None=entire tile)'
p361
sS'fdeg_Jreal'
p362
S'degree of freq polynomial'
p363
sg349
S'degree of time polynomial'
p364
sg1
g26
sg351
g364
sg353
S'default c00 funklet value'
p365
sg9
g27
sg355
g365
sg17
g32
sg34
g35
sS'fdeg_Jimag'
p366
g363
sg354
g361
sg358
S'scatter in default c00 funklet values'
p367
sS'stddev_Jreal'
p368
g367
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p369
sg44
(dp370
g348
I124
sg349
I120
sg351
I119
sg366
I122
sg354
I123
sg362
I121
ssg46
(dp371
g1
I01
sg9
I01
sg353
I01
sg355
I01
sg17
I01
sg34
I01
sg368
I01
sg358
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 21:15'
p372
sg50
S'14feb2006'
p373
sg52
(dp374
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p375
sg56
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 21:15'
p376
sg58
(dp377
g348
(lp378
S'@subtile_size_Jreal'
p379
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p380
asg362
(lp381
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p382
asg349
(lp383
I0
aI1
aI2
aI3
aS'@tdeg_Jreal'
p384
aS'@@tdeg_Jimag'
p385
asg1
(lp386
g2
ag63
ag350
asg351
(lp387
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p388
asg353
(lp389
F0.0
aF0.10000000000000001
aS'@@c00_Jimag'
p390
asg9
(lp391
(lp392
I0
aI1
aI2
aI3
aI4
aa(lp393
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp394
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp395
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag352
asg355
(lp396
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Jreal'
p397
asg17
(lp398
I00
ag356
asg34
(lp399
Nag87
ag357
asg366
(lp400
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p401
aS'@@fdeg_Jimag'
p402
asg354
(lp403
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p404
asg358
(lp405
F0.0
aF0.10000000000000001
aS'@@stddev_Jimag'
p406
asg368
(lp407
F0.0
aF0.10000000000000001
aS'@@stddev_Jreal'
p408
asg38
(lp409
g291
aS'@@@Jsequence'
p410
assg97
Nsg98
S'2006-02-28 21:15'
p411
sg100
S'MG_JEN_Joneset::JJones()'
p412
sg102
S'MG_JEN_JonesetJJones'
p413
sg104
S'JJones'
p414
sg106
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 21:15'
p415
sg108
I00
sg109
g411
sg110
(dp416
g112
S'.modify( tdeg_Jimag ): @tdeg_Jreal  ->  0'
p417
sg114
S'.modify( subtile_size_Jimag ): @subtile_size_Jreal  ->  None'
p418
ssg116
(lp419
g20
ag9
ag1
ag38
ag34
ag17
ag351
ag349
ag362
ag366
ag354
ag348
ag355
ag353
ag368
ag358
assg38
g291
sg368
F0.0
sg366
g401
sg362
I0
ssg315
(dp420
g1
S'@@polrep'
p421
sS'fdeg_Ggain'
p422
I0
sS'c00_Gphase'
p423
F0.0
sg38
g283
sS'subtile_size_Ggain'
p424
NsS'tdeg_Gphase'
p425
I0
sg9
S'@@stations'
p426
sS'tdeg_Ggain'
p427
I0
sS'fdeg_Gphase'
p428
S'@fdeg_Ggain'
p429
sg34
S'@@parmtable'
p430
sS'stddev_Ggain'
p431
F0.0
sS'subtile_size_Gphase'
p432
NsS'c00_Ggain'
p433
F1.0
sS'stddev_Gphase'
p434
F0.0
sS'Gpolar'
p435
I00
sg17
S'@@uvplane_effect'
p436
sg20
(dp437
g22
g315
sg23
(dp438
g1
g26
sg9
g27
sg422
S'degree of freq polynomial'
p439
sg423
S'default c00 funklet value'
p440
sg424
S'sub-tile size (None=entire tile)'
p441
sg425
S'degree of time polynomial'
p442
sg427
g442
sg428
g439
sg34
g35
sg431
S'scatter in default c00 funklet values'
p443
sg432
g441
sg433
g440
sg434
g443
sg435
S'if True, use MeqPolar, otherwise MeqToComplex'
p444
sg17
g32
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p445
sg44
(dp446
g422
I60
sg424
I62
sg425
I59
sg427
I58
sg428
I61
sg432
I63
sg435
I55
ssg46
(dp447
g1
I01
sg9
I01
sg431
I01
sg423
I01
sg17
I01
sg34
I01
sg433
I01
sg434
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 21:15'
p448
sg50
S'15dec2005'
p449
sg52
(dp450
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p451
sg155
(dp452
g435
I00
ssg56
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 21:15'
p453
sg58
(dp454
g1
(lp455
g2
ag63
ag421
asg9
(lp456
(lp457
I0
aI1
aI2
aI3
aI4
aa(lp458
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp459
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp460
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag426
asg422
(lp461
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p462
asg423
(lp463
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p464
asg424
(lp465
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p466
asg425
(lp467
I0
aI1
aI2
aI3
aS'@tdeg_Ggain'
p468
aS'@@tdeg_Gphase'
p469
asg427
(lp470
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p471
asg428
(lp472
I0
aI1
aI2
aI3
ag429
aS'@@fdeg_Gphase'
p473
asg34
(lp474
Nag87
ag430
asg431
(lp475
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p476
asg432
(lp477
S'@subtile_size_Ggain'
p478
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p479
asg433
(lp480
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p481
asg434
(lp482
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p483
asg435
(lp484
I01
aI00
aS'@@Gpolar'
p485
asg17
(lp486
I00
ag436
asg38
(lp487
g283
aS'@@@Jsequence'
p488
assg97
Nsg98
S'2006-02-28 21:15'
p489
sg100
S'MG_JEN_Joneset::GJones()'
p490
sg102
S'MG_JEN_JonesetGJones'
p491
sg104
S'GJones'
p492
sg106
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 21:15'
p493
sg108
I00
sg109
g489
sg110
(dp494
g112
S'.modify( subtile_size_Gphase ): @subtile_size_Ggain  ->  None'
p495
sg114
S'.modify( subtile_size_Ggain ): 1  ->  None'
p496
sg306
S'.modify( tdeg_Gphase ): @tdeg_Ggain  ->  0'
p497
ssg116
(lp498
g20
ag9
ag1
ag38
ag435
ag34
ag17
ag427
ag425
ag422
ag428
ag424
ag432
ag433
ag423
ag431
ag434
asssg262
(lp499
g283
asg38
NssS'./MG_JEN_Cohset.predict()'
p500
(dp501
g9
S'@@stations'
p502
sg1
S'@@polrep'
p503
sg20
(dp504
g100
S'MG_JEN_Cohset::predict()'
p505
sg22
g500
sg44
(dp506
sg46
(dp507
g9
I01
sg1
I01
sg38
I01
ssg102
S'MG_JEN_Cohsetpredict'
p508
sg48
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 21:15'
p509
sg40
g41
sg54
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p510
sg56
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 21:15'
p511
sg104
S'predict'
p512
sg58
(dp513
g9
(lp514
(lp515
I0
aI1
aI2
aI3
aI4
aa(lp516
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp517
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp518
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag502
asg1
(lp519
g2
ag63
ag503
asg38
(lp520
NaS'@@@Jsequence'
p521
assg106
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 21:15'
p522
sg97
Nsg50
g268
sg109
S'2006-02-28 21:15'
p523
sg42
S'MG_JEN_Cohset'
p524
sg52
(dp525
g1
I00
sg9
I00
ssg108
I00
sg98
g523
sg116
(lp526
g20
ag9
ag1
ag38
asg23
(dp527
g9
g27
sg1
g26
sg38
g39
sssg38
NssS'script_name'
p528
S'MG_JEN_cps'
p529
sS'ms_name'
p530
S'D1.MS'
p531
sg34
Nsg20
(dp532
g22
S'./MG_JEN_cps.'
p533
sg23
(dp534
g1
g26
sS'master_reqseq'
p535
S'if True, use a master reqseq for solver(s)'
p536
sg9
g27
sS'insert_flagger'
p537
S'if True, insert a flagger'
p538
sS'redun'
p539
S'if True, redundant spacing calibration'
p540
sS'insert_solver'
p541
S'if True, insert a solver'
p542
sg530
S'name of the (AIPS++) Measurement Set'
p543
sS'chain_solvers'
p544
S'if True, chain the solvers (recommended)'
p545
sS'num_cells'
p546
S'if defined, ModRes argument [ntime,nfreq]'
p547
sg34
g35
sS'tile_size'
p548
S'(inputrec) size (in time-slots) of the input data-tile'
p549
sg17
g32
sg38
g39
ssS'reference'
p550
I00
sg40
g41
sg42
S'MG_JEN_cps'
p551
sg44
(dp552
g1
I7
sg9
I6
sg537
I2
sg539
I13
sg541
I1
sg530
I4
sg34
I9
sg528
I0
sg546
I14
sg548
I5
sg17
I10
ssg46
(dp553
g1
I00
sg535
I01
sg9
I00
sS'last_changed'
p554
I01
sg539
I00
sg17
I00
sg544
I01
sg546
I00
sg38
I01
ssg48
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p555
sg50
g449
sg54
g555
sg155
(dp556
g554
I00
sg537
I00
sg535
I00
sg541
I00
sg539
I00
ssg56
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p557
sg58
(dp558
g1
(lp559
g2
ag63
aS'@@polrep'
p560
asg535
(lp561
I01
aI00
aS'@@master_reqseq'
p562
asg9
(lp563
(lp564
I0
aI1
aI2
aI3
aI4
aa(lp565
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp566
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp567
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
aS'@@stations'
p568
asg537
(lp569
I01
aI00
aS'@@insert_flagger'
p570
asg554
(lp571
S'd30jan2006'
p572
aS'@@last_changed'
p573
asg541
(lp574
I01
aI00
aS'@@insert_solver'
p575
asg539
(lp576
I01
aI00
aS'@@redun'
p577
asg530
(lp578
g531
aS'@@ms_name'
p579
asg544
(lp580
I01
aS'@@chain_solvers'
p581
asg546
(lp582
Na(lp583
I5
aI2
aa(lp584
I2
aI2
aa(lp585
I3
aI3
aaS'@@num_cells'
p586
asg34
(lp587
Nag87
aS'@@parmtable'
p588
asg548
(lp589
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p590
asg17
(lp591
I00
aS'@@uvplane_effect'
p592
asg38
(lp593
NaS'@@@Jsequence'
p594
assg98
S'2006-02-28 21:15'
p595
sS'HISTORY'
p596
(dp597
g112
S'2006-02-28 21:15: Derived from: MG_JEN_cps_Gphase.inarg'
p598
sg114
S'2006-02-28 21:15: Derived from: MG_JEN_cps.inarg'
p599
ssg100
g529
sS'save_file'
p600
S'MG_JEN_cps_Gphase_protected.inarg'
p601
sS'file_filter'
p602
S'MG_JEN_cps*.inarg'
p603
sg104
S''
p604
sg106
S'<specific>'
p605
sS'browse'
p606
(dp607
g530
S'*.MS'
p608
ssg108
I01
sg109
g595
sg110
(dp609
S'11'
p610
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1, 'condeq_unop': 1}"
p611
sS'10'
p612
S'.modify(): stripped off: _JEN_inarg_option'
p613
sS'13'
p614
S'.modify( tile_size ): 10  ->  1'
p615
sS'12'
p616
S'.modify(): stripped off: _JEN_inarg_option'
p617
sS'15'
p618
S'.modify(): stripped off: _JEN_inarg_option'
p619
sS'14'
p620
S".modify(): found ={'tile_size': 2, 'num_iter': 1, 'epsilon': 1}"
p621
sS'16'
p622
S".modify(): found ={'subtile_size_': 9, 'tdeg_': 9}"
p623
sg112
S'.modify( uvplane_effect ): False  ->  True'
p624
sg114
S'.modify(): stripped off: _JEN_inarg_option'
p625
sg304
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p626
sg306
S".modify(): found ={'uvplane_effect': 1}"
p627
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p628
sg310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p629
sS'7'
p630
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p631
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p632
sS'9'
p633
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p634
sS'8'
p635
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p636
ssg116
(lp637
g20
ag528
ag541
ag537
ag554
ag530
ag548
ag9
ag1
ag38
ag34
ag17
ag544
ag535
ag539
ag546
aS'./MG_JEN_exec.stream_control()'
p638
aS'./MG_JEN_Cohset.make_spigots()'
p639
aS'./MG_JEN_Sixpack.newstar_source()'
p640
ag3
ag500
aS'./MG_JEN_Cohset.insert_solver()'
p641
aS'./MG_JEN_Cohset.make_sinks()'
p642
assg642
(dp643
S'fullDomainMux'
p644
I01
sS'output_col'
p645
S'PREDICT'
p646
sS'visu'
p647
I01
sS'flag'
p648
I00
sg20
(dp649
g100
S'MG_JEN_Cohset::make_sinks()'
p650
sg22
g642
sg44
(dp651
g648
I157
sg647
I156
sg644
I158
sg645
I154
sS'visu_array_config'
p652
I155
ssg102
S'MG_JEN_Cohsetmake_sinks'
p653
sg48
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 21:15'
p654
sg40
g41
sg54
S'Make sink nodes in the given Cohset object'
p655
sg56
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 21:15'
p656
sg104
S'make_sinks'
p657
sg58
(dp658
g648
(lp659
I01
aI00
aS'@@flag'
p660
asg652
(lp661
I01
aI00
aS'@@visu_array_config'
p662
asg645
(lp663
g646
aS'RESIDUALS'
p664
aS'DATA'
p665
aS'@@output_col'
p666
asg644
(lp667
I01
aI00
aS'@@fullDomainMux'
p668
asg647
(lp669
I01
aI00
aS'@@visu'
p670
assg106
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 21:15'
p671
sg97
Nsg50
g268
sg109
S'2006-02-28 21:15'
p672
sg42
S'MG_JEN_Cohset'
p673
sg155
(dp674
g648
I00
sg652
I00
sg644
I00
sg647
I00
ssg108
I00
sg98
g672
sg116
(lp675
g20
ag645
ag652
ag647
ag648
ag644
asg23
(dp676
g648
S'if True, insert a flagger for the output uv-data'
p677
sg652
S'if True, visualise the array config (from MS)'
p678
sg645
S'name of the logical (VisTile) output column'
p679
sg644
S'if True, attach an extra VisDataMux'
p680
sg647
S'if True, visualise the output uv-data'
p681
sssg652
I01
ssg548
I1
sg639
(dp682
S'MS_corr_index'
p683
(lp684
I0
aI1
aI2
aI3
asg648
I00
sg20
(dp685
g100
S'MG_JEN_Cohset::make_spigots()'
p686
sg22
g639
sg44
(dp687
g648
I26
sg683
I24
sg647
I25
ssg46
(dp688
S'input_col'
p689
I01
ssg102
S'MG_JEN_Cohsetmake_spigots'
p690
sg48
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 21:15'
p691
sg40
g41
sg54
S'Make spigot nodes in the given Cohset object'
p692
sg56
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 21:15'
p693
sg104
S'make_spigots'
p694
sg58
(dp695
g648
(lp696
I01
aI00
aS'@@flag'
p697
asg683
(lp698
(lp699
I0
aI1
aI2
aI3
aa(lp700
I0
aI-1
aI-1
aI1
aa(lp701
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p702
asg689
(lp703
g665
ag646
ag664
aS'@@input_col'
p704
asg647
(lp705
I01
aI00
aS'@@visu'
p706
assg106
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 21:15'
p707
sg97
Nsg50
g268
sg109
S'2006-02-28 21:15'
p708
sg42
S'MG_JEN_Cohset'
p709
sg155
(dp710
g648
I00
sg647
I00
ssg108
I00
sg98
g708
sg116
(lp711
g20
ag689
ag683
ag647
ag648
asg23
(dp712
g648
S'if True, insert a flagger for the input uv-data'
p713
sg683
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p714
sg689
S'name of the logical (VisTile) input column'
p715
sg647
S'if True, visualise the input uv-data'
p716
sssg689
g665
sg647
I01
ssg38
Nsg537
I00
sg554
g572
sg17
I01
sg546
Nsg640
(dp717
S'f0'
p718
F1000000.0
sS'major'
p719
F0.0
sS'unsolvable'
p720
I00
sS'from_LSM'
p721
NsS'name'
p722
NsS'I0'
p723
F1.0
sS'SI'
p724
NsS'Qpct'
p725
NsS'punit'
p726
S'unpol'
p727
sS'fsr_trace'
p728
I01
sS'shape'
p729
S'point'
p730
sS'pa'
p731
F0.0
sS'RA'
p732
F4.3570000000000002
sg34
NsS'RM'
p733
NsS'Upct'
p734
NsS'Dec'
p735
F1.0920000000000001
sS'Vpct'
p736
NsS'minor'
p737
F0.0
sg20
(dp738
g22
g640
sg23
(dp739
g718
S'reference freq (Hz): I=I0 @ f=f0'
p740
sg719
S'major axis (arcsec)'
p741
sg720
S'if True, do NOT store solvegroup/parmgroup info'
p742
sg721
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p743
sg723
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p744
sg724
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p745
sg725
S'Stokes Q (percentage of I)'
p746
sg726
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p747
sg729
S'source shape'
p748
sg731
S'position angle (rad)'
p749
sg728
S'If True, attach to forest state record'
p750
sg34
S'name of the MeqParm table (AIPS++)'
p751
sg733
S'Intrinsic Rotation Measure (rad/m2)'
p752
sg734
S'Stokes U (percentage of I)'
p753
sg735
S'Declination (rad, J2000)'
p754
sg736
S'Stokes V (percentage of I)'
p755
sg737
S'minor axis (arcsec)'
p756
sg732
S'Right Ascension (rad, J2000)'
p757
ssg40
g41
sg42
S'MG_JEN_Sixpack'
p758
sg44
(dp759
g735
I40
sg721
I28
sg723
I32
sg725
I33
sg726
I27
sg724
I37
sg34
I30
sg732
I39
sg733
I36
sg734
I34
sg736
I35
ssg46
(dp760
g718
I01
sg719
I01
sg720
I01
sg721
I00
sg728
I01
sg726
I00
sg729
I01
sg731
I01
sg737
I01
sg722
I01
ssg48
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 21:15'
p761
sg50
S'10feb2006'
p762
sg606
(dp763
g721
S'*.lsm'
p764
ssg54
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p765
sg155
(dp766
g720
I00
sg728
I00
ssg56
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 21:15'
p767
sg58
(dp768
g718
(lp769
F1000000.0
aS'@@f0'
p770
asg719
(lp771
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p772
asg720
(lp773
I01
aI00
aS'@@unsolvable'
p774
asg721
(lp775
NaS'@@from_LSM'
p776
asg723
(lp777
F1.0
aF10.0
aS'@@I0'
p778
asg724
(lp779
NaF-0.69999999999999996
a(lp780
F0.44700000000000001
aF-0.184
aaS'@@SI'
p781
asg725
(lp782
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p783
asg726
(lp784
g727
aS'unpol2'
p785
aS'unpol10'
p786
aS'QUV'
p787
aS'QU'
p788
aS'Qonly'
p789
aS'Uonly'
p790
aS'Vonly'
p791
aS'3c147'
p792
aS'3c286'
p793
aS'3c48'
p794
aS'3c295'
p795
aS'RMtest'
p796
aS'SItest'
p797
aS'@@punit'
p798
asg728
(lp799
I01
aI00
aS'@@fsr_trace'
p800
asg729
(lp801
g730
aS'ell.gauss'
p802
aS'@@shape'
p803
asg731
(lp804
F0.0
aF1.0
aF-0.5
aS'@@pa'
p805
asg732
(lp806
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p807
asg34
(lp808
NaS'@@parmtable'
p809
asg733
(lp810
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p811
asg734
(lp812
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p813
asg735
(lp814
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p815
asg736
(lp816
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p817
asg737
(lp818
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p819
asg722
(lp820
NaS'@@name'
p821
assg97
Nsg98
S'2006-02-28 21:15'
p822
sg100
S'MG_JEN_Sixpack::newstar_source()'
p823
sg102
S'MG_JEN_Sixpacknewstar_source'
p824
sg104
S'newstar_source'
p825
sg106
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 21:15'
p826
sS'callback'
p827
(dp828
g726
I01
ssg108
I00
sg109
g822
sg116
(lp829
g20
ag726
ag721
ag722
ag34
ag720
ag723
ag725
ag734
ag736
ag733
ag724
ag718
ag732
ag735
ag728
ag729
ag719
ag737
ag731
asssg535
I00
sg9
g564
sg638
(dp830
S'channel_start_index'
p831
I10
sS'data_column_name'
p832
g665
sS'predict_column'
p833
S'CORRECTED_DATA'
p834
sg530
S'@@ms_name'
p835
sg20
(dp836
g22
g638
sg23
(dp837
g831
S'(inputrec.sel) index of first selected freq channel'
p838
sg832
S'(inputrec) MS input column'
p839
sg833
S'MS output column to be associated with the VisTile predict-column'
p840
sg530
g543
sg548
g549
sS'channel_increment'
p841
S'(inputrec.sel) take every nth channel (1=all)'
p842
sS'channel_end_index'
p843
S'(inputrec.sel) index of last selected freq channel'
p844
sS'write_flags'
p845
S'(outputrec) if True, write flags to MS'
p846
ssg40
g41
sg42
S'MG_JEN_exec'
p847
sg44
(dp848
g831
I18
sg832
I17
sg833
I22
sg845
I21
sg843
I19
sg841
I20
ssg46
(dp849
g530
I01
sg548
I01
ssg48
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 21:15'
p850
sg50
S'20jan2006'
p851
sg52
(dp852
g530
I00
sg548
I00
ssg54
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 21:15'
p853
sg155
(dp854
g845
I00
ssg56
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 21:15'
p855
sg58
(dp856
g831
(lp857
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p858
asg832
(lp859
g665
ag834
aS'@@data_column_name'
p860
asg833
(lp861
g665
ag834
aS'MODEL_DATA'
p862
aS'@@predict_column'
p863
asg530
(lp864
g531
ag835
asg548
(lp865
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p866
asg841
(lp867
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p868
asg843
(lp869
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p870
asg845
(lp871
I01
aI00
aS'@@write_flags'
p872
assg97
Nsg98
S'2006-02-28 21:15'
p873
sg100
S'MG_JEN_exec::stream_control()'
p874
sg102
S'MG_JEN_execstream_control'
p875
sg104
S'stream_control'
p876
sg106
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 21:15'
p877
sg606
(dp878
g530
g608
ssg108
I00
sg109
g873
sg110
(dp879
g114
S'.modify( tile_size ): @@tile_size  ->  1'
p880
ssg116
(lp881
g20
ag530
ag548
ag832
ag831
ag843
ag841
ag845
ag833
assg548
I1
sg841
I1
sg843
I50
sg845
I00
ssg539
I00
sg541
I01
sg544
I01
sg641
(dp882
S'correct_after'
p883
I01
sg535
S'@@master_reqseq'
p884
sS'condeq_unop'
p885
S'Arg'
p886
sg647
I01
sg539
S'@@redun'
p887
sS'solver_subtree'
p888
NsS'subtract_after'
p889
I00
sg544
S'@@chain_solvers'
p890
sg20
(dp891
g22
g641
sg23
(dp892
g883
S'if True, correct measured with predicted.Joneset'
p893
sg535
g536
sg885
S'Optional unary operation on Condeq inputs'
p894
sg647
S'if True, include full visualisation'
p895
sg539
g540
sg888
S'solver subtree qualifier(s)'
p896
sg889
S'if True, subtract predicted from measured'
p897
sg544
g545
sS'flag_residuals'
p898
S'if True, flag the residuals'
p899
sg546
g547
ssg40
g41
sg42
S'MG_JEN_Cohset'
p900
sg44
(dp901
g889
I139
sg883
I140
sg885
I137
sg647
I138
ssg46
(dp902
g535
I01
sg539
I01
sg888
I01
sg544
I01
sg898
I01
sg546
I01
ssg48
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 21:15'
p903
sg50
g268
sg52
(dp904
g546
I00
sg544
I00
sg539
I00
sg535
I00
ssg54
S'insert one or more solver subtrees in the data stream'
p905
sg155
(dp906
g883
I00
sg535
I00
sg647
I00
sg539
I00
sg889
I00
sg898
I00
ssg56
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 21:15'
p907
sg58
(dp908
g883
(lp909
I01
aI00
aS'@@correct_after'
p910
asg535
(lp911
I01
aI00
ag884
asg885
(lp912
NaS'Abs'
p913
ag886
aS'@@condeq_unop'
p914
asg647
(lp915
I01
aI00
aS'@@visu'
p916
asg539
(lp917
I01
aI00
ag887
asg888
(lp918
NaS'@@solver_subtree'
p919
asg889
(lp920
I01
aI00
aS'@@subtract_after'
p921
asg544
(lp922
I01
ag890
asg898
(lp923
I01
aI00
aS'@@flag_residuals'
p924
asg546
(lp925
Na(lp926
I5
aI2
aa(lp927
I2
aI2
aa(lp928
I3
aI3
aaS'@@num_cells'
p929
assg97
Nsg98
S'2006-02-28 21:15'
p930
sg100
S'MG_JEN_Cohset::insert_solver()'
p931
sg102
S'MG_JEN_Cohsetinsert_solver'
p932
sg104
S'insert_solver'
p933
sg106
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 21:15'
p934
sg108
I00
sg109
g930
sg110
(dp935
g112
S'.modify( condeq_unop ): None  ->  Arg'
p936
sg114
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p937
ssg116
(lp938
g20
ag888
ag539
ag546
ag544
ag535
ag885
ag647
ag889
ag883
ag898
aS'./MG_JEN_Cohset.solver_subtree()'
p939
assg546
g929
sg939
(dp940
S'rmin'
p941
Nsg647
I01
sS'epsilon'
p942
F0.0001
sS'rmax'
p943
NsS'usesvd'
p944
I01
sS'debug_level'
p945
I10
sS'solvegroup'
p946
(lp947
S'Gphase'
p948
asg20
(dp949
g22
g939
sg23
(dp950
g941
S'if specified, only use baselines>=rmin'
p951
sg647
S'if True, include visualisation'
p952
sg942
S'iteration control criterion'
p953
sg943
S'if specified, only use baselines<=rmax'
p954
sg944
S'if True, use Singular Value Decomposition (SVD)'
p955
sg945
S'solver debug_level'
p956
sg946
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p957
sg546
g547
sS'history'
p958
S'if True, include history collection of metrics'
p959
sS'num_iter'
p960
S'max number of iterations'
p961
sS'condition'
p962
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p963
sS'colin_factor'
p964
S'colinearity factor'
p965
ssg40
g41
sg42
S'MG_JEN_Cohset'
p966
sg44
(dp967
g941
I144
sg647
I152
sg942
I148
sg943
I145
sg944
I150
sg946
I142
sg546
I146
sg958
I153
sg960
I147
sg962
I143
sg964
I149
ssg46
(dp968
g945
I01
sg546
I00
ssg48
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 21:15'
p969
sg50
S'20dec2005'
p970
sg54
S'Make a solver-subtree for the given Condeq Cohset'
p971
sg155
(dp972
g944
I00
sg958
I00
sg647
I00
ssg56
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 21:15'
p973
sg58
(dp974
g941
(lp975
NaI100
aI200
aI500
aS'@@rmin'
p976
asg647
(lp977
I01
aI00
aS'@@visu'
p978
asg942
(lp979
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p980
asg943
(lp981
NaI500
aI1000
aI2000
aS'@@rmax'
p982
asg944
(lp983
I01
aI00
aS'@@usesvd'
p984
asg945
(lp985
I10
aS'@@debug_level'
p986
asg946
(lp987
(lp988
a(lp989
g283
aa(lp990
S'Ggain'
p991
aa(lp992
g948
aa(lp993
S'Gpol1'
p994
aa(lp995
S'Gpol2'
p996
aa(lp997
g291
aa(lp998
g291
aS'stokesU'
p999
aa(lp1000
g291
aS'stokesQ'
p1001
aa(lp1002
g291
aS'stokesV'
p1003
aa(lp1004
S'stokesQU'
p1005
ag291
aa(lp1006
S'stokesQUV'
p1007
ag291
aa(lp1008
g283
aS'stokesI'
p1009
aa(lp1010
g1009
aa(lp1011
S'stokesIQU'
p1012
aa(lp1013
S'stokesIQUV'
p1014
aa(lp1015
S'stokesIV'
p1016
aa(lp1017
g1005
aa(lp1018
g1007
aa(lp1019
g283
aS'DJones'
p1020
aa(lp1021
g1020
aa(lp1022
S'Dang'
p1023
aa(lp1024
S'Dell'
p1025
aa(lp1026
S'Dreal'
p1027
aa(lp1028
S'Dimag'
p1029
aa(lp1030
g283
ag1020
ag248
aa(lp1031
g248
aa(lp1032
g283
ag95
aa(lp1033
g95
aa(lp1034
S'Breal'
p1035
aa(lp1036
S'Bimag'
p1037
aa(lp1038
S'Bpol1'
p1039
aa(lp1040
S'Bpol2'
p1041
aaS'@@solvegroup'
p1042
asg546
(lp1043
Na(lp1044
I5
aI2
aa(lp1045
I2
aI2
aa(lp1046
I3
aI3
aaS'@@num_cells'
p1047
asg958
(lp1048
I01
aI00
aS'@@history'
p1049
asg960
(lp1050
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1051
asg962
(lp1052
NaS'Gphase_X_sum=0.0'
p1053
aS'Gphase_Y_sum=0.0'
p1054
a(lp1055
g1053
ag1054
aa(lp1056
S'Gphase_X_first=0.0'
p1057
aS'Gphase_Y_first=0.0'
p1058
aa(lp1059
S'Gphase_X_last=0.0'
p1060
aS'Gphase_Y_last=0.0'
p1061
aaS'Dang_sum=0.0'
p1062
a(lp1063
S'Bimag_X_sum=0.0'
p1064
aS'Bimag_Y_sum=0.0'
p1065
aa(lp1066
S'Breal_X_product=1.0'
p1067
aS'Breal_Y_product=1.0'
p1068
aaS'@@condition'
p1069
asg964
(lp1070
F1e-08
aF0.0
aS'@@colin_factor'
p1071
assg97
Nsg98
S'2006-02-28 21:15'
p1072
sg100
S'MG_JEN_Cohset::solver_subtree()'
p1073
sg102
S'MG_JEN_Cohsetsolver_subtree'
p1074
sg104
S'solver_subtree'
p1075
sg106
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 21:15'
p1076
sg108
I00
sg109
g1072
sg110
(dp1077
g114
S".modify( solvegroup ): []  ->  ['Gphase']"
p1078
ssg116
(lp1079
g20
ag946
ag962
ag941
ag943
ag546
ag960
ag942
ag964
ag944
ag945
ag647
ag958
assg546
Nsg958
I01
sg960
I20
sg962
Nsg964
F1e-08
ssg898
I00
ss.