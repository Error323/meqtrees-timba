(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stddev_Breal'
p7
F0.0
sg1
S'@@polrep'
p8
sS'stations'
p9
S'@@stations'
p10
sS'c00_Bimag'
p11
F0.0
sS'subtile_size_Bimag'
p12
NsS'fdeg_Breal'
p13
I5
sS'tdeg_Breal'
p14
I0
sS'fdeg_Bimag'
p15
S'@fdeg_Breal'
p16
sS'uvplane_effect'
p17
S'@@uvplane_effect'
p18
sS'subtile_size_Breal'
p19
NsS'_JEN_inarg_CTRL_record:'
p20
(dp21
S'localscope'
p22
g5
sS'help'
p23
(dp24
g7
S'scatter in default c00 funklet values'
p25
sg1
S'polarisation representation'
p26
sg9
S'the (subset of) stations to be used'
p27
sg11
S'default c00 funklet value'
p28
sg12
S'sub-tile size (None=entire tile)'
p29
sg13
S'degree of freq polynomial'
p30
sg14
S'degree of time polynomial'
p31
sg15
g30
sg17
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p32
sg19
g29
sS'c00_Breal'
p33
g28
sS'parmtable'
p34
S'name of the MeqParm table to be used'
p35
sS'tdeg_Bimag'
p36
g31
sS'stddev_Bimag'
p37
g25
sS'@Jsequence'
p38
S'list membership indication (used in JEN_inargGui)'
p39
ssS'target_dir'
p40
S'.'
p41
sS'target_module'
p42
S'MG_JEN_Joneset'
p43
sS'JEN_inargGUI_ident'
p44
(dp45
g13
I84
sg12
I87
sg14
I82
sg15
I85
sg19
I86
sg36
I83
ssS'hide'
p46
(dp47
g1
I01
sg9
I01
sg11
I01
sg37
I01
sg17
I01
sg34
I01
sg33
I01
sg7
I01
sg38
I01
ssS'generic'
p48
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-10 16:09'
p49
sS'version'
p50
S'16dec2005'
p51
sS'mutable'
p52
(dp53
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssS'description'
p54
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p55
sS'oneliner'
p56
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-10 16:09'
p57
sS'choice'
p58
(dp59
g7
(lp60
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p61
asg1
(lp62
g2
aS'circular'
p63
ag8
asg9
(lp64
(lp65
I0
aI1
aI2
aI3
aI4
aa(lp66
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp67
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp68
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p69
ag10
asg11
(lp70
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p71
asg12
(lp72
S'@subtile_size_Breal'
p73
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p74
asg13
(lp75
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p76
asg14
(lp77
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p78
asg15
(lp79
I3
aI4
aI5
aI6
ag16
aS'@@fdeg_Bimag'
p80
asg17
(lp81
I00
ag18
asg19
(lp82
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p83
asg33
(lp84
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p85
asg34
(lp86
NaS'test'
p87
aS'@@parmtable'
p88
asg36
(lp89
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p90
aS'@@tdeg_Bimag'
p91
asg37
(lp92
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p93
asg38
(lp94
S'BJones'
p95
aS'@@@Jsequence'
p96
assS'qual'
p97
NsS'last_edited'
p98
S'2006-03-10 16:09'
p99
sS'target_definition'
p100
S'MG_JEN_Joneset::BJones()'
p101
sS'barescope'
p102
S'MG_JEN_JonesetBJones'
p103
sS'target_function'
p104
S'BJones'
p105
sS'specific'
p106
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-10 16:09'
p107
sS'protected'
p108
I00
sS'datetime_defined'
p109
g99
sS'MESSAGE'
p110
(dp111
S'1'
p112
S'.modify( tdeg_Bimag ): @tdeg_Breal  ->  0'
p113
sS'0'
p114
S'.modify( subtile_size_Bimag ): @subtile_size_Breal  ->  None'
p115
ssS'order'
p116
(lp117
g20
ag9
ag1
ag38
ag34
ag17
ag14
ag36
ag13
ag15
ag19
ag12
ag33
ag11
ag7
ag37
assg34
g88
sg36
I0
sg37
F0.0
sg33
F1.0
sg38
g95
ssg1
S'@@polrep'
p118
sg9
S'@@stations'
p119
sS'./MG_JEN_Joneset.DJones_WSRT()'
p120
(dp121
S'fdeg_Dang'
p122
I0
sS'c00_Dang'
p123
F0.0
sg1
S'@@polrep'
p124
sS'stddev_Dell'
p125
F0.0
sg9
S'@@stations'
p126
sS'fdeg_Dell'
p127
S'@fdeg_Dang'
p128
sS'coupled_XY_Dell'
p129
I01
sS'stddev_Dang'
p130
F0.0
sg17
S'@@uvplane_effect'
p131
sg34
S'@@parmtable'
p132
sg20
(dp133
g22
g120
sg23
(dp134
g122
S'degree of freq polynomial'
p135
sg123
S'default c00 funklet value'
p136
sg1
g26
sg125
S'scatter in default c00 funklet values'
p137
sg9
g27
sg127
g135
sg129
S'if True, XDell = -YDell per station'
p138
sg130
g137
sg17
g32
sg34
g35
sS'tdeg_Dell'
p139
S'degree of time polynomial'
p140
sS'c00_Dell'
p141
g136
sS'coupled_XY_Dang'
p142
S'if True, XDang = YDang per station'
p143
sS'c00_PZD'
p144
g136
sS'subtile_size_Dang'
p145
S'sub-tile size (None=entire tile)'
p146
sS'subtile_size_Dell'
p147
g146
sS'tdeg_Dang'
p148
g140
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p149
sg44
(dp150
g122
I104
sg127
I105
sg129
I99
sg139
I103
sg142
I98
sg145
I106
sg147
I107
sg148
I102
ssg46
(dp151
g123
I01
sg1
I01
sg125
I01
sg9
I01
sg141
I01
sg130
I01
sg17
I01
sg34
I01
sg144
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-10 16:09'
p152
sg50
g51
sg52
(dp153
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p154
sS'editable'
p155
(dp156
g142
I00
sg129
I00
ssg56
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-10 16:09'
p157
sg58
(dp158
g122
(lp159
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p160
asg123
(lp161
F0.0
aF0.10000000000000001
aS'@@c00_Dang'
p162
asg1
(lp163
g2
ag63
ag124
asg125
(lp164
F0.0
aF0.10000000000000001
aS'@@stddev_Dell'
p165
asg9
(lp166
(lp167
I0
aI1
aI2
aI3
aI4
aa(lp168
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp169
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp170
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag126
asg127
(lp171
I0
aI1
aI2
aI3
ag128
aS'@@fdeg_Dell'
p172
asg129
(lp173
I01
aI00
aS'@@coupled_XY_Dell'
p174
asg130
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_Dang'
p176
asg17
(lp177
I00
ag131
asg34
(lp178
Nag87
ag132
asg139
(lp179
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p180
aS'@@tdeg_Dell'
p181
asg141
(lp182
F0.0
aF0.10000000000000001
aS'@@c00_Dell'
p183
asg142
(lp184
I01
aI00
aS'@@coupled_XY_Dang'
p185
asg144
(lp186
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p187
asg145
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p189
asg147
(lp190
S'@subtile_size_Dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p192
asg148
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p194
asg38
(lp195
S'DJones_WSRT'
p196
aS'@@@Jsequence'
p197
assg97
Nsg98
S'2006-03-10 16:09'
p198
sg100
S'MG_JEN_Joneset::DJones_WSRT()'
p199
sg102
S'MG_JEN_JonesetDJones_WSRT'
p200
sg104
S'DJones_WSRT'
p201
sg106
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-10 16:09'
p202
sg108
I00
sg109
g198
sg110
(dp203
g112
S'.modify( tdeg_Dell ): @tdeg_Dang  ->  0'
p204
sg114
S'.modify( subtile_size_Dell ): @subtile_size_Dang  ->  None'
p205
ssg116
(lp206
g20
ag9
ag1
ag38
ag142
ag129
ag34
ag17
ag148
ag139
ag122
ag127
ag145
ag147
ag123
ag141
ag144
ag130
ag125
assg139
I0
sg141
F0.0
sg142
I01
sg144
F0.0
sg145
Nsg147
Nsg148
I0
sg38
g196
ssS'./MG_JEN_Joneset.FJones()'
p207
(dp208
S'c00_RM'
p209
F0.0
sg1
S'@@polrep'
p210
sg9
S'@@stations'
p211
sS'tdeg_RM'
p212
I0
sS'fdeg_RM'
p213
I2
sg34
S'@@parmtable'
p214
sg20
(dp215
g22
g207
sg23
(dp216
g209
S'default c00 funklet value'
p217
sg1
g26
sg17
g32
sg212
S'degree of time polynomial'
p218
sg9
g27
sg213
S'degree of freq polynomial'
p219
sg34
g35
sS'subtile_size_RM'
p220
S'sub-tile size (None=entire tile)'
p221
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p222
sg44
(dp223
g213
I74
sg220
I75
sg212
I73
ssg46
(dp224
g209
I01
sg1
I01
sg9
I01
sg17
I01
sg34
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-10 16:09'
p225
sg50
g51
sg52
(dp226
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'defines diagonal FJones Faraday rotation matrices'
p227
sg56
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-10 16:09'
p228
sg58
(dp229
g209
(lp230
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p231
asg1
(lp232
g2
ag63
ag210
asg17
(lp233
I00
aS'@@uvplane_effect'
p234
asg212
(lp235
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p236
asg9
(lp237
(lp238
I0
aI1
aI2
aI3
aI4
aa(lp239
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp240
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp241
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag211
asg213
(lp242
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p243
asg34
(lp244
Nag87
ag214
asg220
(lp245
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p246
asg38
(lp247
S'FJones'
p248
aS'@@@Jsequence'
p249
assg97
Nsg98
S'2006-03-10 16:09'
p250
sg100
S'MG_JEN_Joneset::FJones()'
p251
sg102
S'MG_JEN_JonesetFJones'
p252
sg104
S'FJones'
p253
sg106
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-10 16:09'
p254
sg108
I00
sg109
g250
sg110
(dp255
g114
S'.modify( subtile_size_RM ): 1  ->  None'
p256
ssg116
(lp257
g20
ag9
ag1
ag38
ag34
ag17
ag212
ag213
ag220
ag209
assg220
Nsg17
g234
sg38
g248
ssg17
S'@@uvplane_effect'
p258
sg34
S'@@parmtable'
p259
sg20
(dp260
g22
g3
sg23
(dp261
g1
g26
sg9
g27
sg17
g32
sg34
g35
sS'Jsequence'
p262
S'sequence of Jones matrices to be used'
p263
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Cohset'
p264
sg44
(dp265
g262
I51
ssg46
(dp266
g17
I01
sg9
I01
sg34
I01
sg1
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-10 16:09'
p267
sg50
S'25dec2005'
p268
sg52
(dp269
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p270
sg56
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-10 16:09'
p271
sg58
(dp272
g1
(lp273
g2
ag63
ag118
asg9
(lp274
(lp275
I0
aI1
aI2
aI3
aI4
aa(lp276
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp277
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp278
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag119
asg17
(lp279
I00
ag258
asg34
(lp280
Nag87
ag259
asg262
(lp281
(lp282
S'GJones'
p283
aa(lp284
g95
aa(lp285
g248
aa(lp286
S'KJones'
p287
aa(lp288
g196
aa(lp289
g283
ag196
aa(lp290
S'JJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg38
(lp294
NaS'@@@Jsequence'
p295
assg97
Nsg98
S'2006-03-10 16:09'
p296
sg100
S'MG_JEN_Cohset::Jones()'
p297
sg102
S'MG_JEN_CohsetJones'
p298
sg104
S'Jones'
p299
sg106
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-10 16:09'
p300
sg108
I00
sg109
g296
sg110
(dp301
g112
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p302
sg114
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p303
sS'3'
p304
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p305
sS'2'
p306
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p307
sS'5'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p309
sS'4'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p311
sS'6'
p312
S".modify( Jsequence ): []  ->  ['GJones']"
p313
ssg116
(lp314
g20
ag9
ag1
ag38
ag34
ag17
ag262
aS'./MG_JEN_Joneset.GJones()'
p315
ag207
ag5
aS'./MG_JEN_Joneset.KJones()'
p316
ag120
aS'./MG_JEN_Joneset.JJones()'
p317
assg316
(dp318
g38
g287
sg1
S'@@polrep'
p319
sg20
(dp320
g100
S'MG_JEN_Joneset::KJones()'
p321
sg22
g316
sg98
S'2006-03-10 16:09'
p322
sg46
(dp323
g38
I01
sg1
I01
sg9
I01
ssg102
S'MG_JEN_JonesetKJones'
p324
sg48
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-10 16:09'
p325
sg40
g41
sg56
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-10 16:09'
p326
sg104
S'KJones'
p327
sg58
(dp328
g38
(lp329
g287
aS'@@@Jsequence'
p330
asg1
(lp331
g2
ag63
ag319
asg9
(lp332
(lp333
I0
aI1
aI2
aI3
aI4
aa(lp334
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp335
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp336
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
aS'@@stations'
p337
assg106
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-10 16:09'
p338
sg97
Nsg50
S'12dec2005'
p339
sg44
(dp340
sg109
g322
sg42
S'MG_JEN_Joneset'
p341
sg52
(dp342
g1
I00
sg9
I00
ssg108
I00
sg116
(lp343
g20
ag9
ag1
ag38
asg23
(dp344
g38
g39
sg1
g26
sg9
g27
ssg54
S'defines diagonal KJones matrices for DFT Fourier kernel'
p345
ssg9
g337
ssg317
(dp346
S'subtile_size_Jimag'
p347
NsS'tdeg_Jimag'
p348
I0
sg1
S'@@polrep'
p349
sS'tdeg_Jreal'
p350
I0
sg9
S'@@stations'
p351
sS'diagonal_only'
p352
I00
sS'subtile_size_Jreal'
p353
NsS'c00_Jreal'
p354
F1.0
sg17
S'@@uvplane_effect'
p355
sS'c00_Jimag'
p356
F0.0
sg34
S'@@parmtable'
p357
sS'stddev_Jimag'
p358
F0.0
sg20
(dp359
g22
g317
sg23
(dp360
g347
S'sub-tile size (None=entire tile)'
p361
sS'fdeg_Jreal'
p362
S'degree of freq polynomial'
p363
sg348
S'degree of time polynomial'
p364
sg1
g26
sg350
g364
sg9
g27
sg352
S'if True, assume that the non-diagonal elements are zero'
p365
sg354
S'default c00 funklet value'
p366
sg17
g32
sg356
g366
sg34
g35
sS'fdeg_Jimag'
p367
g363
sg353
g361
sg358
S'scatter in default c00 funklet values'
p368
sS'stddev_Jreal'
p369
g368
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p370
sg44
(dp371
g347
I124
sg348
I120
sg350
I119
sg352
I116
sg367
I122
sg353
I123
sg362
I121
ssg46
(dp372
g1
I01
sg9
I01
sg356
I01
sg354
I01
sg17
I01
sg34
I01
sg369
I01
sg358
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-10 16:09'
p373
sg50
S'14feb2006'
p374
sg52
(dp375
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p376
sg155
(dp377
g352
I00
ssg56
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-10 16:09'
p378
sg58
(dp379
g347
(lp380
S'@subtile_size_Jreal'
p381
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p382
asg362
(lp383
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p384
asg348
(lp385
I0
aI1
aI2
aI3
aS'@tdeg_Jreal'
p386
aS'@@tdeg_Jimag'
p387
asg1
(lp388
g2
ag63
ag349
asg350
(lp389
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p390
asg9
(lp391
(lp392
I0
aI1
aI2
aI3
aI4
aa(lp393
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp394
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp395
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag351
asg352
(lp396
I01
aI00
aS'@@diagonal_only'
p397
asg354
(lp398
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Jreal'
p399
asg17
(lp400
I00
ag355
asg356
(lp401
F0.0
aF0.10000000000000001
aS'@@c00_Jimag'
p402
asg34
(lp403
Nag87
ag357
asg367
(lp404
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p405
aS'@@fdeg_Jimag'
p406
asg353
(lp407
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p408
asg358
(lp409
F0.0
aF0.10000000000000001
aS'@@stddev_Jimag'
p410
asg369
(lp411
F0.0
aF0.10000000000000001
aS'@@stddev_Jreal'
p412
asg38
(lp413
g291
aS'@@@Jsequence'
p414
assg97
Nsg98
S'2006-03-10 16:09'
p415
sg100
S'MG_JEN_Joneset::JJones()'
p416
sg102
S'MG_JEN_JonesetJJones'
p417
sg104
S'JJones'
p418
sg106
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-10 16:09'
p419
sg108
I00
sg109
g415
sg110
(dp420
g112
S'.modify( tdeg_Jimag ): @tdeg_Jreal  ->  0'
p421
sg114
S'.modify( subtile_size_Jimag ): @subtile_size_Jreal  ->  None'
p422
ssg116
(lp423
g20
ag9
ag1
ag38
ag352
ag34
ag17
ag350
ag348
ag362
ag367
ag353
ag347
ag354
ag356
ag369
ag358
assg38
g291
sg369
F0.0
sg367
g405
sg362
I0
ssg315
(dp424
g1
S'@@polrep'
p425
sS'fdeg_Ggain'
p426
I0
sS'c00_Gphase'
p427
F0.0
sg38
g283
sS'subtile_size_Ggain'
p428
NsS'tdeg_Gphase'
p429
I0
sg9
S'@@stations'
p430
sS'tdeg_Ggain'
p431
I0
sS'fdeg_Gphase'
p432
S'@fdeg_Ggain'
p433
sg34
S'@@parmtable'
p434
sS'stddev_Ggain'
p435
F0.0
sS'subtile_size_Gphase'
p436
NsS'c00_Ggain'
p437
F1.0
sS'stddev_Gphase'
p438
F0.0
sS'Gpolar'
p439
I00
sg17
S'@@uvplane_effect'
p440
sg20
(dp441
g22
g315
sg23
(dp442
g1
g26
sg9
g27
sg426
S'degree of freq polynomial'
p443
sg427
S'default c00 funklet value'
p444
sg428
S'sub-tile size (None=entire tile)'
p445
sg429
S'degree of time polynomial'
p446
sg431
g446
sg432
g443
sg34
g35
sg435
S'scatter in default c00 funklet values'
p447
sg436
g445
sg437
g444
sg438
g447
sg439
S'if True, use MeqPolar, otherwise MeqToComplex'
p448
sg17
g32
sg38
g39
ssg40
g41
sg42
S'MG_JEN_Joneset'
p449
sg44
(dp450
g426
I60
sg428
I62
sg429
I59
sg431
I58
sg432
I61
sg436
I63
sg439
I55
ssg46
(dp451
g1
I01
sg9
I01
sg435
I01
sg427
I01
sg17
I01
sg34
I01
sg437
I01
sg438
I01
sg38
I01
ssg48
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-10 16:09'
p452
sg50
S'15dec2005'
p453
sg52
(dp454
g17
I00
sg34
I00
sg1
I00
sg9
I00
ssg54
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p455
sg155
(dp456
g439
I00
ssg56
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-10 16:09'
p457
sg58
(dp458
g1
(lp459
g2
ag63
ag425
asg9
(lp460
(lp461
I0
aI1
aI2
aI3
aI4
aa(lp462
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp463
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp464
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag430
asg426
(lp465
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p466
asg427
(lp467
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p468
asg428
(lp469
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p470
asg429
(lp471
I0
aI1
aI2
aI3
aS'@tdeg_Ggain'
p472
aS'@@tdeg_Gphase'
p473
asg431
(lp474
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p475
asg432
(lp476
I0
aI1
aI2
aI3
ag433
aS'@@fdeg_Gphase'
p477
asg34
(lp478
Nag87
ag434
asg435
(lp479
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p480
asg436
(lp481
S'@subtile_size_Ggain'
p482
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p483
asg437
(lp484
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p485
asg438
(lp486
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p487
asg439
(lp488
I01
aI00
aS'@@Gpolar'
p489
asg17
(lp490
I00
ag440
asg38
(lp491
g283
aS'@@@Jsequence'
p492
assg97
Nsg98
S'2006-03-10 16:09'
p493
sg100
S'MG_JEN_Joneset::GJones()'
p494
sg102
S'MG_JEN_JonesetGJones'
p495
sg104
S'GJones'
p496
sg106
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-10 16:09'
p497
sg108
I00
sg109
g493
sg110
(dp498
g112
S'.modify( subtile_size_Gphase ): @subtile_size_Ggain  ->  None'
p499
sg114
S'.modify( subtile_size_Ggain ): 1  ->  None'
p500
sg306
S'.modify( tdeg_Gphase ): @tdeg_Ggain  ->  0'
p501
ssg116
(lp502
g20
ag9
ag1
ag38
ag439
ag34
ag17
ag431
ag429
ag426
ag432
ag428
ag436
ag437
ag427
ag435
ag438
asssg262
(lp503
g283
asg38
NssS'./MG_JEN_Cohset.predict()'
p504
(dp505
g9
S'@@stations'
p506
sg1
S'@@polrep'
p507
sg20
(dp508
g100
S'MG_JEN_Cohset::predict()'
p509
sg22
g504
sg44
(dp510
sg46
(dp511
g9
I01
sg1
I01
sg38
I01
ssg102
S'MG_JEN_Cohsetpredict'
p512
sg48
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-10 16:09'
p513
sg40
g41
sg54
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p514
sg56
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-10 16:09'
p515
sg104
S'predict'
p516
sg58
(dp517
g9
(lp518
(lp519
I0
aI1
aI2
aI3
aI4
aa(lp520
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp521
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp522
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
ag506
asg1
(lp523
g2
ag63
ag507
asg38
(lp524
NaS'@@@Jsequence'
p525
assg106
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-10 16:09'
p526
sg97
Nsg50
g268
sg109
S'2006-03-10 16:09'
p527
sg42
S'MG_JEN_Cohset'
p528
sg52
(dp529
g1
I00
sg9
I00
ssg108
I00
sg98
g527
sg116
(lp530
g20
ag9
ag1
ag38
asg23
(dp531
g9
g27
sg1
g26
sg38
g39
sssg38
NssS'script_name'
p532
S'MG_JEN_cps'
p533
sS'ms_name'
p534
S'D1.MS'
p535
sg34
Nsg20
(dp536
g22
S'./MG_JEN_cps.'
p537
sg23
(dp538
g1
g26
sS'master_reqseq'
p539
S'if True, use a master reqseq for solver(s)'
p540
sg9
g27
sS'insert_flagger'
p541
S'if True, insert a flagger'
p542
sS'redun'
p543
S'if True, redundant spacing calibration'
p544
sS'insert_solver'
p545
S'if True, insert a solver'
p546
sg534
S'name of the (AIPS++) Measurement Set'
p547
sS'chain_solvers'
p548
S'if True, chain the solvers (recommended)'
p549
sS'num_cells'
p550
S'if defined, ModRes argument [ntime,nfreq]'
p551
sg34
g35
sS'tile_size'
p552
S'(inputrec) size (in time-slots) of the input data-tile'
p553
sg17
g32
sg38
g39
ssS'reference'
p554
I00
sg40
g41
sg42
S'MG_JEN_cps'
p555
sg44
(dp556
g1
I7
sg9
I6
sg541
I2
sg543
I13
sg545
I1
sg534
I4
sg34
I9
sg532
I0
sg550
I14
sg552
I5
sg17
I10
ssg46
(dp557
g1
I00
sg539
I01
sg9
I00
sS'last_changed'
p558
I01
sg543
I00
sg17
I00
sg548
I01
sg550
I00
sg38
I01
ssg48
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p559
sg50
g453
sg54
g559
sg155
(dp560
g558
I00
sg541
I00
sg539
I00
sg545
I00
sg543
I00
ssg56
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p561
sg58
(dp562
g1
(lp563
g2
ag63
aS'@@polrep'
p564
asg539
(lp565
I01
aI00
aS'@@master_reqseq'
p566
asg9
(lp567
(lp568
I0
aI1
aI2
aI3
aI4
aa(lp569
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp570
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp571
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag69
aS'@@stations'
p572
asg541
(lp573
I01
aI00
aS'@@insert_flagger'
p574
asg558
(lp575
S'd30jan2006'
p576
aS'@@last_changed'
p577
asg545
(lp578
I01
aI00
aS'@@insert_solver'
p579
asg543
(lp580
I01
aI00
aS'@@redun'
p581
asg534
(lp582
g535
aS'@@ms_name'
p583
asg548
(lp584
I01
aS'@@chain_solvers'
p585
asg550
(lp586
Na(lp587
I5
aI2
aa(lp588
I2
aI2
aa(lp589
I3
aI3
aaS'@@num_cells'
p590
asg34
(lp591
Nag87
aS'@@parmtable'
p592
asg552
(lp593
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p594
asg17
(lp595
I00
aS'@@uvplane_effect'
p596
asg38
(lp597
NaS'@@@Jsequence'
p598
assg98
S'2006-03-10 16:09'
p599
sS'HISTORY'
p600
(dp601
g112
S'2006-03-10 16:10: Derived from: MG_JEN_cps_Gphase.inarg'
p602
sg114
S'2006-03-10 16:10: Derived from: MG_JEN_cps.inarg'
p603
ssg100
g533
sS'save_file'
p604
S'MG_JEN_cps_Gphase_protected.inarg'
p605
sS'file_filter'
p606
S'MG_JEN_cps*.inarg'
p607
sg104
S''
p608
sg106
S'<specific>'
p609
sS'browse'
p610
(dp611
g534
S'*.MS'
p612
ssg108
I01
sg109
g599
sg110
(dp613
S'11'
p614
S".modify():   ** OK ** (['tile_size', 'num_iter', 'epsilon'])"
p615
sS'10'
p616
S'.modify( tile_size ): 10  ->  1'
p617
sS'12'
p618
S".modify():   ** OK ** (['subtile_size_', 'tdeg_'])"
p619
sg112
S".modify():   ** OK ** (['uvplane_effect'])"
p620
sg114
S'.modify( uvplane_effect ): False  ->  True'
p621
sg304
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p622
sg306
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p623
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p624
sg310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p625
sS'7'
p626
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p627
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p628
sS'9'
p629
S".modify():   ** OK ** (['solvegroup', 'Jsequence', 'condeq_unop'])"
p630
sS'8'
p631
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p632
ssg116
(lp633
g20
ag532
ag545
ag541
ag558
ag534
ag552
ag9
ag1
ag38
ag34
ag17
ag548
ag539
ag543
ag550
aS'./MG_JEN_exec.stream_control()'
p634
aS'./MG_JEN_Cohset.make_spigots()'
p635
aS'./MG_JEN_Sixpack.newstar_source()'
p636
ag3
ag504
aS'./MG_JEN_Cohset.insert_solver()'
p637
aS'./MG_JEN_Cohset.make_sinks()'
p638
assg638
(dp639
S'fullDomainMux'
p640
I01
sS'output_col'
p641
S'PREDICT'
p642
sS'visu'
p643
I01
sS'flag'
p644
I00
sg20
(dp645
g100
S'MG_JEN_Cohset::make_sinks()'
p646
sg22
g638
sg44
(dp647
g644
I160
sg643
I159
sg640
I161
sg641
I157
sS'visu_array_config'
p648
I158
ssg102
S'MG_JEN_Cohsetmake_sinks'
p649
sg48
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-10 16:09'
p650
sg40
g41
sg54
S'Make sink nodes in the given Cohset object'
p651
sg56
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-10 16:09'
p652
sg104
S'make_sinks'
p653
sg58
(dp654
g644
(lp655
I01
aI00
aS'@@flag'
p656
asg648
(lp657
I01
aI00
aS'@@visu_array_config'
p658
asg641
(lp659
g642
aS'RESIDUALS'
p660
aS'DATA'
p661
aS'@@output_col'
p662
asg640
(lp663
I01
aI00
aS'@@fullDomainMux'
p664
asg643
(lp665
I01
aI00
aS'@@visu'
p666
assg106
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-10 16:09'
p667
sg97
Nsg50
g268
sg109
S'2006-03-10 16:09'
p668
sg42
S'MG_JEN_Cohset'
p669
sg155
(dp670
g644
I00
sg648
I00
sg640
I00
sg643
I00
ssg108
I00
sg98
g668
sg116
(lp671
g20
ag641
ag648
ag643
ag644
ag640
asg23
(dp672
g644
S'if True, insert a flagger for the output uv-data'
p673
sg648
S'if True, visualise the array config (from MS)'
p674
sg641
S'name of the logical (VisTile) output column'
p675
sg640
S'if True, attach an extra VisDataMux'
p676
sg643
S'if True, visualise the output uv-data'
p677
sssg648
I01
ssg552
I1
sg635
(dp678
S'MS_corr_index'
p679
(lp680
I0
aI1
aI2
aI3
asg644
I00
sg20
(dp681
g100
S'MG_JEN_Cohset::make_spigots()'
p682
sg22
g635
sg44
(dp683
g644
I26
sg679
I24
sg643
I25
ssg46
(dp684
S'input_col'
p685
I01
ssg102
S'MG_JEN_Cohsetmake_spigots'
p686
sg48
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-10 16:09'
p687
sg40
g41
sg54
S'Make spigot nodes in the given Cohset object'
p688
sg56
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-10 16:09'
p689
sg104
S'make_spigots'
p690
sg58
(dp691
g644
(lp692
I01
aI00
aS'@@flag'
p693
asg679
(lp694
(lp695
I0
aI1
aI2
aI3
aa(lp696
I0
aI-1
aI-1
aI1
aa(lp697
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p698
asg685
(lp699
g661
ag642
ag660
aS'@@input_col'
p700
asg643
(lp701
I01
aI00
aS'@@visu'
p702
assg106
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-10 16:09'
p703
sg97
Nsg50
g268
sg109
S'2006-03-10 16:09'
p704
sg42
S'MG_JEN_Cohset'
p705
sg155
(dp706
g644
I00
sg643
I00
ssg108
I00
sg98
g704
sg116
(lp707
g20
ag685
ag679
ag643
ag644
asg23
(dp708
g644
S'if True, insert a flagger for the input uv-data'
p709
sg679
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p710
sg685
S'name of the logical (VisTile) input column'
p711
sg643
S'if True, visualise the input uv-data'
p712
sssg685
g661
sg643
I01
ssg38
Nsg541
I00
sg558
g576
sg17
I01
sg550
Nsg636
(dp713
S'f0'
p714
F1000000.0
sS'major'
p715
F0.0
sS'unsolvable'
p716
I00
sS'from_LSM'
p717
NsS'name'
p718
NsS'I0'
p719
F1.0
sS'SI'
p720
NsS'Qpct'
p721
NsS'punit'
p722
S'unpol'
p723
sS'fsr_trace'
p724
I01
sS'shape'
p725
S'point'
p726
sS'pa'
p727
F0.0
sS'RA'
p728
F4.3570000000000002
sg34
NsS'RM'
p729
NsS'Upct'
p730
NsS'Dec'
p731
F1.0920000000000001
sS'Vpct'
p732
NsS'minor'
p733
F0.0
sg20
(dp734
g22
g636
sg23
(dp735
g714
S'reference freq (Hz): I=I0 @ f=f0'
p736
sg715
S'major axis (arcsec)'
p737
sg716
S'if True, do NOT store solvegroup/parmgroup info'
p738
sg717
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p739
sg719
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p740
sg720
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p741
sg721
S'Stokes Q (percentage of I)'
p742
sg722
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p743
sg725
S'source shape'
p744
sg727
S'position angle (rad)'
p745
sg724
S'If True, attach to forest state record'
p746
sg34
S'name of the MeqParm table (AIPS++)'
p747
sg729
S'Intrinsic Rotation Measure (rad/m2)'
p748
sg730
S'Stokes U (percentage of I)'
p749
sg731
S'Declination (rad, J2000)'
p750
sg732
S'Stokes V (percentage of I)'
p751
sg733
S'minor axis (arcsec)'
p752
sg728
S'Right Ascension (rad, J2000)'
p753
ssg40
g41
sg42
S'MG_JEN_Sixpack'
p754
sg44
(dp755
g731
I40
sg717
I28
sg719
I32
sg721
I33
sg722
I27
sg720
I37
sg34
I30
sg728
I39
sg729
I36
sg730
I34
sg732
I35
ssg46
(dp756
g714
I01
sg715
I01
sg716
I01
sg717
I00
sg724
I01
sg722
I00
sg725
I01
sg727
I01
sg733
I01
sg718
I01
ssg48
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-10 16:09'
p757
sg50
S'10feb2006'
p758
sg610
(dp759
g717
S'*.lsm'
p760
ssg54
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p761
sg155
(dp762
g716
I00
sg724
I00
ssg56
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-10 16:09'
p763
sg58
(dp764
g714
(lp765
F1000000.0
aS'@@f0'
p766
asg715
(lp767
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p768
asg716
(lp769
I01
aI00
aS'@@unsolvable'
p770
asg717
(lp771
NaS'@@from_LSM'
p772
asg719
(lp773
F1.0
aF10.0
aS'@@I0'
p774
asg720
(lp775
NaF-0.69999999999999996
a(lp776
F0.44700000000000001
aF-0.184
aaS'@@SI'
p777
asg721
(lp778
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p779
asg722
(lp780
g723
aS'unpol2'
p781
aS'unpol10'
p782
aS'QUV'
p783
aS'QU'
p784
aS'Qonly'
p785
aS'Uonly'
p786
aS'Vonly'
p787
aS'3c147'
p788
aS'3c286'
p789
aS'3c48'
p790
aS'3c295'
p791
aS'RMtest'
p792
aS'SItest'
p793
aS'@@punit'
p794
asg724
(lp795
I01
aI00
aS'@@fsr_trace'
p796
asg725
(lp797
g726
aS'ell.gauss'
p798
aS'@@shape'
p799
asg727
(lp800
F0.0
aF1.0
aF-0.5
aS'@@pa'
p801
asg728
(lp802
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p803
asg34
(lp804
NaS'@@parmtable'
p805
asg729
(lp806
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p807
asg730
(lp808
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p809
asg731
(lp810
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p811
asg732
(lp812
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p813
asg733
(lp814
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p815
asg718
(lp816
NaS'@@name'
p817
assg97
Nsg98
S'2006-03-10 16:09'
p818
sg100
S'MG_JEN_Sixpack::newstar_source()'
p819
sg102
S'MG_JEN_Sixpacknewstar_source'
p820
sg104
S'newstar_source'
p821
sg106
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-10 16:09'
p822
sS'callback'
p823
(dp824
g722
I01
ssg108
I00
sg109
g818
sg116
(lp825
g20
ag722
ag717
ag718
ag34
ag716
ag719
ag721
ag730
ag732
ag729
ag720
ag714
ag728
ag731
ag724
ag725
ag715
ag733
ag727
asssg539
I00
sg9
g568
sg634
(dp826
S'channel_start_index'
p827
I10
sS'data_column_name'
p828
g661
sS'predict_column'
p829
S'CORRECTED_DATA'
p830
sg534
S'@@ms_name'
p831
sg20
(dp832
g22
g634
sg23
(dp833
g827
S'(inputrec.sel) index of first selected freq channel'
p834
sg828
S'(inputrec) MS input column'
p835
sg829
S'MS output column to be associated with the VisTile predict-column'
p836
sg534
g547
sg552
g553
sS'channel_increment'
p837
S'(inputrec.sel) take every nth channel (1=all)'
p838
sS'channel_end_index'
p839
S'(inputrec.sel) index of last selected freq channel'
p840
sS'write_flags'
p841
S'(outputrec) if True, write flags to MS'
p842
ssg40
g41
sg42
S'MG_JEN_exec'
p843
sg44
(dp844
g827
I18
sg828
I17
sg829
I22
sg841
I21
sg839
I19
sg837
I20
ssg46
(dp845
g534
I01
sg552
I01
ssg48
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-10 16:09'
p846
sg50
S'20jan2006'
p847
sg52
(dp848
g534
I00
sg552
I00
ssg54
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-10 16:09'
p849
sg155
(dp850
g841
I00
ssg56
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-10 16:09'
p851
sg58
(dp852
g827
(lp853
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p854
asg828
(lp855
g661
ag830
aS'@@data_column_name'
p856
asg829
(lp857
g661
ag830
aS'MODEL_DATA'
p858
aS'@@predict_column'
p859
asg534
(lp860
g535
ag831
asg552
(lp861
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p862
asg837
(lp863
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p864
asg839
(lp865
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p866
asg841
(lp867
I01
aI00
aS'@@write_flags'
p868
assg97
Nsg98
S'2006-03-10 16:09'
p869
sg100
S'MG_JEN_exec::stream_control()'
p870
sg102
S'MG_JEN_execstream_control'
p871
sg104
S'stream_control'
p872
sg106
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-10 16:09'
p873
sg610
(dp874
g534
g612
ssg108
I00
sg109
g869
sg110
(dp875
g114
S'.modify( tile_size ): @@tile_size  ->  1'
p876
ssg116
(lp877
g20
ag534
ag552
ag828
ag827
ag839
ag837
ag841
ag829
assg552
I1
sg837
I1
sg839
I50
sg841
I00
ssg543
I00
sg545
I01
sg548
I01
sg637
(dp878
S'correct_after'
p879
I01
sg539
S'@@master_reqseq'
p880
sS'condeq_unop'
p881
S'Arg'
p882
sg643
I01
sg543
S'@@redun'
p883
sS'solver_subtree'
p884
NsS'subtract_after'
p885
I00
sg548
S'@@chain_solvers'
p886
sg20
(dp887
g22
g637
sg23
(dp888
g879
S'if True, correct measured with predicted.Joneset'
p889
sg539
g540
sg881
S'Optional unary operation on Condeq inputs'
p890
sg643
S'if True, include full visualisation'
p891
sg543
g544
sg884
S'solver subtree qualifier(s)'
p892
sg885
S'if True, subtract predicted from measured'
p893
sg548
g549
sS'flag_residuals'
p894
S'if True, flag the residuals'
p895
sg550
g551
ssg40
g41
sg42
S'MG_JEN_Cohset'
p896
sg44
(dp897
g885
I139
sg879
I140
sg881
I137
sg643
I138
ssg46
(dp898
g539
I01
sg543
I01
sg884
I01
sg548
I01
sg894
I01
sg550
I01
ssg48
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-10 16:09'
p899
sg50
g268
sg52
(dp900
g550
I00
sg548
I00
sg543
I00
sg539
I00
ssg54
S'insert one or more solver subtrees in the data stream'
p901
sg155
(dp902
g879
I00
sg539
I00
sg643
I00
sg543
I00
sg885
I00
sg894
I00
ssg56
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-10 16:09'
p903
sg58
(dp904
g879
(lp905
I01
aI00
aS'@@correct_after'
p906
asg539
(lp907
I01
aI00
ag880
asg881
(lp908
NaS'Abs'
p909
ag882
aS'@@condeq_unop'
p910
asg643
(lp911
I01
aI00
aS'@@visu'
p912
asg543
(lp913
I01
aI00
ag883
asg884
(lp914
NaS'@@solver_subtree'
p915
asg885
(lp916
I01
aI00
aS'@@subtract_after'
p917
asg548
(lp918
I01
ag886
asg894
(lp919
I01
aI00
aS'@@flag_residuals'
p920
asg550
(lp921
Na(lp922
I5
aI2
aa(lp923
I2
aI2
aa(lp924
I3
aI3
aaS'@@num_cells'
p925
assg97
Nsg98
S'2006-03-10 16:09'
p926
sg100
S'MG_JEN_Cohset::insert_solver()'
p927
sg102
S'MG_JEN_Cohsetinsert_solver'
p928
sg104
S'insert_solver'
p929
sg106
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-10 16:09'
p930
sg108
I00
sg109
g926
sg110
(dp931
g112
S'.modify( condeq_unop ): None  ->  Arg'
p932
sg114
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p933
ssg116
(lp934
g20
ag884
ag543
ag550
ag548
ag539
ag881
ag643
ag885
ag879
ag894
aS'./MG_JEN_Cohset.solver_subtree()'
p935
assg550
g925
sg935
(dp936
S'rmin'
p937
Nsg643
I01
sS'epsilon'
p938
F0.0001
sS'colin_factor'
p939
F0.0
sS'rmax'
p940
NsS'derivative_eps'
p941
F1e-08
sS'usesvd'
p942
I01
sS'debug_level'
p943
I10
sS'history'
p944
I01
sS'solvegroup'
p945
(lp946
S'Gphase'
p947
asg20
(dp948
g22
g935
sg23
(dp949
g937
S'if specified, only use baselines>=rmin'
p950
sg643
S'if True, include visualisation'
p951
sg938
S'iteration control criterion...'
p952
sg940
S'if specified, only use baselines<=rmax'
p953
sg941
S'NEW: also iteration control...'
p954
sg942
S'if True, use Singular Value Decomposition (SVD)'
p955
sg943
S'solver debug_level'
p956
sg944
S'if True, include history collection of metrics'
p957
sg945
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p958
sS'epsval'
p959
S'NEW: WNB version of epsilon....'
p960
sg550
g551
sS'setBalanced'
p961
S'NEW: if True, add (..) to diagonal, otherwise multiply (1+lambda)'
p962
sS'num_iter'
p963
S'max number of iterations (now also in fitter)'
p964
sS'condition'
p965
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p966
sg939
S'colinearity factor'
p967
ssg40
g41
sg42
S'MG_JEN_Cohset'
p968
sg44
(dp969
g937
I144
sg643
I155
sg938
I148
sg940
I145
sg942
I152
sg945
I142
sg550
I146
sg944
I156
sg963
I147
sg965
I143
sg939
I151
ssg46
(dp970
g943
I01
sg941
I01
sg961
I01
sg959
I01
sg550
I00
ssg48
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-10 16:09'
p971
sg50
S'20dec2005'
p972
sg54
S'Make a solver-subtree for the given Condeq Cohset'
p973
sg155
(dp974
g942
I00
sg961
I00
sg944
I00
sg643
I00
ssg56
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-10 16:09'
p975
sg58
(dp976
g937
(lp977
NaI100
aI200
aI500
aS'@@rmin'
p978
asg643
(lp979
I01
aI00
aS'@@visu'
p980
asg938
(lp981
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p982
asg940
(lp983
NaI500
aI1000
aI2000
aS'@@rmax'
p984
asg941
(lp985
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@derivative_eps'
p986
asg942
(lp987
I01
aI00
aS'@@usesvd'
p988
asg943
(lp989
I10
aS'@@debug_level'
p990
asg944
(lp991
I01
aI00
aS'@@history'
p992
asg945
(lp993
(lp994
a(lp995
g283
aa(lp996
S'Ggain'
p997
aa(lp998
g947
aa(lp999
S'Gpol1'
p1000
aa(lp1001
S'Gpol2'
p1002
aa(lp1003
g291
aa(lp1004
g291
aS'stokesU'
p1005
aa(lp1006
g291
aS'stokesQ'
p1007
aa(lp1008
g291
aS'stokesV'
p1009
aa(lp1010
S'stokesQU'
p1011
ag291
aa(lp1012
S'stokesQUV'
p1013
ag291
aa(lp1014
g283
aS'stokesI'
p1015
aa(lp1016
g1015
aa(lp1017
S'stokesIQU'
p1018
aa(lp1019
S'stokesIQUV'
p1020
aa(lp1021
S'stokesIV'
p1022
aa(lp1023
g1011
aa(lp1024
g1013
aa(lp1025
g283
aS'DJones'
p1026
aa(lp1027
g1026
aa(lp1028
S'Dang'
p1029
aa(lp1030
S'Dell'
p1031
aa(lp1032
S'Dreal'
p1033
aa(lp1034
S'Dimag'
p1035
aa(lp1036
g283
ag1026
ag248
aa(lp1037
g248
aa(lp1038
g283
ag95
aa(lp1039
g95
aa(lp1040
S'Breal'
p1041
aa(lp1042
S'Bimag'
p1043
aa(lp1044
S'Bpol1'
p1045
aa(lp1046
S'Bpol2'
p1047
aaS'@@solvegroup'
p1048
asg959
(lp1049
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsval'
p1050
asg550
(lp1051
Na(lp1052
I5
aI2
aa(lp1053
I2
aI2
aa(lp1054
I3
aI3
aaS'@@num_cells'
p1055
asg961
(lp1056
I01
aI00
aS'@@setBalanced'
p1057
asg963
(lp1058
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1059
asg965
(lp1060
NaS'Gphase_X_sum=0.0'
p1061
aS'Gphase_Y_sum=0.0'
p1062
a(lp1063
g1061
ag1062
aa(lp1064
S'Gphase_X_first=0.0'
p1065
aS'Gphase_Y_first=0.0'
p1066
aa(lp1067
S'Gphase_X_last=0.0'
p1068
aS'Gphase_Y_last=0.0'
p1069
aaS'Dang_sum=0.0'
p1070
a(lp1071
S'Bimag_X_sum=0.0'
p1072
aS'Bimag_Y_sum=0.0'
p1073
aa(lp1074
S'Breal_X_product=1.0'
p1075
aS'Breal_Y_product=1.0'
p1076
aaS'@@condition'
p1077
asg939
(lp1078
F1e-08
aF0.0
aS'@@colin_factor'
p1079
assg97
Nsg98
S'2006-03-10 16:09'
p1080
sg100
S'MG_JEN_Cohset::solver_subtree()'
p1081
sg102
S'MG_JEN_Cohsetsolver_subtree'
p1082
sg104
S'solver_subtree'
p1083
sg106
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-10 16:09'
p1084
sg108
I00
sg109
g1080
sg110
(dp1085
g114
S".modify( solvegroup ): []  ->  ['Gphase']"
p1086
ssg116
(lp1087
g20
ag945
ag965
ag937
ag940
ag550
ag963
ag938
ag959
ag941
ag939
ag942
ag961
ag943
ag643
ag944
assg550
Nsg961
I00
sg963
I5
sg965
Nsg959
F1e-08
ssg894
I00
ss.