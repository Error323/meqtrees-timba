(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stations'
p7
S'@@stations'
p8
sg1
S'@@polrep'
p9
sS'_JEN_inarg_CTRL_record:'
p10
(dp11
S'target_definition'
p12
S'MG_JEN_Joneset::BJones()'
p13
sS'localscope'
p14
g5
sS'last_edited'
p15
S'2006-02-26 14:20'
p16
sS'hide'
p17
(dp18
S'@Jsequence'
p19
I01
sg1
I01
sS'stddev'
p20
I00
sg7
I01
ssS'barescope'
p21
S'MG_JEN_JonesetBJones'
p22
sS'generic'
p23
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p24
sS'target_dir'
p25
S'.'
p26
sS'oneliner'
p27
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p28
sS'target_function'
p29
S'BJones'
p30
sS'choice'
p31
(dp32
g19
(lp33
S'BJones'
p34
aS'@@@Jsequence'
p35
asg1
(lp36
g2
aS'circular'
p37
ag9
asg20
(lp38
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p39
asg7
(lp40
(lp41
I0
aag8
assS'specific'
p42
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p43
sS'qual'
p44
NsS'version'
p45
S'16dec2005'
p46
sS'datetime_defined'
p47
g16
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'mutable'
p50
(dp51
g1
I00
sg7
I00
ssS'protected'
p52
I00
sS'order'
p53
(lp54
g10
ag7
ag1
ag19
ag20
asS'help'
p55
(dp56
g19
S'list membership indication (used in JEN_inargGui)'
p57
sg1
S'polarisation representation'
p58
sg20
S'scatter in default c00 funklet values'
p59
sg7
S'list of station names/numbers'
p60
ssS'description'
p61
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p62
ssg20
F1.1000000000000001
sg19
g34
ssg1
S'@@polrep'
p63
sg7
S'@@stations'
p64
sS'./MG_JEN_Joneset.DJones_WSRT()'
p65
(dp66
g1
S'@@polrep'
p67
sg7
S'@@stations'
p68
sS'coupled_XY_Dell'
p69
I01
sg10
(dp70
g14
g65
sg55
(dp71
g1
g58
sg7
g60
sg69
S'if True, XDell = -YDell per station'
p72
sg20
g59
sS'coupled_XY_Dang'
p73
S'if True, XDang = YDang per station'
p74
sg19
g57
ssg25
g26
sg48
S'MG_JEN_Joneset'
p75
sS'JEN_inargGUI_ident'
p76
(dp77
g73
I59
sg69
I60
sg20
I61
ssg17
(dp78
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg23
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p79
sg45
g46
sg50
(dp80
g1
I00
sg7
I00
ssg61
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p81
sS'editable'
p82
(dp83
g73
I00
sg69
I00
ssg27
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p84
sg31
(dp85
g1
(lp86
g2
ag37
ag67
asg7
(lp87
(lp88
I0
aag68
asg69
(lp89
I01
aI00
aS'@@coupled_XY_Dell'
p90
asg20
(lp91
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p92
asg73
(lp93
I01
aI00
aS'@@coupled_XY_Dang'
p94
asg19
(lp95
S'DJones_WSRT'
p96
aS'@@@Jsequence'
p97
assg44
Nsg15
S'2006-02-26 14:20'
p98
sg12
S'MG_JEN_Joneset::DJones_WSRT()'
p99
sg21
S'MG_JEN_JonesetDJones_WSRT'
p100
sg29
S'DJones_WSRT'
p101
sg42
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p102
sg52
I00
sg47
g98
sg53
(lp103
g10
ag7
ag1
ag19
ag73
ag69
ag20
assg20
F1.1000000000000001
sg73
I01
sg19
g96
ssS'ft_coeff_scale'
p104
F0.0
sS'simul'
p105
S'@@simul'
p106
sS'uvplane_effect'
p107
S'@@uvplane_effect'
p108
sS'parmtable'
p109
S'@@parmtable'
p110
sg10
(dp111
g14
g3
sg55
(dp112
g1
g58
sg7
g60
sg104
S'scale of polc_ft non-c00 coeff'
p113
sg105
S'if True, use simulated (Leafset) Jones parameter values'
p114
sg107
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p115
sg109
S'name of the MeqParm table to be used'
p116
sS'Jsequence'
p117
S'sequence of Jones matrices to be used'
p118
sg19
g57
ssg25
g26
sg48
S'MG_JEN_Cohset'
p119
sg76
(dp120
g117
I55
ssg17
(dp121
g1
I01
sg7
I01
sg104
I01
sg105
I01
sg107
I01
sg109
I01
sg19
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p122
sg45
S'25dec2005'
p123
sg50
(dp124
g107
I00
sg7
I00
sg109
I00
sg1
I00
sg105
I00
ssg61
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p125
sg82
(dp126
g105
I00
ssg27
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p127
sg31
(dp128
g1
(lp129
g2
ag37
ag63
asg7
(lp130
(lp131
I0
aag64
asg104
(lp132
F0.0
aS'@@ft_coeff_scale'
p133
asg105
(lp134
I01
aI00
ag106
asg107
(lp135
I00
ag108
asg109
(lp136
NaS'test'
p137
ag110
asg117
(lp138
(lp139
S'GJones'
p140
aa(lp141
g34
aa(lp142
S'FJones'
p143
aa(lp144
S'KJones'
p145
aa(lp146
g96
aa(lp147
g140
ag96
aa(lp148
S'JJones'
p149
aa(lp150
aS'@@Jsequence'
p151
asg19
(lp152
NaS'@@@Jsequence'
p153
assg44
Nsg15
S'2006-02-26 14:20'
p154
sg12
S'MG_JEN_Cohset::Jones()'
p155
sg21
S'MG_JEN_CohsetJones'
p156
sg29
S'Jones'
p157
sg42
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p158
sg52
I00
sg47
g154
sS'MESSAGE'
p159
(dp160
S'1'
p161
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p162
sS'0'
p163
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p164
sS'3'
p165
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p166
sS'2'
p167
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p168
sS'5'
p169
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p170
sS'4'
p171
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p172
sS'6'
p173
S".modify( Jsequence ): []  ->  ['DJones_WSRT']"
p174
ssg53
(lp175
g10
ag7
ag1
ag19
ag109
ag107
ag104
ag105
ag117
aS'./MG_JEN_Joneset.GJones()'
p176
aS'./MG_JEN_Joneset.FJones()'
p177
ag5
aS'./MG_JEN_Joneset.KJones()'
p178
ag65
aS'./MG_JEN_Joneset.JJones()'
p179
assg178
(dp180
g7
S'@@stations'
p181
sg105
g106
sg1
S'@@polrep'
p182
sg10
(dp183
g12
S'MG_JEN_Joneset::KJones()'
p184
sg14
g178
sg15
S'2006-02-26 14:20'
p185
sg17
(dp186
g19
I01
sg1
I01
sg7
I01
ssg21
S'MG_JEN_JonesetKJones'
p187
sg23
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p188
sg25
g26
sg27
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p189
sg29
S'KJones'
p190
sg31
(dp191
g19
(lp192
g145
aS'@@@Jsequence'
p193
asg1
(lp194
g2
ag37
ag182
asg7
(lp195
(lp196
I0
aag181
assg42
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p197
sg44
Nsg45
S'12dec2005'
p198
sg47
g185
sg48
S'MG_JEN_Joneset'
p199
sg50
(dp200
g1
I00
sg7
I00
ssg52
I00
sg53
(lp201
g10
ag7
ag1
ag19
asg55
(dp202
g19
g57
sg1
g58
sg7
g60
ssg61
S'defines diagonal KJones matrices for DFT Fourier kernel'
p203
ssg19
g145
ssg179
(dp204
g7
S'@@stations'
p205
sg1
S'@@polrep'
p206
sg10
(dp207
g12
S'MG_JEN_Joneset::JJones()'
p208
sg14
g179
sg15
S'2006-02-26 14:20'
p209
sg17
(dp210
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetJJones'
p211
sg23
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p212
sg25
g26
sg27
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p213
sg29
S'JJones'
p214
sg31
(dp215
g19
(lp216
g149
aS'@@@Jsequence'
p217
asg1
(lp218
g2
ag37
ag206
asg20
(lp219
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p220
asg7
(lp221
(lp222
I0
aag205
assg42
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p223
sg44
Nsg45
S'14feb2006'
p224
sg47
g209
sg48
S'MG_JEN_Joneset'
p225
sg50
(dp226
g1
I00
sg7
I00
ssg52
I00
sg53
(lp227
g10
ag7
ag1
ag19
ag20
asg55
(dp228
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p229
ssg20
F1.1000000000000001
sg19
g149
ssg176
(dp230
g1
S'@@polrep'
p231
sg7
S'@@stations'
p232
sg10
(dp233
g12
S'MG_JEN_Joneset::GJones()'
p234
sg14
g176
sg15
S'2006-02-26 14:20'
p235
sg17
(dp236
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetGJones'
p237
sg23
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p238
sg25
g26
sg27
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p239
sg29
S'GJones'
p240
sg31
(dp241
g19
(lp242
g140
aS'@@@Jsequence'
p243
asS'Gpolar'
p244
(lp245
I01
aI00
aS'@@Gpolar'
p246
asg1
(lp247
g2
ag37
ag231
asg20
(lp248
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p249
asg7
(lp250
(lp251
I0
aag232
assg42
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p252
sg44
Nsg45
S'15dec2005'
p253
sg47
g235
sg48
S'MG_JEN_Joneset'
p254
sg82
(dp255
g244
I00
ssg50
(dp256
g1
I00
sg7
I00
ssg52
I00
sg53
(lp257
g10
ag7
ag1
ag19
ag244
ag20
asg55
(dp258
g19
g57
sg244
S'if True, use MeqPolar, otherwise MeqToComplex'
p259
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p260
ssg20
F1.1000000000000001
sg244
I00
sg19
g140
ssg117
(lp261
g96
asg177
(dp262
g7
S'@@stations'
p263
sg1
S'@@polrep'
p264
sg10
(dp265
g12
S'MG_JEN_Joneset::FJones()'
p266
sg14
g177
sg15
S'2006-02-26 14:20'
p267
sg17
(dp268
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetFJones'
p269
sg23
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p270
sg25
g26
sg27
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p271
sg29
S'FJones'
p272
sg31
(dp273
g19
(lp274
g143
aS'@@@Jsequence'
p275
asg1
(lp276
g2
ag37
ag264
asg20
(lp277
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p278
asg7
(lp279
(lp280
I0
aag263
assg42
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p281
sg44
Nsg45
g46
sg47
g267
sg48
S'MG_JEN_Joneset'
p282
sg50
(dp283
g1
I00
sg7
I00
ssg52
I00
sg53
(lp284
g10
ag7
ag1
ag19
ag20
asg55
(dp285
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'defines diagonal FJones Faraday rotation matrices'
p286
ssg20
F1.1000000000000001
sg19
g143
ssg19
NssS'./MG_JEN_Cohset.predict()'
p287
(dp288
g1
S'@@polrep'
p289
sg10
(dp290
g12
S'MG_JEN_Cohset::predict()'
p291
sg14
g287
sg76
(dp292
sg17
(dp293
g1
I01
sg7
I01
ssg21
S'MG_JEN_Cohsetpredict'
p294
sg23
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p295
sg25
g26
sg61
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p296
sg27
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p297
sg29
S'predict'
p298
sg31
(dp299
g1
(lp300
g2
ag37
ag289
asg7
(lp301
(lp302
I0
aI1
aI2
aI3
aI4
aa(lp303
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp304
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp305
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p306
aS'@@stations'
p307
assg42
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p308
sg44
Nsg45
g123
sg47
S'2006-02-26 14:20'
p309
sg48
S'MG_JEN_Cohset'
p310
sg50
(dp311
g1
I00
sg7
I00
ssg52
I00
sg15
g309
sg53
(lp312
g10
ag7
ag1
asg55
(dp313
g1
S'polarisation representation'
p314
sg7
S'the (subset of) stations to be used'
p315
sssg7
g307
ssS'script_name'
p316
S'MG_JEN_cps'
p317
sS'redun'
p318
I00
sS'ms_name'
p319
S'D1.MS'
p320
sg109
Nsg10
(dp321
g14
S'./MG_JEN_cps.'
p322
sg55
(dp323
g1
g58
sS'master_reqseq'
p324
S'if True, use a master reqseq for solver(s)'
p325
sg7
g60
sS'insert_flagger'
p326
S'if True, insert a flagger'
p327
sg318
S'if True, redundant spacing calibration'
p328
sS'insert_solver'
p329
S'if True, insert a solver'
p330
sg104
g113
sg319
S'name of the (AIPS++) Measurement Set'
p331
sS'chain_solvers'
p332
S'if True, chain the solvers (recommended)'
p333
sS'num_cells'
p334
S'if defined, ModRes argument [ntime,nfreq]'
p335
sg109
g116
sS'tile_size'
p336
S'(inputrec) size (in time-slots) of the input data-tile'
p337
sg105
g114
sg107
g115
sg19
g57
ssS'reference'
p338
I00
sg25
g26
sg48
S'MG_JEN_cps'
p339
sg76
(dp340
g1
I7
sg7
I6
sg326
I2
sg318
I15
sg329
I1
sg105
I12
sg319
I4
sg109
I9
sg316
I0
sg334
I16
sg336
I5
sg107
I10
ssg17
(dp341
g324
I01
sg318
I00
sS'last_changed'
p342
I01
sg104
I01
sg107
I00
sg332
I01
sg334
I00
sg19
I01
ssg23
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p343
sg45
g253
sg61
g343
sg82
(dp344
g324
I00
sg318
I00
sg326
I00
sg342
I00
sg329
I00
sg105
I00
ssg27
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p345
sg31
(dp346
g1
(lp347
g2
ag37
aS'@@polrep'
p348
asg324
(lp349
I01
aI00
aS'@@master_reqseq'
p350
asg7
(lp351
(lp352
I0
aaS'@@stations'
p353
asg326
(lp354
I01
aI00
aS'@@insert_flagger'
p355
asg318
(lp356
I01
aI00
aS'@@redun'
p357
asg329
(lp358
I01
aI00
aS'@@insert_solver'
p359
asg342
(lp360
S'd30jan2006'
p361
aS'@@last_changed'
p362
asg319
(lp363
g320
aS'@@ms_name'
p364
asg332
(lp365
I01
aS'@@chain_solvers'
p366
asg334
(lp367
Na(lp368
I5
aI2
aa(lp369
I2
aI2
aa(lp370
I3
aI3
aaS'@@num_cells'
p371
asg109
(lp372
Nag137
aS'@@parmtable'
p373
asg336
(lp374
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p375
asg105
(lp376
I01
aI00
aS'@@simul'
p377
asg104
(lp378
F0.0
aS'@@ft_coeff_scale'
p379
asg107
(lp380
I00
aS'@@uvplane_effect'
p381
asg19
(lp382
NaS'@@@Jsequence'
p383
assg15
S'2006-02-26 14:20'
p384
sS'HISTORY'
p385
(dp386
g161
S'2006-02-26 14:20: Derived from: MG_JEN_cps_DJones.inarg'
p387
sg163
S'2006-02-26 14:20: Derived from: MG_JEN_cps.inarg'
p388
ssg12
g317
sS'save_file'
p389
S'MG_JEN_cps_DJones_protected.inarg'
p390
sS'file_filter'
p391
S'MG_JEN_cps*.inarg'
p392
sg29
S''
p393
sg42
S'<specific>'
p394
sS'browse'
p395
(dp396
g319
S'*.MS'
p397
ssg52
I01
sg47
g384
sg159
(dp398
S'11'
p399
S".modify(): found ={'data_column_name': 1, 'solvegroup': 1, 'Jsequence': 1}"
p400
sS'10'
p401
S'.modify(): stripped off: _JEN_inarg_option'
p402
sS'13'
p403
S".modify(): found ={'I0': 1, 'Qpct': 1, 'Vpct': 1, 'SI': 1, 'RM': 1, 'Upct': 1, 'punit': 1}"
p404
sS'12'
p405
S'.modify(): stripped off: _JEN_inarg_option'
p406
sg161
S'.modify( uvplane_effect ): False  ->  True'
p407
sg163
S'.modify(): stripped off: _JEN_inarg_option'
p408
sg165
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p409
sg167
S".modify(): found ={'uvplane_effect': 1}"
p410
sg169
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p411
sg171
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p412
sS'7'
p413
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p414
sg173
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p415
sS'9'
p416
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p417
sS'8'
p418
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p419
ssg53
(lp420
g10
ag316
ag329
ag326
ag342
ag319
ag336
ag7
ag1
ag19
ag109
ag107
ag104
ag105
ag332
ag324
ag318
ag334
aS'./MG_JEN_exec.stream_control()'
p421
aS'./MG_JEN_Cohset.make_spigots()'
p422
aS'./MG_JEN_Sixpack.newstar_source()'
p423
ag3
ag287
aS'./MG_JEN_Cohset.insert_solver()'
p424
aS'./MG_JEN_Cohset.make_sinks()'
p425
assg425
(dp426
S'fullDomainMux'
p427
I01
sS'output_col'
p428
S'PREDICT'
p429
sS'visu'
p430
I01
sS'flag'
p431
I00
sg10
(dp432
g12
S'MG_JEN_Cohset::make_sinks()'
p433
sg14
g425
sg76
(dp434
g431
I89
sg430
I88
sg427
I90
sg428
I86
sS'visu_array_config'
p435
I87
ssg21
S'MG_JEN_Cohsetmake_sinks'
p436
sg23
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p437
sg25
g26
sg61
S'Make sink nodes in the given Cohset object'
p438
sg27
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p439
sg29
S'make_sinks'
p440
sg31
(dp441
g431
(lp442
I01
aI00
aS'@@flag'
p443
asg435
(lp444
I01
aI00
aS'@@visu_array_config'
p445
asg428
(lp446
g429
aS'RESIDUALS'
p447
aS'DATA'
p448
aS'@@output_col'
p449
asg427
(lp450
I01
aI00
aS'@@fullDomainMux'
p451
asg430
(lp452
I01
aI00
aS'@@visu'
p453
assg42
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p454
sg44
Nsg45
g123
sg47
S'2006-02-26 14:20'
p455
sg48
S'MG_JEN_Cohset'
p456
sg82
(dp457
g431
I00
sg435
I00
sg427
I00
sg430
I00
ssg52
I00
sg15
g455
sg53
(lp458
g10
ag428
ag435
ag430
ag431
ag427
asg55
(dp459
g431
S'if True, insert a flagger for the output uv-data'
p460
sg435
S'if True, visualise the array config (from MS)'
p461
sg428
S'name of the logical (VisTile) output column'
p462
sg427
S'if True, attach an extra VisDataMux'
p463
sg430
S'if True, visualise the output uv-data'
p464
sssg435
I01
ssg336
I10
sg422
(dp465
S'MS_corr_index'
p466
(lp467
I0
aI1
aI2
aI3
asg431
I00
sg10
(dp468
g12
S'MG_JEN_Cohset::make_spigots()'
p469
sg14
g422
sg76
(dp470
g431
I28
sg466
I26
sg430
I27
ssg17
(dp471
S'input_col'
p472
I01
ssg21
S'MG_JEN_Cohsetmake_spigots'
p473
sg23
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p474
sg25
g26
sg61
S'Make spigot nodes in the given Cohset object'
p475
sg27
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p476
sg29
S'make_spigots'
p477
sg31
(dp478
g431
(lp479
I01
aI00
aS'@@flag'
p480
asg466
(lp481
g467
a(lp482
I0
aI-1
aI-1
aI1
aa(lp483
I0
aI-1
aI-1
aI3
aaS'@@'
p484
aS'@@MS_corr_index'
p485
asg472
(lp486
g448
ag429
ag447
aS'@@input_col'
p487
asg430
(lp488
I01
aI00
aS'@@visu'
p489
assg42
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p490
sg44
Nsg45
g123
sg47
S'2006-02-26 14:20'
p491
sg48
S'MG_JEN_Cohset'
p492
sg82
(dp493
g431
I00
sg430
I00
ssg52
I00
sg15
g491
sg53
(lp494
g10
ag472
ag466
ag430
ag431
asg55
(dp495
g431
S'if True, insert a flagger for the input uv-data'
p496
sg466
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p497
sg472
S'name of the logical (VisTile) input column'
p498
sg430
S'if True, visualise the input uv-data'
p499
sssg472
g448
sg430
I01
ssg19
Nsg326
I00
sg342
g361
sg107
I01
sg334
Nsg423
(dp500
S'f0'
p501
F1000000.0
sS'major'
p502
F0.0
sS'unsolvable'
p503
I00
sS'from_LSM'
p504
NsS'name'
p505
NsS'I0'
p506
F1.0
sS'SI'
p507
NsS'Qpct'
p508
I10
sS'punit'
p509
S'QU'
p510
sS'fsr_trace'
p511
I01
sS'shape'
p512
S'point'
p513
sS'pa'
p514
F0.0
sS'RA'
p515
F4.3570000000000002
sg109
NsS'RM'
p516
NsS'Upct'
p517
I-10
sS'Dec'
p518
F1.0920000000000001
sS'Vpct'
p519
NsS'minor'
p520
F0.0
sg10
(dp521
g14
g423
sg55
(dp522
g501
S'reference freq (Hz): I=I0 @ f=f0'
p523
sg502
S'major axis (arcsec)'
p524
sg503
S'if True, do NOT store solvegroup/parmgroup info'
p525
sg504
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p526
sg506
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p527
sg507
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p528
sg508
S'Stokes Q (percentage of I)'
p529
sg509
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p530
sg512
S'source shape'
p531
sg514
S'position angle (rad)'
p532
sg511
S'If True, attach to forest state record'
p533
sg109
S'name of the MeqParm table (AIPS++)'
p534
sg516
S'Intrinsic Rotation Measure (rad/m2)'
p535
sg517
S'Stokes U (percentage of I)'
p536
sg518
S'Declination (rad, J2000)'
p537
sg519
S'Stokes V (percentage of I)'
p538
sg520
S'minor axis (arcsec)'
p539
sg515
S'Right Ascension (rad, J2000)'
p540
ssg25
g26
sg48
S'MG_JEN_Sixpack'
p541
sg76
(dp542
g518
I42
sg504
I30
sg506
I34
sg508
I35
sg509
I29
sg507
I39
sg109
I32
sg515
I41
sg516
I38
sg517
I36
sg519
I37
ssg17
(dp543
g501
I01
sg502
I01
sg503
I01
sg504
I00
sg511
I01
sg509
I00
sg512
I01
sg514
I01
sg520
I01
sg505
I01
ssg23
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p544
sg45
S'10feb2006'
p545
sg395
(dp546
g504
S'*.lsm'
p547
ssg61
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p548
sg82
(dp549
g503
I00
sg511
I00
ssg27
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p550
sg31
(dp551
g501
(lp552
F1000000.0
aS'@@f0'
p553
asg502
(lp554
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p555
asg503
(lp556
I01
aI00
aS'@@unsolvable'
p557
asg504
(lp558
NaS'@@from_LSM'
p559
asg506
(lp560
F1.0
aF10.0
aS'@@I0'
p561
asg507
(lp562
NaF-0.69999999999999996
a(lp563
F0.44700000000000001
aF-0.184
aaS'@@SI'
p564
asg508
(lp565
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p566
asg509
(lp567
S'unpol'
p568
aS'unpol2'
p569
aS'unpol10'
p570
aS'QUV'
p571
ag510
aS'Qonly'
p572
aS'Uonly'
p573
aS'Vonly'
p574
aS'3c147'
p575
aS'3c286'
p576
aS'3c48'
p577
aS'3c295'
p578
aS'RMtest'
p579
aS'SItest'
p580
aS'@@punit'
p581
asg511
(lp582
I01
aI00
aS'@@fsr_trace'
p583
asg512
(lp584
g513
aS'ell.gauss'
p585
aS'@@shape'
p586
asg514
(lp587
F0.0
aF1.0
aF-0.5
aS'@@pa'
p588
asg515
(lp589
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p590
asg109
(lp591
NaS'@@parmtable'
p592
asg516
(lp593
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p594
asg517
(lp595
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p596
asg518
(lp597
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p598
asg519
(lp599
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p600
asg520
(lp601
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p602
asg505
(lp603
NaS'@@name'
p604
assg44
Nsg15
S'2006-02-26 14:20'
p605
sg12
S'MG_JEN_Sixpack::newstar_source()'
p606
sg21
S'MG_JEN_Sixpacknewstar_source'
p607
sg29
S'newstar_source'
p608
sg42
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p609
sS'callback'
p610
(dp611
g509
I01
ssg52
I00
sg47
g605
sg159
(dp612
g161
S'.modify( Upct ): None  ->  -10'
p613
sg163
S'.modify( Qpct ): None  ->  10'
p614
sg167
S'.modify( punit ): unpol  ->  QU'
p615
ssg53
(lp616
g10
ag509
ag504
ag505
ag109
ag503
ag506
ag508
ag517
ag519
ag516
ag507
ag501
ag515
ag518
ag511
ag512
ag502
ag520
ag514
asssg324
I00
sg7
g352
sg421
(dp617
S'channel_start_index'
p618
I10
sS'data_column_name'
p619
S'CORRECTED_DATA'
p620
sS'predict_column'
p621
g620
sg319
S'@@ms_name'
p622
sg10
(dp623
g14
g421
sg55
(dp624
g618
S'(inputrec.sel) index of first selected freq channel'
p625
sg619
S'(inputrec) MS input column'
p626
sg621
S'MS output column to be associated with the VisTile predict-column'
p627
sg319
g331
sg336
g337
sS'channel_increment'
p628
S'(inputrec.sel) take every nth channel (1=all)'
p629
sS'channel_end_index'
p630
S'(inputrec.sel) index of last selected freq channel'
p631
sS'write_flags'
p632
S'(outputrec) if True, write flags to MS'
p633
ssg25
g26
sg48
S'MG_JEN_exec'
p634
sg76
(dp635
g618
I20
sg619
I19
sg621
I24
sg632
I23
sg630
I21
sg628
I22
ssg17
(dp636
g319
I01
sg336
I01
ssg23
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p637
sg45
S'20jan2006'
p638
sg50
(dp639
g319
I00
sg336
I00
ssg61
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p640
sg82
(dp641
g632
I00
ssg27
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p642
sg31
(dp643
g618
(lp644
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p645
asg619
(lp646
g448
ag620
aS'@@data_column_name'
p647
asg621
(lp648
g448
ag620
aS'MODEL_DATA'
p649
aS'@@predict_column'
p650
asg319
(lp651
g320
ag622
asg336
(lp652
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p653
asg628
(lp654
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p655
asg630
(lp656
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p657
asg632
(lp658
I01
aI00
aS'@@write_flags'
p659
assg44
Nsg15
S'2006-02-26 14:20'
p660
sg12
S'MG_JEN_exec::stream_control()'
p661
sg21
S'MG_JEN_execstream_control'
p662
sg29
S'stream_control'
p663
sg42
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p664
sg395
(dp665
g319
g397
ssg52
I00
sg47
g660
sg159
(dp666
g163
S'.modify( data_column_name ): DATA  ->  CORRECTED_DATA'
p667
ssg53
(lp668
g10
ag319
ag336
ag619
ag618
ag630
ag628
ag632
ag621
assg336
g653
sg628
I1
sg630
I50
sg632
I00
ssg104
F0.0
sg329
I01
sg105
I00
sg332
I01
sg424
(dp669
S'correct_after'
p670
I01
sg324
S'@@master_reqseq'
p671
sS'condeq_unop'
p672
Nsg430
I01
sg318
S'@@redun'
p673
sS'solver_subtree'
p674
NsS'subtract_after'
p675
I00
sg332
S'@@chain_solvers'
p676
sg10
(dp677
g14
g424
sg55
(dp678
g670
S'if True, correct measured with predicted.Joneset'
p679
sg324
g325
sg672
S'Optional unary operation on Condeq inputs'
p680
sg430
S'if True, include full visualisation'
p681
sg318
g328
sg674
S'solver subtree qualifier(s)'
p682
sg675
S'if True, subtract predicted from measured'
p683
sg332
g333
sS'flag_residuals'
p684
S'if True, flag the residuals'
p685
sg334
g335
ssg25
g26
sg48
S'MG_JEN_Cohset'
p686
sg76
(dp687
g675
I71
sg670
I72
sg672
I69
sg430
I70
ssg17
(dp688
g324
I01
sg318
I01
sg674
I01
sg332
I01
sg684
I01
sg334
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p689
sg45
g123
sg50
(dp690
g334
I00
sg332
I00
sg318
I00
sg324
I00
ssg61
S'insert one or more solver subtrees in the data stream'
p691
sg82
(dp692
g670
I00
sg324
I00
sg430
I00
sg318
I00
sg675
I00
sg684
I00
ssg27
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p693
sg31
(dp694
g670
(lp695
I01
aI00
aS'@@correct_after'
p696
asg324
(lp697
I01
aI00
ag671
asg672
(lp698
NaS'Abs'
p699
aS'Arg'
p700
aS'@@condeq_unop'
p701
asg430
(lp702
I01
aI00
aS'@@visu'
p703
asg318
(lp704
I01
aI00
ag673
asg674
(lp705
NaS'@@solver_subtree'
p706
asg675
(lp707
I01
aI00
aS'@@subtract_after'
p708
asg332
(lp709
I01
ag676
asg684
(lp710
I01
aI00
aS'@@flag_residuals'
p711
asg334
(lp712
Na(lp713
I5
aI2
aa(lp714
I2
aI2
aa(lp715
I3
aI3
aaS'@@num_cells'
p716
assg44
Nsg15
S'2006-02-26 14:20'
p717
sg12
S'MG_JEN_Cohset::insert_solver()'
p718
sg21
S'MG_JEN_Cohsetinsert_solver'
p719
sg29
S'insert_solver'
p720
sg42
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p721
sg52
I00
sg47
g717
sg159
(dp722
g163
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p723
ssg53
(lp724
g10
ag674
ag318
ag334
ag332
ag324
ag672
ag430
ag675
ag670
ag684
aS'./MG_JEN_Cohset.solver_subtree()'
p725
assg334
g716
sg725
(dp726
S'rmin'
p727
Nsg430
I01
sS'epsilon'
p728
F0.0001
sS'rmax'
p729
NsS'usesvd'
p730
I01
sS'debug_level'
p731
I10
sS'solvegroup'
p732
(lp733
S'DJones'
p734
asg10
(dp735
g14
g725
sg55
(dp736
g727
S'if specified, only use baselines>=rmin'
p737
sg430
S'if True, include visualisation'
p738
sg728
S'iteration control criterion'
p739
sg729
S'if specified, only use baselines<=rmax'
p740
sg730
S'if True, use Singular Value Decomposition (SVD)'
p741
sg731
S'solver debug_level'
p742
sg732
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p743
sg334
g335
sS'history'
p744
S'if True, include history collection of metrics'
p745
sS'num_iter'
p746
S'max number of iterations'
p747
sS'condition'
p748
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p749
sS'colin_factor'
p750
S'colinearity factor'
p751
ssg25
g26
sg48
S'MG_JEN_Cohset'
p752
sg76
(dp753
g727
I76
sg430
I84
sg728
I80
sg729
I77
sg730
I82
sg732
I74
sg334
I78
sg744
I85
sg746
I79
sg748
I75
sg750
I81
ssg17
(dp754
g731
I01
sg334
I00
ssg23
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p755
sg45
S'20dec2005'
p756
sg61
S'Make a solver-subtree for the given Condeq Cohset'
p757
sg82
(dp758
g730
I00
sg744
I00
sg430
I00
ssg27
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p759
sg31
(dp760
g727
(lp761
NaI100
aI200
aI500
aS'@@rmin'
p762
asg430
(lp763
I01
aI00
aS'@@visu'
p764
asg728
(lp765
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p766
asg729
(lp767
NaI500
aI1000
aI2000
aS'@@rmax'
p768
asg730
(lp769
I01
aI00
aS'@@usesvd'
p770
asg731
(lp771
I10
aS'@@debug_level'
p772
asg732
(lp773
(lp774
a(lp775
g140
aa(lp776
S'Ggain'
p777
aa(lp778
S'Gphase'
p779
aa(lp780
S'Gpol1'
p781
aa(lp782
S'Gpol2'
p783
aa(lp784
g149
aa(lp785
g140
aS'stokesI'
p786
aa(lp787
g786
aa(lp788
S'stokesIQU'
p789
aa(lp790
S'stokesIQUV'
p791
aa(lp792
g140
ag734
aa(lp793
g734
aa(lp794
S'Dang'
p795
aa(lp796
S'Dell'
p797
aa(lp798
S'Dreal'
p799
aa(lp800
S'Dimag'
p801
aa(lp802
g140
ag734
ag143
aa(lp803
g143
aa(lp804
g140
ag34
aa(lp805
g34
aa(lp806
S'Breal'
p807
aa(lp808
S'Bimag'
p809
aa(lp810
S'Bpol1'
p811
aa(lp812
S'Bpol2'
p813
aaS'@@solvegroup'
p814
asg334
(lp815
Na(lp816
I5
aI2
aa(lp817
I2
aI2
aa(lp818
I3
aI3
aaS'@@num_cells'
p819
asg744
(lp820
I01
aI00
aS'@@history'
p821
asg746
(lp822
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p823
asg748
(lp824
NaS'Gphase_X_sum=0.0'
p825
aS'Gphase_Y_sum=0.0'
p826
a(lp827
g825
ag826
aa(lp828
S'Gphase_X_first=0.0'
p829
aS'Gphase_Y_first=0.0'
p830
aa(lp831
S'Gphase_X_last=0.0'
p832
aS'Gphase_Y_last=0.0'
p833
aaS'Dang_sum=0.0'
p834
a(lp835
S'Bimag_X_sum=0.0'
p836
aS'Bimag_Y_sum=0.0'
p837
aa(lp838
S'Breal_X_product=1.0'
p839
aS'Breal_Y_product=1.0'
p840
aaS'@@condition'
p841
asg750
(lp842
F1e-08
aF0.0
aS'@@colin_factor'
p843
assg44
Nsg15
S'2006-02-26 14:20'
p844
sg12
S'MG_JEN_Cohset::solver_subtree()'
p845
sg21
S'MG_JEN_Cohsetsolver_subtree'
p846
sg29
S'solver_subtree'
p847
sg42
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p848
sg52
I00
sg47
g844
sg159
(dp849
g163
S".modify( solvegroup ): []  ->  ['DJones']"
p850
ssg53
(lp851
g10
ag732
ag748
ag727
ag729
ag334
ag746
ag728
ag750
ag730
ag731
ag430
ag744
assg334
Nsg744
I01
sg746
I20
sg748
Nsg750
F1e-08
ssg684
I00
ss.