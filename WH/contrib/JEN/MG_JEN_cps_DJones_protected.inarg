(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'reset_funklet'
p7
I00
sg1
S'@@polrep'
p8
sS'color'
p9
S'red'
p10
sS'subtile_size_Bimag'
p11
S'@subtile_size_Breal'
p12
sS'save_all'
p13
I00
sS'subtile_size_Breal'
p14
NsS'auto_save'
p15
I01
sS'size'
p16
I10
sS'style'
p17
S'circle'
p18
sS'fdeg_Breal'
p19
I5
sS'condeq_corrs'
p20
S'*'
p21
sS'funklet_shape'
p22
NsS'_JEN_inarg_CTRL_record:'
p23
(dp24
S'target_definition'
p25
S'MG_JEN_Joneset::BJones()'
p26
sS'localscope'
p27
g5
sS'hide'
p28
(dp29
g17
I01
sg1
I01
sS'c00_default'
p30
I01
sS'stations'
p31
I01
sg9
I01
sg22
I01
sg20
I01
sS'uvplane_effect'
p32
I01
sS'subtile_size'
p33
I01
sS'tfdeg'
p34
I01
sS'parmtable'
p35
I01
sS'@Jsequence_KJones'
p36
I01
sS'@Jsequence_simul'
p37
I01
sS'@Jsequence'
p38
I01
sg16
I01
ssS'barescope'
p39
S'MG_JEN_JonesetBJones'
p40
sS'target_dir'
p41
S'.'
p42
sS'description'
p43
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p44
sS'oneliner'
p45
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-30 09:55'
p46
sS'target_function'
p47
S'BJones'
p48
sS'choice'
p49
(dp50
g7
(lp51
I01
aI00
aS'@@reset_funklet'
p52
asg1
(lp53
g2
aS'circular'
p54
ag8
asg9
(lp55
g10
aS'@@color'
p56
asg11
(lp57
g12
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p58
asg13
(lp59
I01
aI00
aS'@@save_all'
p60
asg14
(lp61
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p62
asg15
(lp63
I01
aI00
aS'@@auto_save'
p64
asg16
(lp65
I10
aS'@@size'
p66
asg17
(lp67
g18
aS'@@style'
p68
asg19
(lp69
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p70
asg20
(lp71
g21
aS'@@condeq_corrs'
p72
asg22
(lp73
NaS'@@funklet_shape'
p74
asg36
(lp75
S'BJones'
p76
aS'@@@Jsequence_KJones'
p77
asS'tdeg_Bimag'
p78
(lp79
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p80
aS'@@tdeg_Bimag'
p81
asg38
(lp82
g76
aS'@@@Jsequence'
p83
asg30
(lp84
F1.0
aS'@@c00_default'
p85
asS'fdeg_Bimag'
p86
(lp87
I3
aI4
aI5
aI6
aS'@fdeg_Breal'
p88
aS'@@fdeg_Bimag'
p89
asg32
(lp90
I00
aS'@@uvplane_effect'
p91
asg31
(lp92
(lp93
I0
aI1
aI2
aI3
aI4
aa(lp94
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp95
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp96
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p97
aS'@@stations'
p98
asg34
(lp99
NaS'@@tfdeg'
p100
asS'tdeg_Breal'
p101
(lp102
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p103
asS'use_previous'
p104
(lp105
I01
aI00
aS'@@use_previous'
p106
asg33
(lp107
NaS'@@subtile_size'
p108
asg35
(lp109
NaS'test'
p110
aS'@@parmtable'
p111
asg37
(lp112
g76
aS'@@@Jsequence_simul'
p113
assS'qual'
p114
S''
p115
sS'protected'
p116
I00
sS'datetime_defined'
p117
S'2006-03-30 09:55'
p118
sS'version'
p119
S'16dec2005'
p120
sS'target_module'
p121
S'MG_JEN_Joneset'
p122
sS'editable'
p123
(dp124
g7
I00
sg104
I00
sg15
I00
sg13
I00
ssS'inarg_specific'
p125
S'** Specific description of inarg record for: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-30 09:55'
p126
sS'mutable'
p127
(dp128
g32
I00
sg35
I00
sg1
I00
sg31
I00
ssS'last_edited'
p129
g118
sS'order'
p130
(lp131
g23
ag31
ag1
ag38
ag37
ag36
ag35
ag32
ag101
ag78
ag19
ag86
ag14
ag11
ag104
ag15
ag13
ag7
ag9
ag17
ag16
ag30
ag34
ag22
ag33
ag20
asS'help'
p132
(dp133
g7
S'if True, do NOT use any MeqParm table values when solvable'
p134
sg1
S'polarisation representation'
p135
sg9
S'plot_color'
p136
sg11
S'sub-tile size (None=entire tile)'
p137
sg13
S'if True, save the update result even if not converged'
p138
sg14
g137
sg15
S'if True, save the result of every iteration (slow!)'
p139
sg16
S'size of plotted symbol'
p140
sg17
S'plot_style'
p141
sg19
S'degree of freq polynomial'
p142
sg20
S'correlations to be used for solving'
p143
sg22
S'shape [time,freq] of default funklet'
p144
sg36
S'list membership indication (used in JEN_inargGui)'
p145
sg78
S'degree of time polynomial'
p146
sg38
g145
sg30
S'default value of c[0,0] coefficient'
p147
sg86
g142
sg32
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p148
sg31
S'the (subset of) stations to be used'
p149
sg34
S'(time,freq) polynomial degree'
p150
sg101
g146
sg104
S'if True, start with the previous solution'
p151
sg33
S'size (time-slots) of a domain sub-tile'
p152
sg35
S'name of the MeqParm table to be used'
p153
sg37
g145
sssg36
g76
sg78
g80
sg38
g76
sg30
F1.0
sg86
g88
sg32
g91
sg35
g111
sg31
g98
sg101
I0
sg104
I01
sg33
Nsg34
Nsg37
g76
ssg1
S'@@polrep'
p154
sg31
S'@@stations'
p155
sS'./MG_JEN_Joneset.DJones_WSRT()'
p156
(dp157
g7
I00
sg1
S'@@polrep'
p158
sg9
g10
sS'fdeg_Dell'
p159
S'@fdeg_Dang'
p160
sS'coupled_XY_Dell'
p161
I01
sg13
I00
sg35
S'@@parmtable'
p162
sS'subtile_size_Dang'
p163
Nsg15
I01
sg16
I10
sg17
g18
sg20
g21
sg22
Nsg23
(dp164
g25
S'MG_JEN_Joneset::DJones_WSRT()'
p165
sg27
g156
sg28
(dp166
g17
I01
sg1
I01
sg30
I01
sg31
I01
sg9
I01
sg22
I01
sg20
I01
sg32
I01
sg33
I01
sg34
I01
sg35
I01
sg36
I01
sg37
I01
sg38
I01
sg16
I01
ssg39
S'MG_JEN_JonesetDJones_WSRT'
p167
sg41
g42
sg43
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p168
sg45
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-30 09:55'
p169
sg47
S'DJones_WSRT'
p170
sg49
(dp171
g7
(lp172
I01
aI00
aS'@@reset_funklet'
p173
asg1
(lp174
g2
ag54
ag158
asg9
(lp175
g10
aS'@@color'
p176
asg159
(lp177
I0
aI1
aI2
aI3
ag160
aS'@@fdeg_Dell'
p178
asg161
(lp179
I01
aI00
aS'@@coupled_XY_Dell'
p180
asg13
(lp181
I01
aI00
aS'@@save_all'
p182
asg35
(lp183
Nag110
ag162
asg163
(lp184
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p185
asg15
(lp186
I01
aI00
aS'@@auto_save'
p187
asg16
(lp188
I10
aS'@@size'
p189
asg17
(lp190
g18
aS'@@style'
p191
asg20
(lp192
g21
aS'@@condeq_corrs'
p193
asg22
(lp194
NaS'@@funklet_shape'
p195
asg36
(lp196
S'DJones_WSRT'
p197
aS'@@@Jsequence_KJones'
p198
asS'subtile_size_Dell'
p199
(lp200
S'@subtile_size_Dang'
p201
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p202
asg38
(lp203
g197
aS'@@@Jsequence'
p204
asS'fdeg_Dang'
p205
(lp206
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p207
asg30
(lp208
F1.0
aS'@@c00_default'
p209
asg32
(lp210
I00
aS'@@uvplane_effect'
p211
asS'tdeg_Dell'
p212
(lp213
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p214
aS'@@tdeg_Dell'
p215
asS'coupled_XY_Dang'
p216
(lp217
I01
aI00
aS'@@coupled_XY_Dang'
p218
asS'tdeg_Dang'
p219
(lp220
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p221
asg31
(lp222
(lp223
I0
aI1
aI2
aI3
aI4
aa(lp224
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp225
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp226
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag97
aS'@@stations'
p227
asg104
(lp228
I01
aI00
aS'@@use_previous'
p229
asg33
(lp230
NaS'@@subtile_size'
p231
asg34
(lp232
NaS'@@tfdeg'
p233
asg37
(lp234
g197
aS'@@@Jsequence_simul'
p235
assg114
g115
sg116
I00
sg117
S'2006-03-30 09:55'
p236
sg119
g120
sg121
S'MG_JEN_Joneset'
p237
sg123
(dp238
g7
I00
sg161
I00
sg104
I00
sg216
I00
sg13
I00
sg15
I00
ssg125
S'** Specific description of inarg record for: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-30 09:55'
p239
sg127
(dp240
g32
I00
sg35
I00
sg1
I00
sg31
I00
ssg129
g236
sg130
(lp241
g23
ag31
ag1
ag38
ag37
ag36
ag216
ag161
ag35
ag32
ag219
ag212
ag205
ag159
ag163
ag199
ag104
ag15
ag13
ag7
ag9
ag17
ag16
ag30
ag34
ag22
ag33
ag20
asg132
(dp242
g7
g134
sg1
g135
sg9
g136
sg159
S'degree of freq polynomial'
p243
sg161
S'if True, XDell = -YDell per station'
p244
sg13
g138
sg35
g153
sg163
S'sub-tile size (None=entire tile)'
p245
sg15
g139
sg16
g140
sg17
g141
sg20
g143
sg22
g144
sg36
g145
sg199
g245
sg38
g145
sg205
g243
sg30
g147
sg32
g148
sg212
S'degree of time polynomial'
p246
sg216
S'if True, XDang = YDang per station'
p247
sg219
g246
sg31
g149
sg104
g151
sg33
g152
sg34
g150
sg37
g145
sssg36
g197
sg199
g201
sg38
g197
sg205
I0
sg30
F1.0
sg32
g211
sg212
g214
sg216
I01
sg219
I0
sg31
g227
sg104
I01
sg33
Nsg34
Nsg37
g197
ssS'./MG_JEN_Joneset.FJones()'
p248
(dp249
g7
I00
sg1
S'@@polrep'
p250
sg9
g10
sg13
I00
sg34
Nsg15
I01
sg16
I10
sg17
g18
sg20
g21
sg22
Nsg23
(dp251
g25
S'MG_JEN_Joneset::FJones()'
p252
sg27
g248
sg28
(dp253
g17
I01
sg1
I01
sg30
I01
sg31
I01
sg9
I01
sg22
I01
sg20
I01
sg32
I01
sg33
I01
sg34
I01
sg35
I01
sg36
I01
sg37
I01
sg38
I01
sg16
I01
ssg39
S'MG_JEN_JonesetFJones'
p254
sg41
g42
sg43
S'defines diagonal FJones Faraday rotation matrices'
p255
sg45
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-30 09:55'
p256
sg47
S'FJones'
p257
sg49
(dp258
g7
(lp259
I01
aI00
aS'@@reset_funklet'
p260
asg1
(lp261
g2
ag54
ag250
asg9
(lp262
g10
aS'@@color'
p263
asg13
(lp264
I01
aI00
aS'@@save_all'
p265
asg34
(lp266
NaS'@@tfdeg'
p267
asg15
(lp268
I01
aI00
aS'@@auto_save'
p269
asg16
(lp270
I10
aS'@@size'
p271
asg17
(lp272
g18
aS'@@style'
p273
asg20
(lp274
g21
aS'@@condeq_corrs'
p275
asg22
(lp276
NaS'@@funklet_shape'
p277
asg36
(lp278
S'FJones'
p279
aS'@@@Jsequence_KJones'
p280
asg38
(lp281
g279
aS'@@@Jsequence'
p282
asg30
(lp283
F1.0
aS'@@c00_default'
p284
asg32
(lp285
I00
aS'@@uvplane_effect'
p286
asg31
(lp287
(lp288
I0
aI1
aI2
aI3
aI4
aa(lp289
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp290
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp291
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag97
aS'@@stations'
p292
asS'tdeg_RM'
p293
(lp294
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p295
asg104
(lp296
I01
aI00
aS'@@use_previous'
p297
asS'fdeg_RM'
p298
(lp299
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p300
asg33
(lp301
NaS'@@subtile_size'
p302
asg35
(lp303
Nag110
aS'@@parmtable'
p304
asS'subtile_size_RM'
p305
(lp306
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p307
asg37
(lp308
g279
aS'@@@Jsequence_simul'
p309
assg114
g115
sg116
I00
sg117
S'2006-03-30 09:55'
p310
sg119
g120
sg121
S'MG_JEN_Joneset'
p311
sg123
(dp312
g7
I00
sg104
I00
sg15
I00
sg13
I00
ssg125
S'** Specific description of inarg record for: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-30 09:55'
p313
sg127
(dp314
g32
I00
sg35
I00
sg1
I00
sg31
I00
ssg129
g310
sg130
(lp315
g23
ag31
ag1
ag38
ag37
ag36
ag35
ag32
ag293
ag298
ag305
ag104
ag15
ag13
ag7
ag9
ag17
ag16
ag30
ag34
ag22
ag33
ag20
asg132
(dp316
g7
g134
sg1
g135
sg9
g136
sg13
g138
sg34
g150
sg15
g139
sg16
g140
sg17
g141
sg20
g143
sg22
g144
sg36
g145
sg38
g145
sg30
g147
sg32
g148
sg31
g149
sg293
S'degree of time polynomial'
p317
sg104
g151
sg298
S'degree of freq polynomial'
p318
sg33
g152
sg35
g153
sg305
S'sub-tile size (None=entire tile)'
p319
sg37
g145
sssg36
g279
sg38
g279
sg30
F1.0
sg32
g286
sg31
g292
sg293
I0
sg104
I01
sg298
I2
sg33
Nsg35
g304
sg305
I1
sg37
g279
ssg32
S'@@uvplane_effect'
p320
sg35
S'@@parmtable'
p321
sg23
(dp322
g25
S'MG_JEN_Cohset::Jones()'
p323
sg27
g3
sg28
(dp324
g1
I01
sg31
I01
sg32
I01
sg35
I01
sg36
I01
sg37
I01
sg38
I01
ssg39
S'MG_JEN_CohsetJones'
p325
sg41
g42
sg45
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-30 09:55'
p326
sg47
S'Jones'
p327
sg49
(dp328
g1
(lp329
g2
ag54
ag154
asg31
(lp330
(lp331
I0
aI1
aI2
aI3
aI4
aa(lp332
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp333
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp334
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag97
ag155
asg32
(lp335
I00
ag320
asg35
(lp336
Nag110
ag321
asg36
(lp337
NaS'@@@Jsequence_KJones'
p338
asg37
(lp339
NaS'@@@Jsequence_simul'
p340
asS'Jsequence'
p341
(lp342
(lp343
S'GJones'
p344
aa(lp345
g76
aa(lp346
g279
aa(lp347
S'KJones'
p348
aa(lp349
g197
aa(lp350
g344
ag197
aa(lp351
S'JJones'
p352
aa(lp353
aS'@@Jsequence'
p354
asg38
(lp355
NaS'@@@Jsequence'
p356
assg114
Nsg116
I00
sg117
S'2006-03-30 09:55'
p357
sg119
S'25dec2005'
p358
sg121
S'MG_JEN_Cohset'
p359
sg125
S'** Specific description of inarg record for: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-30 09:55'
p360
sS'MESSAGE'
p361
(dp362
S'1'
p363
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p364
sS'0'
p365
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p366
sS'3'
p367
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p368
sS'2'
p369
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p370
sS'5'
p371
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p372
sS'4'
p373
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p374
sS'6'
p375
S"  1: .../MG_JEN_Cohset.Jones() (qual=None): .modify(Jsequence):   []  ->  ['DJones_WSRT']"
p376
ssg129
g357
sg127
(dp377
g32
I00
sg35
I00
sg1
I00
sg31
I00
ssg130
(lp378
g23
ag31
ag1
ag38
ag37
ag36
ag35
ag32
ag341
aS'./MG_JEN_Joneset.GJones()'
p379
ag248
ag5
aS'./MG_JEN_Joneset.KJones()'
p380
ag156
aS'./MG_JEN_Joneset.JJones()'
p381
asg132
(dp382
g1
g135
sg31
g149
sg32
g148
sg35
g153
sg36
g145
sg37
g145
sg341
S'sequence of Jones matrices to be used'
p383
sg38
g145
ssg43
S'Make a Joneset by creating and multiplying a sequence of one ore more Jonesets'
p384
ssg380
(dp385
g1
S'@@polrep'
p386
sg31
S'@@stations'
p387
sg23
(dp388
g25
S'MG_JEN_Joneset::KJones()'
p389
sg27
g380
sg28
(dp390
g36
I01
sg37
I01
sg31
I01
sg1
I01
sg38
I01
ssg39
S'MG_JEN_JonesetKJones'
p391
sg41
g42
sg43
S'defines diagonal KJones matrices for DFT Fourier kernel'
p392
sg45
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-30 09:55'
p393
sg47
S'KJones'
p394
sg49
(dp395
g36
(lp396
g348
aS'@@@Jsequence_KJones'
p397
asg37
(lp398
g348
aS'@@@Jsequence_simul'
p399
asg31
(lp400
(lp401
I0
aI1
aI2
aI3
aI4
aa(lp402
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp403
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp404
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag97
ag387
asg1
(lp405
g2
ag54
ag386
asg38
(lp406
g348
aS'@@@Jsequence'
p407
assg114
g115
sg116
I00
sg117
S'2006-03-30 09:55'
p408
sg119
S'12dec2005'
p409
sg121
S'MG_JEN_Joneset'
p410
sg125
S'** Specific description of inarg record for: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-30 09:55'
p411
sg127
(dp412
g1
I00
sg31
I00
ssg129
g408
sg130
(lp413
g23
ag31
ag1
ag38
ag37
ag36
asg132
(dp414
g36
g145
sg37
g145
sg31
g149
sg1
g135
sg38
g145
sssg36
g348
sg37
g348
sg38
g348
ssg381
(dp415
g7
I00
sg1
S'@@polrep'
p416
sS'tdeg_Jreal'
p417
I0
sg9
g10
sg13
I00
sS'all4_always'
p418
Nsg35
S'@@parmtable'
p419
sS'subtile_size_Jreal'
p420
Nsg15
I01
sg16
I10
sg17
g18
sS'tdeg_Jimag'
p421
S'@tdeg_Jreal'
p422
sg20
g21
sg22
Nsg23
(dp423
g25
S'MG_JEN_Joneset::JJones()'
p424
sg27
g381
sg28
(dp425
g17
I01
sg1
I01
sg30
I01
sg31
I01
sg9
I01
sg22
I01
sg20
I01
sg32
I01
sg33
I01
sg34
I01
sg35
I01
sg36
I01
sg37
I01
sg38
I01
sg16
I01
ssg39
S'MG_JEN_JonesetJJones'
p426
sg41
g42
sg43
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p427
sg45
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-30 09:55'
p428
sg47
S'JJones'
p429
sg49
(dp430
g7
(lp431
I01
aI00
aS'@@reset_funklet'
p432
asg1
(lp433
g2
ag54
ag416
asg417
(lp434
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p435
asg9
(lp436
g10
aS'@@color'
p437
asg13
(lp438
I01
aI00
aS'@@save_all'
p439
asg418
(lp440
Na(lp441
I14
aa(lp442
I1
aaS'WSRT/WHAT'
p443
aS'@@all4_always'
p444
asg35
(lp445
Nag110
ag419
asg420
(lp446
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p447
asg15
(lp448
I01
aI00
aS'@@auto_save'
p449
asg16
(lp450
I10
aS'@@size'
p451
asg17
(lp452
g18
aS'@@style'
p453
asg421
(lp454
I0
aI1
aI2
aI3
ag422
aS'@@tdeg_Jimag'
p455
asg20
(lp456
g21
aS'@@condeq_corrs'
p457
asg22
(lp458
NaS'@@funklet_shape'
p459
asg36
(lp460
g352
aS'@@@Jsequence_KJones'
p461
asS'fdeg_Jreal'
p462
(lp463
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p464
asg30
(lp465
F1.0
aS'@@c00_default'
p466
asg32
(lp467
I00
aS'@@uvplane_effect'
p468
asS'fdeg_Jimag'
p469
(lp470
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p471
aS'@@fdeg_Jimag'
p472
asS'subtile_size_Jimag'
p473
(lp474
S'@subtile_size_Jreal'
p475
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p476
asg31
(lp477
(lp478
I0
aI1
aI2
aI3
aI4
aa(lp479
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp480
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp481
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag97
aS'@@stations'
p482
asS'diagonal_only'
p483
(lp484
I01
aI00
aS'@@diagonal_only'
p485
asg104
(lp486
I01
aI00
aS'@@use_previous'
p487
asg33
(lp488
NaS'@@subtile_size'
p489
asg34
(lp490
NaS'@@tfdeg'
p491
asg37
(lp492
g352
aS'@@@Jsequence_simul'
p493
asg38
(lp494
g352
aS'@@@Jsequence'
p495
assg114
g115
sg116
I00
sg117
S'2006-03-30 09:55'
p496
sg119
S'14feb2006'
p497
sg121
S'MG_JEN_Joneset'
p498
sg123
(dp499
g7
I00
sg104
I00
sg483
I00
sg15
I00
sg13
I00
ssg125
S'** Specific description of inarg record for: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-30 09:55'
p500
sg127
(dp501
g32
I00
sg35
I00
sg1
I00
sg31
I00
ssg129
g496
sg130
(lp502
g23
ag31
ag1
ag38
ag37
ag36
ag483
ag418
ag35
ag32
ag417
ag421
ag462
ag469
ag420
ag473
ag104
ag15
ag13
ag7
ag9
ag17
ag16
ag30
ag34
ag22
ag33
ag20
asg132
(dp503
g7
g134
sg1
g135
sg417
S'degree of time polynomial'
p504
sg9
g136
sg13
g138
sg418
S'stations for which all 4 elements will always be solved for'
p505
sg35
g153
sg420
S'sub-tile size (None=entire tile)'
p506
sg15
g139
sg16
g140
sg17
g141
sg421
g504
sg20
g143
sg22
g144
sg36
g145
sg462
S'degree of freq polynomial'
p507
sg30
g147
sg32
g148
sg469
g507
sg473
g506
sg31
g149
sg483
S'if True, solve for diagonal (11,22) elements only'
p508
sg104
g151
sg33
g152
sg34
g150
sg37
g145
sg38
g145
sssg36
g352
sg462
I0
sg30
F1.0
sg32
g468
sg469
g471
sg473
g475
sg31
g482
sg483
I00
sg104
I01
sg33
Nsg34
Nsg37
g352
sg38
g352
ssg36
Nsg37
Nsg341
(lp509
g197
asg379
(dp510
g7
I00
sg1
S'@@polrep'
p511
sS'fdeg_Ggain'
p512
I0
sg9
g10
sg13
I00
sg35
S'@@parmtable'
p513
sg15
I01
sg16
I10
sg17
g18
sS'subtile_size_Ggain'
p514
I1
sg20
g21
sg22
Nsg23
(dp515
g25
S'MG_JEN_Joneset::GJones()'
p516
sg27
g379
sg28
(dp517
g17
I01
sg1
I01
sg30
I01
sg31
I01
sg9
I01
sg38
I01
sg22
I01
sg20
I01
sg32
I01
sg33
I01
sg34
I01
sg35
I01
sg36
I01
sg37
I01
sS'Gpolar'
p518
I01
sg16
I01
ssg39
S'MG_JEN_JonesetGJones'
p519
sg41
g42
sg43
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p520
sg45
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-30 09:55'
p521
sg47
S'GJones'
p522
sg49
(dp523
g7
(lp524
I01
aI00
aS'@@reset_funklet'
p525
asg1
(lp526
g2
ag54
ag511
asg512
(lp527
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p528
asg9
(lp529
g10
aS'@@color'
p530
asg13
(lp531
I01
aI00
aS'@@save_all'
p532
asg35
(lp533
Nag110
ag513
asg15
(lp534
I01
aI00
aS'@@auto_save'
p535
asg16
(lp536
I10
aS'@@size'
p537
asg17
(lp538
g18
aS'@@style'
p539
asg514
(lp540
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p541
asg20
(lp542
g21
aS'@@condeq_corrs'
p543
asg22
(lp544
NaS'@@funklet_shape'
p545
asg36
(lp546
g344
aS'@@@Jsequence_KJones'
p547
asg38
(lp548
g344
aS'@@@Jsequence'
p549
asg30
(lp550
F1.0
aS'@@c00_default'
p551
asS'tdeg_Gphase'
p552
(lp553
I0
aI1
aI2
aI3
aS'@tdeg_Ggain'
p554
aS'@@tdeg_Gphase'
p555
asS'tdeg_Ggain'
p556
(lp557
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p558
asS'fdeg_Gphase'
p559
(lp560
I0
aI1
aI2
aI3
aS'@fdeg_Ggain'
p561
aS'@@fdeg_Gphase'
p562
asS'subtile_size_Gphase'
p563
(lp564
S'@subtile_size_Ggain'
p565
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p566
asg518
(lp567
I01
aI00
aS'@@Gpolar'
p568
asg32
(lp569
I00
aS'@@uvplane_effect'
p570
asg31
(lp571
(lp572
I0
aI1
aI2
aI3
aI4
aa(lp573
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp574
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp575
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag97
aS'@@stations'
p576
asg104
(lp577
I01
aI00
aS'@@use_previous'
p578
asg33
(lp579
NaS'@@subtile_size'
p580
asg34
(lp581
NaS'@@tfdeg'
p582
asg37
(lp583
g344
aS'@@@Jsequence_simul'
p584
assg114
g115
sg116
I00
sg117
S'2006-03-30 09:55'
p585
sg119
S'15dec2005'
p586
sg121
S'MG_JEN_Joneset'
p587
sg123
(dp588
g7
I00
sg104
I00
sg518
I00
sg15
I00
sg13
I00
ssg125
S'** Specific description of inarg record for: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-30 09:55'
p589
sg127
(dp590
g32
I00
sg35
I00
sg1
I00
sg31
I00
ssg129
g585
sg130
(lp591
g23
ag31
ag1
ag38
ag37
ag36
ag518
ag35
ag32
ag556
ag552
ag512
ag559
ag514
ag563
ag104
ag15
ag13
ag7
ag9
ag17
ag16
ag30
ag34
ag22
ag33
ag20
asg132
(dp592
g7
g134
sg1
g135
sg512
S'degree of freq polynomial'
p593
sg9
g136
sg13
g138
sg35
g153
sg15
g139
sg16
g140
sg17
g141
sg514
S'sub-tile size (None=entire tile)'
p594
sg20
g143
sg22
g144
sg36
g145
sg38
g145
sg30
g147
sg552
S'degree of time polynomial'
p595
sg556
g595
sg559
g593
sg563
g594
sg518
S'obsolete, kept only for upward compatibility'
p596
sg32
g148
sg31
g149
sg104
g151
sg33
g152
sg34
g150
sg37
g145
sssg36
g344
sg38
g344
sg30
F1.0
sg552
g554
sg556
I0
sg559
g561
sg563
g565
sg518
I01
sg32
g570
sg31
g576
sg104
I01
sg33
Nsg34
Nsg37
g344
ssg38
NssS'_JEN_inarg_separator_record:_1'
p597
(dp598
S'txt'
p599
S'operations on input uv-data'
p600
ssS'./MG_JEN_Sixpack.get_Sixpack()'
p601
(dp602
S'./MG_JEN_Sixpack.newstar_source()'
p603
(dp604
S'f0'
p605
F1000000.0
sg7
I00
sS'major'
p606
F0.0
sS'unsolvable'
p607
I00
sg9
g10
sg13
I00
sS'shape'
p608
S'point'
p609
sg35
NsS'Upct'
p610
I-10
sg15
I01
sg16
I10
sg17
g18
sS'I0'
p611
F1.0
sS'SI'
p612
Nsg20
g21
sS'Vpct'
p613
Nsg22
NsS'pa'
p614
F0.0
sS'RA'
p615
F1.4950000000000001
sS'RM'
p616
NsS'minor'
p617
F0.0
sg23
(dp618
g25
S'MG_JEN_Sixpack::newstar_source()'
p619
sg27
g603
sg361
(dp620
g363
S'  2: ...../MG_JEN_Sixpack.newstar_source() (qual=None): .modify(Upct):   None  ->  -10'
p621
sg365
S'  2: ...../MG_JEN_Sixpack.newstar_source() (qual=None): .modify(Qpct):   None  ->  10'
p622
sg369
S'  2: ...../MG_JEN_Sixpack.newstar_source() (qual=None): .modify(punit):   unpol  ->  QU'
p623
ssg28
(dp624
g605
I01
sg606
I01
sg607
I01
sS'name'
p625
I01
sg30
I01
sg9
I01
sg33
I01
sg608
I01
sS'fsr_trace'
p626
I01
sS'punit'
p627
I00
sg22
I01
sg614
I01
sg20
I01
sg34
I01
sg17
I01
sg617
I01
sg16
I01
ssg39
S'MG_JEN_Sixpacknewstar_source'
p628
sS'callback'
p629
(dp630
g627
I01
ssg41
g42
sg43
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p631
sg45
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-30 09:55'
p632
sg47
S'newstar_source'
p633
sg49
(dp634
g605
(lp635
F1000000.0
aS'@@f0'
p636
asg7
(lp637
I01
aI00
aS'@@reset_funklet'
p638
asg606
(lp639
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p640
asg607
(lp641
I01
aI00
aS'@@unsolvable'
p642
asg9
(lp643
g10
aS'@@color'
p644
asg13
(lp645
I01
aI00
aS'@@save_all'
p646
asg608
(lp647
g609
aS'ell.gauss'
p648
aS'@@shape'
p649
asg35
(lp650
NaS'@@parmtable'
p651
asg610
(lp652
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p653
asg15
(lp654
I01
aI00
aS'@@auto_save'
p655
asg16
(lp656
I10
aS'@@size'
p657
asg17
(lp658
g18
aS'@@style'
p659
asg611
(lp660
F1.0
aF10.0
aS'@@I0'
p661
asg612
(lp662
NaF-0.69999999999999996
a(lp663
F0.44700000000000001
aF-0.184
aaS'@@SI'
p664
asg20
(lp665
g21
aS'@@condeq_corrs'
p666
asg613
(lp667
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p668
asg22
(lp669
NaS'@@funklet_shape'
p670
asg614
(lp671
F0.0
aF1.0
aF-0.5
aS'@@pa'
p672
asg615
(lp673
F0.0
aF0.5
aF1.0
aF1.4950000000000001
aF4.3570000000000002
aS'@@RA'
p674
asg616
(lp675
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p676
asg617
(lp677
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p678
asg30
(lp679
F1.0
aS'@@c00_default'
p680
asS'Qpct'
p681
(lp682
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p683
asg627
(lp684
S'unpol'
p685
aS'unpol2'
p686
aS'unpol10'
p687
aS'QUV'
p688
aS'QU'
p689
aS'Qonly'
p690
aS'Uonly'
p691
aS'Vonly'
p692
aS'3c147'
p693
aS'3c286'
p694
aS'3c48'
p695
aS'3c295'
p696
aS'D1'
p697
aS'RMtest'
p698
aS'SItest'
p699
aS'@@punit'
p700
asS'Dec'
p701
(lp702
F0.5
aF1.0
aF0.87
aF1.0920000000000001
aS'@@Dec'
p703
asg625
(lp704
NaS'@@name'
p705
asg626
(lp706
I01
aI00
aS'@@fsr_trace'
p707
asg104
(lp708
I01
aI00
aS'@@use_previous'
p709
asg33
(lp710
NaS'@@subtile_size'
p711
asg34
(lp712
NaS'@@tfdeg'
p713
assg114
g115
sg119
S'10feb2006'
p714
sg117
S'2006-03-30 09:55'
p715
sg121
S'MG_JEN_Sixpack'
p716
sg123
(dp717
g7
I00
sg607
I00
sg626
I00
sg104
I00
sg13
I00
sg15
I00
ssg125
S'** Specific description of inarg record for: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-30 09:55'
p718
sg116
I00
sg129
g715
sg130
(lp719
g23
ag627
ag625
ag35
ag607
ag611
ag681
ag610
ag613
ag616
ag612
ag605
ag615
ag701
ag626
ag608
ag606
ag617
ag614
ag104
ag15
ag13
ag7
ag9
ag17
ag16
ag30
ag34
ag22
ag33
ag20
asg132
(dp720
g605
S'reference freq (Hz): I=I0 @ f=f0'
p721
sg7
g134
sg606
S'major axis (arcsec)'
p722
sg607
S'if True, do NOT store solvegroup/parmgroup info'
p723
sg9
g136
sg13
g138
sg608
S'source shape'
p724
sg35
S'name of the MeqParm table (AIPS++)'
p725
sg610
S'Stokes U (percentage of I)'
p726
sg15
g139
sg16
g140
sg17
g141
sg611
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p727
sg612
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p728
sg20
g143
sg613
S'Stokes V (percentage of I)'
p729
sg22
g144
sg614
S'position angle (rad)'
p730
sg615
S'Right Ascension (rad, J2000)'
p731
sg616
S'Intrinsic Rotation Measure (rad/m2)'
p732
sg617
S'minor axis (arcsec)'
p733
sg30
g147
sg681
S'Stokes Q (percentage of I)'
p734
sg627
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n- D1:      cps in D1.MS \n'
p735
sg701
S'Declination (rad, J2000)'
p736
sg626
S'If True, attach to forest state record'
p737
sg104
g151
sg33
g152
sg34
g150
sssS'slave'
p738
I01
sg30
F1.0
sg681
I10
sg627
g689
sg701
F0.87
sg625
Nsg626
I01
sg104
I01
sg33
Nsg34
Nssg23
(dp739
g25
S'MG_JEN_Sixpack::get_Sixpack()'
p740
sg27
g601
sg28
(dp741
S'punit_from_LSM'
p742
I00
ssg39
S'MG_JEN_Sixpackget_Sixpack'
p743
sS'browse'
p744
(dp745
g742
S'*.lsm'
p746
ssg41
g42
sg45
S'MG_JEN_Sixpack::get_Sixpack()  version=22mar2006  defined=2006-03-30 09:55'
p747
sg47
S'get_Sixpack'
p748
sg49
(dp749
g742
(lp750
NaS'@@punit_from_LSM'
p751
assg114
Nsg116
I00
sg117
S'2006-03-30 09:55'
p752
sg119
S'22mar2006'
p753
sg121
S'MG_JEN_Sixpack'
p754
sg125
S'** Specific description of inarg record for: MG_JEN_Sixpack::get_Sixpack()  version=22mar2006  defined=2006-03-30 09:55'
p755
sg361
(dp756
g365
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p757
ssg129
g752
sg130
(lp758
g23
ag742
ag603
asg132
(dp759
g742
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p760
ssg43
S'Get a Sixpack, either from a LSM or a Newstar source'
p761
ssg742
NssS'ms_name'
p762
S'D1.MS'
p763
sg35
Nsg23
(dp764
g27
S'./MG_JEN_cps.'
p765
sg132
(dp766
g1
g135
sS'master_reqseq'
p767
S'if True, use a master reqseq for solver(s)'
p768
sg31
g149
sS'insert_flagger'
p769
S'if True, insert a flagger'
p770
sS'redun'
p771
S'if True, redundant spacing calibration'
p772
sS'insert_solver'
p773
S'if True, insert a solver'
p774
sg762
S'name of the (AIPS++) Measurement Set'
p775
sS'chain_solvers'
p776
S'if True, chain the solvers (recommended)'
p777
sS'num_cells'
p778
S'if defined, ModRes argument [ntime,nfreq]'
p779
sg35
g153
sg36
g145
sg37
g145
sS'tile_size'
p780
S'(inputrec) size (in time-slots) of the input data-tile'
p781
sg32
g148
sg38
g145
ssS'reference'
p782
I00
sg41
g42
sg121
S'MG_JEN_cps'
p783
sg28
(dp784
g1
I00
sg767
I01
sg31
I00
sS'last_changed'
p785
I01
sg771
I00
sg32
I00
sg776
I01
sg778
I00
sg36
I01
sg37
I01
sg38
I01
ssg744
(dp786
g762
S'*.MS'
p787
ssg119
g586
sg43
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p788
sg123
(dp789
g767
I00
sg769
I00
sg771
I00
sg773
I00
sg785
I00
ssg45
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p790
sg49
(dp791
g1
(lp792
g2
ag54
aS'@@polrep'
p793
asg767
(lp794
I01
aI00
aS'@@master_reqseq'
p795
asg31
(lp796
(lp797
I0
aI1
aI2
aI3
aI4
aa(lp798
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp799
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp800
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag97
aS'@@stations'
p801
asg769
(lp802
I01
aI00
aS'@@insert_flagger'
p803
asg785
(lp804
S'd30jan2006'
p805
aS'@@last_changed'
p806
asg773
(lp807
I01
aI00
aS'@@insert_solver'
p808
asg771
(lp809
I01
aI00
aS'@@redun'
p810
asg762
(lp811
g763
aS'@@ms_name'
p812
asg776
(lp813
I01
aS'@@chain_solvers'
p814
asg778
(lp815
Na(lp816
I5
aI2
aa(lp817
I2
aI2
aa(lp818
I3
aI3
aaS'@@num_cells'
p819
asg35
(lp820
Nag110
aS'@@parmtable'
p821
asg36
(lp822
NaS'@@@Jsequence_KJones'
p823
asg37
(lp824
NaS'@@@Jsequence_simul'
p825
asg780
(lp826
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p827
asg32
(lp828
I00
aS'@@uvplane_effect'
p829
asg38
(lp830
NaS'@@@Jsequence'
p831
assg114
Nsg129
S'2006-03-30 09:55'
p832
sS'HISTORY'
p833
(dp834
g363
S'2006-03-30 09:55: Derived from: MG_JEN_cps_DJones.inarg'
p835
sg365
S'2006-03-30 09:55: Derived from: MG_JEN_cps.inarg'
p836
ssg25
S'MG_JEN_cps'
p837
sg125
S'Predefined inarg record for solving for DJones on a Central Point Source'
p838
sS'save_file'
p839
S'MG_JEN_cps_DJones_protected.inarg'
p840
sS'file_filter'
p841
S'MG_JEN_cps*.inarg'
p842
sg47
g115
sg116
I01
sg117
g832
sg361
(dp843
S'11'
p844
S".modify():   ** OK ** (['data_column_name', 'solvegroup', 'Jsequence'])"
p845
sS'10'
p846
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p847
sS'12'
p848
S".modify():   ** OK ** (['I0', 'Qpct', 'Vpct', 'SI', 'RM', 'Upct', 'punit'])"
p849
sg363
S".modify():   ** OK ** (['uvplane_effect'])"
p850
sg365
S'  0: ./MG_JEN_cps. (qual=None): .modify(uvplane_effect):   False  ->  True'
p851
sg367
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p852
sg369
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p853
sg371
S'** JEN_inarg.separator(): : insert a solver'
p854
sg373
S'** JEN_inarg.separator(): : operations on input uv-data'
p855
sS'7'
p856
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p857
sg375
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.get_Sixpack()'
p858
sS'9'
p859
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p860
sS'8'
p861
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict_cps()'
p862
ssg130
(lp863
g23
aS'script_name'
p864
ag773
ag769
ag785
ag762
ag780
ag31
ag1
ag38
ag37
ag36
ag35
ag32
ag776
ag767
ag771
ag778
aS'./MG_JEN_exec.stream_control()'
p865
aS'./MG_JEN_Cohset.make_spigots()'
p866
ag597
aS'_JEN_inarg_separator_record:_2'
p867
ag601
ag3
aS'./MG_JEN_Cohset.predict_cps()'
p868
aS'./MG_JEN_Cohset.insert_solver()'
p869
aS'./MG_JEN_Cohset.make_sinks()'
p870
assg870
(dp871
S'fullDomainMux'
p872
I01
sS'output_col'
p873
S'PREDICT'
p874
sS'visu'
p875
I01
sS'flag'
p876
I00
sg23
(dp877
g25
S'MG_JEN_Cohset::make_sinks()'
p878
sg27
g870
sg129
S'2006-03-30 09:55'
p879
sg125
S'** Specific description of inarg record for: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-30 09:55'
p880
sg39
S'MG_JEN_Cohsetmake_sinks'
p881
sg41
g42
sg45
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-30 09:55'
p882
sg47
S'make_sinks'
p883
sg49
(dp884
g876
(lp885
I01
aI00
aS'@@flag'
p886
asg875
(lp887
I01
aI00
aS'@@visu'
p888
asg872
(lp889
I01
aI00
aS'@@fullDomainMux'
p890
asg873
(lp891
g874
aS'RESIDUALS'
p892
aS'DATA'
p893
aS'@@output_col'
p894
asS'visu_array_config'
p895
(lp896
I01
aI00
aS'@@visu_array_config'
p897
assg114
Nsg119
g358
sg117
g879
sg121
S'MG_JEN_Cohset'
p898
sg123
(dp899
g876
I00
sg875
I00
sg872
I00
sg895
I00
ssg116
I00
sg130
(lp900
g23
ag873
ag895
ag875
ag876
ag872
asg132
(dp901
g876
S'if True, insert a flagger for the output uv-data'
p902
sg875
S'if True, visualise the output uv-data'
p903
sg872
S'if True, attach an extra VisDataMux'
p904
sg873
S'name of the logical (VisTile) output column'
p905
sg895
S'if True, visualise the array config (from MS)'
p906
ssg43
S'Make sink nodes in the given Cohset object'
p907
ssg895
I01
ssg780
I10
sg866
(dp908
g876
I00
sg875
I01
sg23
(dp909
g25
S'MG_JEN_Cohset::make_spigots()'
p910
sg27
g866
sg129
S'2006-03-30 09:55'
p911
sg28
(dp912
S'input_col'
p913
I01
ssg39
S'MG_JEN_Cohsetmake_spigots'
p914
sg41
g42
sg45
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-30 09:55'
p915
sg47
S'make_spigots'
p916
sg49
(dp917
g876
(lp918
I01
aI00
aS'@@flag'
p919
asS'MS_corr_index'
p920
(lp921
(lp922
I0
aI1
aI2
aI3
aa(lp923
I0
aI-1
aI-1
aI1
aa(lp924
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p925
asg913
(lp926
g893
ag874
ag892
aS'@@input_col'
p927
asg875
(lp928
I01
aI00
aS'@@visu'
p929
assg114
Nsg119
g358
sg117
g911
sg121
S'MG_JEN_Cohset'
p930
sg123
(dp931
g876
I00
sg875
I00
ssg125
S'** Specific description of inarg record for: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-30 09:55'
p932
sg116
I00
sg130
(lp933
g23
ag913
ag920
ag875
ag876
asg132
(dp934
g876
S'if True, insert a flagger for the input uv-data'
p935
sg920
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p936
sg913
S'name of the logical (VisTile) input column'
p937
sg875
S'if True, visualise the input uv-data'
p938
ssg43
S'Make spigot nodes in the given Cohset object'
p939
ssg913
g893
sg920
(lp940
I0
aI1
aI2
aI3
assg38
Nsg36
Nsg769
I00
sg785
g805
sg32
I01
sg868
(dp941
g1
S'@@polrep'
p942
sg31
S'@@stations'
p943
sg23
(dp944
g25
S'MG_JEN_Cohset::predict_cps()'
p945
sg27
g868
sg28
(dp946
g36
I01
sg37
I01
sg38
I01
sg1
I01
sg31
I01
ssg39
S'MG_JEN_Cohsetpredict_cps'
p947
sg41
g42
sg45
S'MG_JEN_Cohset::predict_cps()  version=20mar2006  defined=2006-03-30 09:55'
p948
sg47
S'predict_cps'
p949
sg49
(dp950
g36
(lp951
NaS'@@@Jsequence_KJones'
p952
asg37
(lp953
NaS'@@@Jsequence_simul'
p954
asg38
(lp955
NaS'@@@Jsequence'
p956
asg1
(lp957
g2
ag54
ag942
asg31
(lp958
(lp959
I0
aI1
aI2
aI3
aI4
aa(lp960
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp961
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp962
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag97
ag943
assg114
Nsg116
I00
sg117
S'2006-03-30 09:55'
p963
sg119
S'20mar2006'
p964
sg121
S'MG_JEN_Cohset'
p965
sg125
S'** Specific description of inarg record for: MG_JEN_Cohset::predict_cps()  version=20mar2006  defined=2006-03-30 09:55'
p966
sg127
(dp967
g1
I00
sg31
I00
ssg129
g963
sg130
(lp968
g23
ag31
ag1
ag38
ag37
ag36
asg132
(dp969
g36
g145
sg37
g145
sg38
g145
sg1
g135
sg31
g149
ssg43
S'Obsolete (upward compatibility) version of .predict_cps()'
p970
ssg36
Nsg37
Nsg38
Nssg864
g837
sg778
Nsg767
I00
sg31
g797
sg865
(dp971
S'channel_start_index'
p972
I10
sS'data_column_name'
p973
S'CORRECTED_DATA'
p974
sS'predict_column'
p975
g974
sg762
S'@@ms_name'
p976
sg23
(dp977
g27
g865
sg132
(dp978
g972
S'(inputrec.sel) index of first selected freq channel'
p979
sg973
S'(inputrec) MS input column'
p980
sg975
S'MS output column to be associated with the VisTile predict-column'
p981
sg762
g775
sg780
g781
sS'channel_increment'
p982
S'(inputrec.sel) take every nth channel (1=all)'
p983
sS'channel_end_index'
p984
S'(inputrec.sel) index of last selected freq channel'
p985
sS'write_flags'
p986
S'(outputrec) if True, write flags to MS'
p987
ssg41
g42
sg121
S'MG_JEN_exec'
p988
sg28
(dp989
g762
I01
sg780
I01
ssg744
(dp990
g762
g787
ssg119
S'20jan2006'
p991
sg127
(dp992
g762
I00
sg780
I00
ssg43
S'** Description of script: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p993
sg123
(dp994
g986
I00
ssg45
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p995
sg49
(dp996
g972
(lp997
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p998
asg973
(lp999
g893
ag974
aS'@@data_column_name'
p1000
asg975
(lp1001
g893
ag974
aS'MODEL_DATA'
p1002
aS'@@predict_column'
p1003
asg762
(lp1004
g763
ag976
asg780
(lp1005
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p1006
asg982
(lp1007
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p1008
asg984
(lp1009
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p1010
asg986
(lp1011
I01
aI00
aS'@@write_flags'
p1012
assg114
Nsg129
S'2006-03-30 09:55'
p1013
sg25
S'MG_JEN_exec::stream_control()'
p1014
sg125
S'** Specific description of inarg record for: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p1015
sg39
S'MG_JEN_execstream_control'
p1016
sg47
S'stream_control'
p1017
sg116
I00
sg117
g1013
sg361
(dp1018
g365
S'  1: .../MG_JEN_exec.stream_control() (qual=None): .modify(data_column_name):   DATA  ->  CORRECTED_DATA'
p1019
ssg130
(lp1020
g23
ag762
ag780
ag973
ag972
ag984
ag982
ag986
ag975
assg780
g1006
sg982
I1
sg984
I50
sg986
I00
ssg771
I00
sg773
I01
sg867
(dp1021
g599
S'insert a solver'
p1022
ssg776
I01
sg37
Nsg869
(dp1023
S'correct_after'
p1024
I01
sg767
S'@@master_reqseq'
p1025
sS'condeq_unop'
p1026
Nsg875
I01
sg771
S'@@redun'
p1027
sS'solver_subtree'
p1028
NsS'subtract_after'
p1029
I00
sg776
S'@@chain_solvers'
p1030
sg23
(dp1031
g25
S'MG_JEN_Cohset::insert_solver()'
p1032
sg27
g869
sg28
(dp1033
g767
I01
sg771
I01
sg1028
I01
sg776
I01
sS'flag_residuals'
p1034
I01
sg778
I01
ssg39
S'MG_JEN_Cohsetinsert_solver'
p1035
sg41
g42
sg45
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-30 09:55'
p1036
sg47
S'insert_solver'
p1037
sg49
(dp1038
g1024
(lp1039
I01
aI00
aS'@@correct_after'
p1040
asg767
(lp1041
I01
aI00
ag1025
asg1026
(lp1042
NaS'Abs'
p1043
aS'Arg'
p1044
aS'@@condeq_unop'
p1045
asg875
(lp1046
I01
aI00
aS'@@visu'
p1047
asg771
(lp1048
I01
aI00
ag1027
asg1028
(lp1049
NaS'@@solver_subtree'
p1050
asg1029
(lp1051
I01
aI00
aS'@@subtract_after'
p1052
asg776
(lp1053
I01
ag1030
asg1034
(lp1054
I01
aI00
aS'@@flag_residuals'
p1055
asg778
(lp1056
Na(lp1057
I5
aI2
aa(lp1058
I2
aI2
aa(lp1059
I3
aI3
aaS'@@num_cells'
p1060
assg114
Nsg116
I00
sg117
S'2006-03-30 09:55'
p1061
sg119
g358
sg121
S'MG_JEN_Cohset'
p1062
sg123
(dp1063
g1024
I00
sg767
I00
sg875
I00
sg771
I00
sg1029
I00
sg1034
I00
ssg125
S'** Specific description of inarg record for: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-30 09:55'
p1064
sg361
(dp1065
g365
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p1066
ssg129
g1061
sg127
(dp1067
g771
I00
sg776
I00
sg767
I00
sg778
I00
ssg130
(lp1068
g23
ag1028
ag771
ag778
ag776
ag767
ag1026
ag875
ag1029
ag1024
ag1034
aS'./MG_JEN_Cohset.solver_subtree()'
p1069
asg132
(dp1070
g1024
S'if True, correct measured with predicted.Joneset'
p1071
sg767
g768
sg1026
S'Optional unary operation on Condeq inputs'
p1072
sg875
S'if True, include full visualisation'
p1073
sg771
g772
sg1028
S'solver subtree qualifier(s)'
p1074
sg1029
S'if True, subtract predicted from measured'
p1075
sg776
g777
sg1034
S'if True, flag the residuals'
p1076
sg778
g779
ssg43
S'insert one or more solver subtrees in the data stream'
p1077
ssg778
g1060
sg1069
(dp1078
S'rmin'
p1079
NsS'setBalanced'
p1080
I00
sg875
I01
sS'epsilon'
p1081
F0.0001
sS'rmax'
p1082
NsS'derivative_eps'
p1083
F1e-08
sS'usesvd'
p1084
I01
sS'debug_level'
p1085
I10
sS'solvegroup'
p1086
(lp1087
S'DJones'
p1088
asg23
(dp1089
g25
S'MG_JEN_Cohset::solver_subtree()'
p1090
sg27
g1069
sg361
(dp1091
g365
S"  2: ...../MG_JEN_Cohset.solver_subtree() (qual=None): .modify(solvegroup):   []  ->  ['DJones']"
p1092
ssg28
(dp1093
g1085
I01
sg1083
I01
sg1080
I01
sS'epsval'
p1094
I01
sg778
I00
ssg39
S'MG_JEN_Cohsetsolver_subtree'
p1095
sg41
g42
sg43
S'Make a solver-subtree for the given Condeq Cohset'
p1096
sg45
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-30 09:55'
p1097
sg47
S'solver_subtree'
p1098
sg49
(dp1099
g1079
(lp1100
NaI100
aI200
aI500
aS'@@rmin'
p1101
asg875
(lp1102
I01
aI00
aS'@@visu'
p1103
asg1081
(lp1104
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p1105
asS'colin_factor'
p1106
(lp1107
F1e-08
aF0.0
aS'@@colin_factor'
p1108
asg1082
(lp1109
NaI500
aI1000
aI2000
aS'@@rmax'
p1110
asg1083
(lp1111
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@derivative_eps'
p1112
asg1084
(lp1113
I01
aI00
aS'@@usesvd'
p1114
asg1085
(lp1115
I10
aS'@@debug_level'
p1116
asg1086
(lp1117
(lp1118
a(lp1119
g344
aa(lp1120
S'Ggain'
p1121
aa(lp1122
S'Gphase'
p1123
aa(lp1124
S'Gpol1'
p1125
aa(lp1126
S'Gpol2'
p1127
aa(lp1128
g352
aa(lp1129
g352
aS'stokesU'
p1130
aa(lp1131
g352
aS'stokesQ'
p1132
aa(lp1133
g352
aS'stokesV'
p1134
aa(lp1135
S'stokesQU'
p1136
ag352
aa(lp1137
S'stokesQUV'
p1138
ag352
aa(lp1139
g344
aS'stokesI'
p1140
aa(lp1141
g1140
aa(lp1142
S'stokesIQU'
p1143
aa(lp1144
S'stokesIQUV'
p1145
aa(lp1146
S'stokesIV'
p1147
aa(lp1148
g1136
aa(lp1149
g1138
aa(lp1150
g344
ag1088
aa(lp1151
g1088
aa(lp1152
S'Dang'
p1153
aa(lp1154
S'Dell'
p1155
aa(lp1156
S'Dreal'
p1157
aa(lp1158
S'Dimag'
p1159
aa(lp1160
g344
ag1088
ag279
aa(lp1161
g279
aa(lp1162
g344
ag76
aa(lp1163
g76
aa(lp1164
S'Breal'
p1165
aa(lp1166
S'Bimag'
p1167
aa(lp1168
S'Bpol1'
p1169
aa(lp1170
S'Bpol2'
p1171
aaS'@@solvegroup'
p1172
asg1094
(lp1173
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsval'
p1174
asg778
(lp1175
Na(lp1176
I5
aI2
aa(lp1177
I2
aI2
aa(lp1178
I3
aI3
aaS'@@num_cells'
p1179
asg1080
(lp1180
I01
aI00
aS'@@setBalanced'
p1181
asS'num_iter'
p1182
(lp1183
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1184
asS'condition'
p1185
(lp1186
NaS'Gphase_X_sum=0.0'
p1187
aS'Gphase_Y_sum=0.0'
p1188
a(lp1189
g1187
ag1188
aa(lp1190
S'Gphase_X_first=0.0'
p1191
aS'Gphase_Y_first=0.0'
p1192
aa(lp1193
S'Gphase_X_last=0.0'
p1194
aS'Gphase_Y_last=0.0'
p1195
aaS'Dang_sum=0.0'
p1196
a(lp1197
S'Bimag_X_sum=0.0'
p1198
aS'Bimag_Y_sum=0.0'
p1199
aa(lp1200
S'Breal_X_product=1.0'
p1201
aS'Breal_Y_product=1.0'
p1202
aaS'@@condition'
p1203
asS'history'
p1204
(lp1205
I01
aI00
aS'@@history'
p1206
assg114
Nsg119
S'20dec2005'
p1207
sg117
S'2006-03-30 09:55'
p1208
sg121
S'MG_JEN_Cohset'
p1209
sg123
(dp1210
g1084
I00
sg1080
I00
sg875
I00
sg1204
I00
ssg125
S'** Specific description of inarg record for: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-30 09:55'
p1211
sg116
I00
sg129
g1208
sg130
(lp1212
g23
ag1086
ag1185
ag1079
ag1082
ag778
ag1182
ag1081
ag1094
ag1083
ag1106
ag1084
ag1080
ag1085
ag875
ag1204
asg132
(dp1213
g1079
S'if specified, only use baselines>=rmin'
p1214
sg875
S'if True, include visualisation'
p1215
sg1081
S'iteration control criterion...'
p1216
sg1106
S'colinearity factor'
p1217
sg1082
S'if specified, only use baselines<=rmax'
p1218
sg1083
S'NEW: also iteration control...'
p1219
sg1084
S'if True, use Singular Value Decomposition (SVD)'
p1220
sg1085
S'solver debug_level'
p1221
sg1086
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p1222
sg1094
S'NEW: WNB version of epsilon....'
p1223
sg778
g779
sg1080
S'NEW: if True, add (..) to diagonal, otherwise multiply (1+lambda)'
p1224
sg1182
S'max number of iterations (now also in fitter)'
p1225
sg1185
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p1226
sg1204
S'if True, include history collection of metrics'
p1227
sssg778
Nsg1094
F1e-08
sg1204
I01
sg1182
I5
sg1185
Nsg1106
F0.0
ssg1034
I00
ss.