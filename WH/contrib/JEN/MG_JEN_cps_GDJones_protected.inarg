(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I86
sg17
I91
sg21
I88
sg38
I87
sg25
I90
sg44
I89
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-10 18:22'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I110
sg129
I111
sg131
I109
sg142
I113
sg144
I108
sg146
I114
sg148
I115
sg149
I112
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-10 18:22'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I76
sg217
I78
sg208
I77
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-10 18:22'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I52
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones_WSRT'
p291
aa(lp292
g280
ag291
aa(lp293
aS'@@Jsequence'
p294
asg14
(lp295
(lp296
I0
aI1
aI2
aI3
aI4
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp299
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p300
ag121
assg101
Nsg102
S'2006-02-10 18:22'
p301
sg104
S'MG_JEN_Cohset::JJones()'
p302
sg106
S'MG_JEN_CohsetJJones'
p303
sg108
S'JJones'
p304
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p305
sg112
I00
sg113
g301
sg114
(dp306
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p307
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p308
sS'3'
p309
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p310
sS'2'
p311
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p312
sS'5'
p313
S".modify( Jsequence ): []  ->  ['GJones', 'DJones_WSRT']"
p314
sS'4'
p315
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p316
ssg118
(lp317
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p318
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p319
ag122
assg319
(dp320
g12
I00
sg1
S'@@polrep'
p321
sg14
S'@@stations'
p322
sg22
F0.0
sg23
S'@@uvplane_effect'
p323
sg7
S'@@parmtable'
p324
sg26
(dp325
g28
g319
sg29
(dp326
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p327
sg50
(dp328
sg52
(dp329
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p330
sg56
S'12dec2005'
p331
sg58
(dp332
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p333
sg62
(dp334
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p335
sg66
(dp336
g12
(lp337
I01
aI00
aS'@@unsolvable'
p338
asg1
(lp339
g2
ag71
ag321
asg14
(lp340
(lp341
I0
aag322
asg22
(lp342
F0.0
aS'@@ft_coeff_scale'
p343
asg23
(lp344
I00
ag323
asg7
(lp345
Nag324
assg101
Nsg102
S'2006-02-10 18:22'
p346
sg104
S'MG_JEN_Joneset::KJones()'
p347
sg106
S'MG_JEN_JonesetKJones'
p348
sg108
S'KJones'
p349
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p350
sg112
I00
sg113
g346
sg118
(lp351
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg318
(dp352
g12
I00
sg1
S'@@polrep'
p353
sS'fdeg_Ggain'
p354
I0
sS'tdeg_Gphase'
p355
S'@tdeg_Ggain'
p356
sS'stddev_Ggain'
p357
F0.0
sS'c00_Gphase'
p358
F0.0
sg22
F0.0
sg14
S'@@stations'
p359
sS'tdeg_Ggain'
p360
I3
sS'fdeg_Gphase'
p361
S'@fdeg_Ggain'
p362
sg7
S'@@parmtable'
p363
sg26
(dp364
g28
g318
sg29
(dp365
g12
g31
sg1
g32
sg14
g33
sg358
S'default c00 funklet value'
p366
sg354
S'degree of freq polynomial'
p367
sg355
S'degree of time polynomial'
p368
sg22
g37
sg360
g368
sg361
g367
sg7
g43
sg357
S'scatter in default c00 funklet values'
p369
sS'subtile_size_Gphase'
p370
S'sub-tile size (None=entire tile)'
p371
sS'c00_Ggain'
p372
g366
sS'stddev_Gphase'
p373
g369
sS'Gpolar'
p374
S'if True, use MeqPolar, otherwise MeqToComplex'
p375
sS'subtile_size_Ggain'
p376
g371
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p377
sg50
(dp378
g354
I60
sg376
I64
sg355
I63
sg360
I62
sg361
I61
sg370
I65
sg374
I59
ssg52
(dp379
g12
I01
sg1
I01
sg14
I01
sg357
I01
sg358
I01
sg22
I01
sg23
I01
sg7
I01
sg372
I01
sg373
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p380
sg56
S'15dec2005'
p381
sg58
(dp382
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p383
sg62
(dp384
g12
I00
sg374
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p385
sg66
(dp386
g12
(lp387
I01
aI00
aS'@@unsolvable'
p388
asg1
(lp389
g2
ag71
ag353
asg14
(lp390
(lp391
I0
aag359
asg358
(lp392
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p393
asg354
(lp394
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p395
asg355
(lp396
I0
aI1
aI2
aI3
ag356
aS'@@tdeg_Gphase'
p397
asg22
(lp398
F0.0
aS'@@ft_coeff_scale'
p399
asg360
(lp400
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p401
asg361
(lp402
I0
aI1
aI2
aI3
ag362
aS'@@fdeg_Gphase'
p403
asg7
(lp404
Nag363
asg357
(lp405
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p406
asg370
(lp407
S'@subtile_size_Ggain'
p408
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p409
asg372
(lp410
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p411
asg373
(lp412
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p413
asg374
(lp414
I01
aI00
aS'@@Gpolar'
p415
asg376
(lp416
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p417
asg23
(lp418
I00
aS'@@uvplane_effect'
p419
assg101
Nsg102
S'2006-02-10 18:22'
p420
sg104
S'MG_JEN_Joneset::GJones()'
p421
sg106
S'MG_JEN_JonesetGJones'
p422
sg108
S'GJones'
p423
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p424
sg112
I00
sg113
g420
sg114
(dp425
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p426
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p427
ssg118
(lp428
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag374
ag354
ag361
ag360
ag355
ag376
ag370
ag372
ag358
ag357
ag373
assg370
g408
sg372
F1.0
sg373
F0.0
sg374
I00
sg376
Nsg23
g419
ssg263
(lp429
g280
ag291
assg26
(dp430
g28
S'./MG_JEN_cps.'
p431
sg29
(dp432
g1
g262
sS'master_reqseq'
p433
S'if True, use a master reqseq for solver(s)'
p434
sg14
g265
sS'insert_flagger'
p435
S'if True, insert a flagger'
p436
sS'redun'
p437
S'if True, redundant spacing calibration'
p438
sS'insert_solver'
p439
S'if True, insert a solver'
p440
sg5
S'name of the (AIPS++) Measurement Set'
p441
sS'chain_solvers'
p442
S'if True, chain the solvers (recommended)'
p443
sS'num_cells'
p444
S'if defined, ModRes argument [ntime,nfreq]'
p445
sg7
g261
sS'tile_size'
p446
S'(inputrec) size (in time-slots) of the input data-tile'
p447
sg23
g39
ssS'reference'
p448
I00
sg46
g47
sg48
S'MG_JEN_cps'
p449
sg50
(dp450
g1
I8
sg14
I6
sg435
I2
sg437
I12
sg439
I1
sg5
I4
sg7
I7
sg3
I0
sg444
I13
sg446
I5
sg23
I9
ssg52
(dp451
g1
I00
sg433
I01
sg14
I00
sS'last_changed'
p452
I01
sg437
I00
sg23
I00
sg442
I01
sg444
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p453
sg56
g381
sg60
g453
sg62
(dp454
g452
I00
sg435
I00
sg433
I00
sg439
I00
sg437
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p455
sg66
(dp456
g1
(lp457
g2
ag71
aS'@@polrep'
p458
asg433
(lp459
I01
aI00
aS'@@master_reqseq'
p460
asg14
(lp461
(lp462
I0
aI1
aI2
aI3
aI4
aa(lp463
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp464
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp465
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p466
asg435
(lp467
I01
aI00
aS'@@insert_flagger'
p468
asg452
(lp469
S'd30jan2006'
p470
aS'@@last_changed'
p471
asg439
(lp472
I01
aI00
aS'@@insert_solver'
p473
asg437
(lp474
I01
aI00
aS'@@redun'
p475
asg5
(lp476
g6
aS'@@ms_name'
p477
asg442
(lp478
I01
aS'@@chain_solvers'
p479
asg444
(lp480
Na(lp481
I5
aI2
aa(lp482
I2
aI2
aa(lp483
I3
aI3
aaS'@@num_cells'
p484
asg7
(lp485
NaS'@@parmtable'
p486
asg446
(lp487
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p488
asg23
(lp489
I00
aS'@@uvplane_effect'
p490
assg102
S'2006-02-10 18:22'
p491
sS'HISTORY'
p492
(dp493
g253
S'2006-02-10 18:22: Derived from: MG_JEN_cps_GDJones.inarg'
p494
sg116
S'2006-02-10 18:22: Derived from: MG_JEN_cps.inarg'
p495
ssg104
g4
sS'save_file'
p496
S'MG_JEN_cps_GDJones_protected.inarg'
p497
sS'file_filter'
p498
S'MG_JEN_cps*.inarg'
p499
sg108
S''
p500
sg110
S'<specific>'
p501
sS'browse'
p502
(dp503
g5
S'*.MS'
p504
ssg112
I01
sg113
g491
sg114
(dp505
S'11'
p506
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1}"
p507
sS'10'
p508
S'.modify(): stripped off: _JEN_inarg_option'
p509
sS'13'
p510
S".modify(): found ={'I0': 1, 'Qpct': 1, 'Vpct': 1, 'SI': 1, 'RM': 1, 'Upct': 1, 'punit': 1}"
p511
sS'12'
p512
S'.modify(): stripped off: _JEN_inarg_option'
p513
sg253
S'.modify( uvplane_effect ): False  ->  True'
p514
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p515
sg309
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p516
sg311
S".modify(): found ={'uvplane_effect': 1}"
p517
sg313
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p518
sg315
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p519
sS'7'
p520
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p521
sS'6'
p522
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p523
sS'9'
p524
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p525
sS'8'
p526
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p527
ssg118
(lp528
g26
ag3
ag439
ag435
ag452
ag5
ag446
ag14
ag7
ag1
ag23
ag442
ag433
ag437
ag444
aS'./MG_JEN_exec.stream_control()'
p529
aS'./MG_JEN_Cohset.make_spigots()'
p530
aS'./MG_JEN_Sixpack.newstar_source()'
p531
ag8
aS'./MG_JEN_Cohset.predict()'
p532
aS'./MG_JEN_Cohset.insert_solver()'
p533
aS'./MG_JEN_Cohset.make_sinks()'
p534
assg534
(dp535
S'fullDomainMux'
p536
I01
sS'output_col'
p537
S'PREDICT'
p538
sS'visu'
p539
I01
sS'flag'
p540
I00
sg26
(dp541
g104
S'MG_JEN_Cohset::make_sinks()'
p542
sg28
g534
sg50
(dp543
g540
I147
sg539
I146
sg536
I148
sg537
I144
sS'visu_array_config'
p544
I145
ssg106
S'MG_JEN_Cohsetmake_sinks'
p545
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p546
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p547
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p548
sg108
S'make_sinks'
p549
sg66
(dp550
g540
(lp551
I01
aI00
aS'@@flag'
p552
asg544
(lp553
I01
aI00
aS'@@visu_array_config'
p554
asg537
(lp555
g538
aS'RESIDUALS'
p556
aS'DATA'
p557
aS'@@output_col'
p558
asg536
(lp559
I01
aI00
aS'@@fullDomainMux'
p560
asg539
(lp561
I01
aI00
aS'@@visu'
p562
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p563
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p564
sg48
S'MG_JEN_Cohset'
p565
sg62
(dp566
g540
I00
sg544
I00
sg536
I00
sg539
I00
ssg112
I00
sg102
g564
sg118
(lp567
g26
ag537
ag544
ag539
ag540
ag536
asg29
(dp568
g540
S'if True, insert a flagger for the output uv-data'
p569
sg544
S'if True, visualise the array config (from MS)'
p570
sg537
S'name of the logical (VisTile) output column'
p571
sg536
S'if True, attach an extra VisDataMux'
p572
sg539
S'if True, visualise the output uv-data'
p573
sssg544
I01
ssg446
I10
sg530
(dp574
S'MS_corr_index'
p575
(lp576
I0
aI1
aI2
aI3
asg540
I00
sg26
(dp577
g104
S'MG_JEN_Cohset::make_spigots()'
p578
sg28
g530
sg50
(dp579
g540
I25
sg575
I23
sg539
I24
ssg52
(dp580
S'input_col'
p581
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p582
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p583
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p584
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p585
sg108
S'make_spigots'
p586
sg66
(dp587
g540
(lp588
I01
aI00
aS'@@flag'
p589
asg575
(lp590
g576
a(lp591
I0
aI-1
aI-1
aI1
aa(lp592
I0
aI-1
aI-1
aI3
aaS'@@'
p593
aS'@@MS_corr_index'
p594
asg581
(lp595
g557
ag538
ag556
aS'@@input_col'
p596
asg539
(lp597
I01
aI00
aS'@@visu'
p598
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p599
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p600
sg48
S'MG_JEN_Cohset'
p601
sg62
(dp602
g540
I00
sg539
I00
ssg112
I00
sg102
g600
sg118
(lp603
g26
ag581
ag575
ag539
ag540
asg29
(dp604
g540
S'if True, insert a flagger for the input uv-data'
p605
sg575
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p606
sg581
S'name of the logical (VisTile) input column'
p607
sg539
S'if True, visualise the input uv-data'
p608
sssg581
g557
sg539
I01
ssg532
(dp609
g1
S'@@polrep'
p610
sg26
(dp611
g104
S'MG_JEN_Cohset::predict()'
p612
sg28
g532
sg50
(dp613
sg52
(dp614
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p615
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p616
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p617
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p618
sg108
S'predict'
p619
sg66
(dp620
g1
(lp621
g2
ag71
ag610
asg14
(lp622
(lp623
I0
aI1
aI2
aI3
aI4
aa(lp624
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp625
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp626
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p627
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p628
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p629
sg48
S'MG_JEN_Cohset'
p630
sg58
(dp631
g1
I00
sg14
I00
ssg112
I00
sg102
g629
sg118
(lp632
g26
ag14
ag1
asg29
(dp633
g1
g262
sg14
g265
sssg14
g627
ssg435
I00
sg452
g470
sg23
I01
sg444
Nsg531
(dp634
S'f0'
p635
F1000000.0
sS'major'
p636
F0.0
sg12
I00
sS'shape'
p637
S'point'
p638
sg7
NsS'Upct'
p639
I-10
sS'I0'
p640
F1.0
sS'Vpct'
p641
NsS'dDec'
p642
F0.0
sS'pa'
p643
F0.0
sg26
(dp644
g28
g531
sg29
(dp645
g635
S'reference freq (Hz): I=I0 @ f=f0'
p646
sg636
S'major axis (arcsec)'
p647
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p648
sg640
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p649
sg643
S'position angle (rad)'
p650
sS'SI'
p651
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p652
sS'Qpct'
p653
S'Stokes Q (percentage of I)'
p654
sS'punit'
p655
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p656
sg642
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p657
sg637
S'source shape'
p658
sg7
S'name of the MeqParm table (AIPS++)'
p659
sS'fsr_trace'
p660
S'If True, attach to forest state record'
p661
sS'RA0'
p662
S'If RA0 is a node, RA0+dRA overrides RA'
p663
sS'dRA'
p664
S'RA offset (arcsec): RA = RA0 + dRA'
p665
sS'RM'
p666
S'Intrinsic Rotation Measure (rad/m2)'
p667
sg639
S'Stokes U (percentage of I)'
p668
sS'Dec'
p669
S'Declination (rad, J2000)'
p670
sS'Dec0'
p671
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p672
sg641
S'Stokes V (percentage of I)'
p673
sS'minor'
p674
S'minor axis (arcsec)'
p675
sS'RA'
p676
S'Right Ascension (rad, J2000)'
p677
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p678
sg50
(dp679
g669
I38
sg640
I30
sg653
I31
sg641
I33
sg651
I35
sg7
I28
sg676
I37
sg666
I34
sg639
I32
sg655
I26
ssg52
(dp680
g635
I01
sg636
I01
sg12
I01
sS'name'
p681
I01
sg660
I01
sg655
I00
sg642
I01
sg637
I01
sg643
I01
sg662
I01
sg664
I01
sg671
I01
sg674
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p682
sg56
S'10feb2006'
p683
sg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p684
sg62
(dp685
g12
I00
sg660
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p686
sg66
(dp687
g635
(lp688
F1000000.0
aS'@@f0'
p689
asg636
(lp690
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p691
asg12
(lp692
I01
aI00
aS'@@unsolvable'
p693
asg637
(lp694
g638
aS'ell.gauss'
p695
aS'@@shape'
p696
asg7
(lp697
NaS'@@parmtable'
p698
asg639
(lp699
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p700
asg640
(lp701
F1.0
aF10.0
aS'@@I0'
p702
asg641
(lp703
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p704
asg642
(lp705
F0.0
aS'@@dDec'
p706
asg643
(lp707
F0.0
aF1.0
aF-0.5
aS'@@pa'
p708
asg676
(lp709
F0.0
aF0.5
aF1.0
aS'@@RA'
p710
asg664
(lp711
F0.0
aS'@@dRA'
p712
asg666
(lp713
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p714
asg671
(lp715
NaS'@@Dec0'
p716
asg674
(lp717
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p718
asg653
(lp719
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p720
asg655
(lp721
S'unpol'
p722
aS'unpol2'
p723
aS'unpol10'
p724
aS'QUV'
p725
aS'QU'
p726
aS'Qonly'
p727
aS'Uonly'
p728
aS'Vonly'
p729
aS'3c147'
p730
aS'3c286'
p731
aS'3c48'
p732
aS'3c295'
p733
aS'RMtest'
p734
aS'SItest'
p735
aS'@@punit'
p736
asg662
(lp737
NaS'@@RA0'
p738
asg669
(lp739
F0.5
aF1.0
aS'@@Dec'
p740
asg681
(lp741
NaS'@@name'
p742
asg660
(lp743
I01
aI00
aS'@@fsr_trace'
p744
asg651
(lp745
NaF-0.69999999999999996
a(lp746
F0.44700000000000001
aF-0.184
aaS'@@SI'
p747
assg101
Nsg102
S'2006-02-10 18:22'
p748
sg104
S'MG_JEN_Sixpack::newstar_source()'
p749
sg106
S'MG_JEN_Sixpacknewstar_source'
p750
sg108
S'newstar_source'
p751
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p752
sS'callback'
p753
(dp754
g655
I01
ssg112
I00
sg113
g748
sg114
(dp755
g253
S'.modify( Upct ): None  ->  -10'
p756
sg116
S'.modify( Qpct ): None  ->  10'
p757
sg311
S'.modify( punit ): unpol  ->  QU'
p758
ssg118
(lp759
g26
ag655
ag681
ag7
ag12
ag640
ag653
ag639
ag641
ag666
ag651
ag635
ag676
ag669
ag660
ag637
ag636
ag674
ag643
ag662
ag671
ag664
ag642
assg664
F0.0
sg666
Nsg671
Nsg674
F0.0
sg676
F0.0
sg653
I10
sg655
g726
sg662
Nsg669
F1.0
sg681
Nsg660
I01
sg651
Nssg433
I00
sg14
g462
sg529
(dp760
S'channel_start_index'
p761
I10
sS'data_column_name'
p762
g557
sS'predict_column'
p763
S'CORRECTED_DATA'
p764
sg5
S'@@ms_name'
p765
sg26
(dp766
g28
g529
sg29
(dp767
g761
S'(inputrec.sel) index of first selected freq channel'
p768
sg762
S'(inputrec) MS input column'
p769
sg763
S'MS output column to be associated with the VisTile predict-column'
p770
sg5
g441
sg446
g447
sS'channel_increment'
p771
S'(inputrec.sel) take every nth channel (1=all)'
p772
sS'channel_end_index'
p773
S'(inputrec.sel) index of last selected freq channel'
p774
sS'write_flags'
p775
S'(outputrec) if True, write flags to MS'
p776
ssg46
g47
sg48
S'MG_JEN_exec'
p777
sg50
(dp778
g761
I17
sg762
I16
sg763
I21
sg775
I20
sg773
I18
sg771
I19
ssg52
(dp779
g5
I01
sg446
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p780
sg56
S'20jan2006'
p781
sg58
(dp782
g5
I00
sg446
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p783
sg62
(dp784
g775
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p785
sg66
(dp786
g761
(lp787
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p788
asg762
(lp789
g557
ag764
aS'@@data_column_name'
p790
asg763
(lp791
g557
ag764
aS'MODEL_DATA'
p792
aS'@@predict_column'
p793
asg5
(lp794
g6
ag765
asg446
(lp795
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p796
asg771
(lp797
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p798
asg773
(lp799
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p800
asg775
(lp801
I01
aI00
aS'@@write_flags'
p802
assg101
Nsg102
S'2006-02-10 18:22'
p803
sg104
S'MG_JEN_exec::stream_control()'
p804
sg106
S'MG_JEN_execstream_control'
p805
sg108
S'stream_control'
p806
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p807
sg502
(dp808
g5
g504
ssg112
I00
sg113
g803
sg118
(lp809
g26
ag5
ag446
ag762
ag761
ag773
ag771
ag775
ag763
assg446
g796
sg771
I1
sg773
I50
sg775
I00
ssg437
I00
sg439
I01
sg442
I01
sg533
(dp810
S'correct_after'
p811
I01
sg433
S'@@master_reqseq'
p812
sS'condeq_unop'
p813
Nsg539
I01
sg437
S'@@redun'
p814
sS'solver_subtree'
p815
NsS'subtract_after'
p816
I00
sg442
S'@@chain_solvers'
p817
sg26
(dp818
g28
g533
sg29
(dp819
g811
S'if True, correct measured with predicted.Joneset'
p820
sg433
g434
sg813
S'Optional unary operation on Condeq inputs'
p821
sg539
S'if True, include full visualisation'
p822
sg437
g438
sg815
S'solver subtree qualifier(s)'
p823
sg816
S'if True, subtract predicted from measured'
p824
sg442
g443
sg444
g445
ssg46
g47
sg48
S'MG_JEN_Cohset'
p825
sg50
(dp826
g816
I130
sg811
I131
sg813
I128
sg539
I129
ssg52
(dp827
g815
I01
sg444
I01
sg442
I01
sg437
I01
sg433
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p828
sg56
g270
sg58
(dp829
g444
I00
sg442
I00
sg437
I00
sg433
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p830
sg62
(dp831
g816
I00
sg437
I00
sg811
I00
sg433
I00
sg539
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p832
sg66
(dp833
g811
(lp834
I01
aI00
aS'@@correct_after'
p835
asg433
(lp836
I01
aI00
ag812
asg813
(lp837
NaS'Abs'
p838
aS'Arg'
p839
aS'@@condeq_unop'
p840
asg539
(lp841
I01
aI00
aS'@@visu'
p842
asg437
(lp843
I01
aI00
ag814
asg815
(lp844
NaS'@@solver_subtree'
p845
asg816
(lp846
I01
aI00
aS'@@subtract_after'
p847
asg442
(lp848
I01
ag817
asg444
(lp849
Na(lp850
I5
aI2
aa(lp851
I2
aI2
aa(lp852
I3
aI3
aaS'@@num_cells'
p853
assg101
Nsg102
S'2006-02-10 18:22'
p854
sg104
S'MG_JEN_Cohset::insert_solver()'
p855
sg106
S'MG_JEN_Cohsetinsert_solver'
p856
sg108
S'insert_solver'
p857
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p858
sg112
I00
sg113
g854
sg114
(dp859
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p860
ssg118
(lp861
g26
ag815
ag437
ag444
ag442
ag433
ag813
ag539
ag816
ag811
aS'./MG_JEN_Cohset.solver_subtree()'
p862
assg444
g853
sg862
(dp863
S'rmin'
p864
Nsg539
I01
sS'epsilon'
p865
F0.01
sS'rmax'
p866
NsS'usesvd'
p867
I01
sS'debug_level'
p868
I10
sS'solvegroup'
p869
(lp870
g280
ag288
asg26
(dp871
g28
g862
sg29
(dp872
g864
S'if specified, only use baselines>=rmin'
p873
sg539
S'if True, include visualisation'
p874
sg865
S'iteration control criterion'
p875
sg866
S'if specified, only use baselines<=rmax'
p876
sg867
S'if True, use Singular Value Decomposition (SVD)'
p877
sg868
S'solver debug_level'
p878
sg869
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p879
sg444
g445
sS'history'
p880
S'if True, include history collection of metrics'
p881
sS'num_iter'
p882
S'max number of iterations'
p883
sS'condition'
p884
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p885
sS'colin_factor'
p886
S'colinearity factor'
p887
ssg46
g47
sg48
S'MG_JEN_Cohset'
p888
sg50
(dp889
g864
I134
sg539
I142
sg865
I138
sg866
I135
sg867
I140
sg869
I132
sg444
I136
sg880
I143
sg882
I137
sg884
I133
sg886
I139
ssg52
(dp890
g868
I01
sg444
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p891
sg56
S'20dec2005'
p892
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p893
sg62
(dp894
g867
I00
sg880
I00
sg539
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p895
sg66
(dp896
g864
(lp897
NaI100
aI200
aI500
aS'@@rmin'
p898
asg539
(lp899
I01
aI00
aS'@@visu'
p900
asg865
(lp901
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p902
asg866
(lp903
NaI500
aI1000
aI2000
aS'@@rmax'
p904
asg867
(lp905
I01
aI00
aS'@@usesvd'
p906
asg868
(lp907
I10
aS'@@debug_level'
p908
asg869
(lp909
(lp910
a(lp911
g280
aa(lp912
S'Ggain'
p913
aa(lp914
S'Gphase'
p915
aa(lp916
S'Gpol1'
p917
aa(lp918
S'Gpol2'
p919
aa(lp920
g280
aS'stokesI'
p921
aa(lp922
g921
aa(lp923
S'stokesIQU'
p924
aa(lp925
S'stokesIQUV'
p926
aa(lp927
g280
ag288
aa(lp928
g288
aa(lp929
S'dang'
p930
aa(lp931
S'dell'
p932
aa(lp933
g280
ag288
ag284
aa(lp934
g284
aa(lp935
g280
ag282
aa(lp936
g282
aa(lp937
S'Breal'
p938
aa(lp939
S'Bimag'
p940
aa(lp941
S'Bpol1'
p942
aa(lp943
S'Bpol2'
p944
aaS'@@solvegroup'
p945
asg444
(lp946
Na(lp947
I5
aI2
aa(lp948
I2
aI2
aa(lp949
I3
aI3
aaS'@@num_cells'
p950
asg880
(lp951
I01
aI00
aS'@@history'
p952
asg882
(lp953
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p954
asg884
(lp955
NaS'Gphase_X_sum=0.0'
p956
aS'Gphase_Y_sum=0.0'
p957
a(lp958
g956
ag957
aa(lp959
S'Gphase_X_first=0.0'
p960
aS'Gphase_Y_first=0.0'
p961
aa(lp962
S'Gphase_X_last=0.0'
p963
aS'Gphase_Y_last=0.0'
p964
aaS'dang_sum=0.0'
p965
a(lp966
S'Bimag_X_sum=0.0'
p967
aS'Bimag_Y_sum=0.0'
p968
aa(lp969
S'Breal_X_product=1.0'
p970
aS'Breal_Y_product=1.0'
p971
aaS'@@condition'
p972
asg886
(lp973
F1e-08
aF0.0
aS'@@colin_factor'
p974
assg101
Nsg102
S'2006-02-10 18:22'
p975
sg104
S'MG_JEN_Cohset::solver_subtree()'
p976
sg106
S'MG_JEN_Cohsetsolver_subtree'
p977
sg108
S'solver_subtree'
p978
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p979
sg112
I00
sg113
g975
sg114
(dp980
g253
S'.modify( num_iter ): 20  ->  5'
p981
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p982
sg311
S".modify( solvegroup ): []  ->  ['GJones', 'DJones']"
p983
ssg118
(lp984
g26
ag869
ag884
ag864
ag866
ag444
ag882
ag865
ag886
ag867
ag868
ag539
ag880
assg444
Nsg880
I01
sg882
I5
sg884
Nsg886
F1e-08
sss.