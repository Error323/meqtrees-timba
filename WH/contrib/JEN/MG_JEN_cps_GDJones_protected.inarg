(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I65
sg17
I70
sg21
I67
sg38
I66
sg25
I69
sg44
I68
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-09 14:38'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-09 14:38'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-09 14:38'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-09 14:38'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I89
sg129
I90
sg131
I88
sg142
I92
sg144
I87
sg146
I93
sg148
I94
sg149
I91
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-09 14:38'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-09 14:38'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-09 14:38'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-09 14:38'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I55
sg217
I57
sg208
I56
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-09 14:38'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-09 14:38'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-09 14:38'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-09 14:38'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I31
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-09 14:38'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-09 14:38'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones_WSRT'
p291
aa(lp292
g280
ag291
aa(lp293
aS'@@Jsequence'
p294
asg14
(lp295
(lp296
I0
aI1
aI2
aI3
aI4
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp299
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p300
ag121
assg101
Nsg102
S'2006-02-09 14:38'
p301
sg104
S'MG_JEN_Cohset::JJones()'
p302
sg106
S'MG_JEN_CohsetJJones'
p303
sg108
S'JJones'
p304
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-09 14:38'
p305
sg112
I00
sg113
g301
sg114
(dp306
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p307
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p308
sS'3'
p309
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p310
sS'2'
p311
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p312
sS'5'
p313
S".modify( Jsequence ): []  ->  ['GJones', 'DJones_WSRT']"
p314
sS'4'
p315
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p316
ssg118
(lp317
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p318
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p319
ag122
assg319
(dp320
g12
I00
sg1
S'@@polrep'
p321
sg14
S'@@stations'
p322
sg22
F0.0
sg23
S'@@uvplane_effect'
p323
sg7
S'@@parmtable'
p324
sg26
(dp325
g28
g319
sg29
(dp326
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p327
sg50
(dp328
sg52
(dp329
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-09 14:38'
p330
sg56
S'12dec2005'
p331
sg58
(dp332
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p333
sg62
(dp334
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-09 14:38'
p335
sg66
(dp336
g12
(lp337
I01
aI00
aS'@@unsolvable'
p338
asg1
(lp339
g2
ag71
ag321
asg14
(lp340
(lp341
I0
aag322
asg22
(lp342
F0.0
aS'@@ft_coeff_scale'
p343
asg23
(lp344
I00
ag323
asg7
(lp345
Nag324
assg101
Nsg102
S'2006-02-09 14:38'
p346
sg104
S'MG_JEN_Joneset::KJones()'
p347
sg106
S'MG_JEN_JonesetKJones'
p348
sg108
S'KJones'
p349
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-09 14:38'
p350
sg112
I00
sg113
g346
sg118
(lp351
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg318
(dp352
g12
I00
sg1
S'@@polrep'
p353
sS'fdeg_Ggain'
p354
I0
sS'tdeg_Gphase'
p355
S'@tdeg_Ggain'
p356
sS'stddev_Ggain'
p357
F0.0
sS'c00_Gphase'
p358
F0.0
sg22
F0.0
sg14
S'@@stations'
p359
sS'tdeg_Ggain'
p360
I3
sS'fdeg_Gphase'
p361
S'@fdeg_Ggain'
p362
sg7
S'@@parmtable'
p363
sg26
(dp364
g28
g318
sg29
(dp365
g12
g31
sg1
g32
sg14
g33
sg358
S'default c00 funklet value'
p366
sg354
S'degree of freq polynomial'
p367
sg355
S'degree of time polynomial'
p368
sg22
g37
sg360
g368
sg361
g367
sg7
g43
sg357
S'scatter in default c00 funklet values'
p369
sS'subtile_size_Gphase'
p370
S'sub-tile size (None=entire tile)'
p371
sS'c00_Ggain'
p372
g366
sS'stddev_Gphase'
p373
g369
sS'Gpolar'
p374
S'if True, use MeqPolar, otherwise MeqToComplex'
p375
sS'subtile_size_Ggain'
p376
g371
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p377
sg50
(dp378
g354
I39
sg376
I43
sg355
I42
sg360
I41
sg361
I40
sg370
I44
sg374
I38
ssg52
(dp379
g12
I01
sg1
I01
sg14
I01
sg357
I01
sg358
I01
sg22
I01
sg23
I01
sg7
I01
sg372
I01
sg373
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-09 14:38'
p380
sg56
S'15dec2005'
p381
sg58
(dp382
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p383
sg62
(dp384
g12
I00
sg374
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-09 14:38'
p385
sg66
(dp386
g12
(lp387
I01
aI00
aS'@@unsolvable'
p388
asg1
(lp389
g2
ag71
ag353
asg14
(lp390
(lp391
I0
aag359
asg358
(lp392
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p393
asg354
(lp394
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p395
asg355
(lp396
I0
aI1
aI2
aI3
ag356
aS'@@tdeg_Gphase'
p397
asg22
(lp398
F0.0
aS'@@ft_coeff_scale'
p399
asg360
(lp400
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p401
asg361
(lp402
I0
aI1
aI2
aI3
ag362
aS'@@fdeg_Gphase'
p403
asg7
(lp404
Nag363
asg357
(lp405
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p406
asg370
(lp407
S'@subtile_size_Ggain'
p408
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p409
asg372
(lp410
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p411
asg373
(lp412
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p413
asg374
(lp414
I01
aI00
aS'@@Gpolar'
p415
asg376
(lp416
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p417
asg23
(lp418
I00
aS'@@uvplane_effect'
p419
assg101
Nsg102
S'2006-02-09 14:38'
p420
sg104
S'MG_JEN_Joneset::GJones()'
p421
sg106
S'MG_JEN_JonesetGJones'
p422
sg108
S'GJones'
p423
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-09 14:38'
p424
sg112
I00
sg113
g420
sg114
(dp425
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p426
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p427
ssg118
(lp428
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag374
ag354
ag361
ag360
ag355
ag376
ag370
ag372
ag358
ag357
ag373
assg370
g408
sg372
F1.0
sg373
F0.0
sg374
I00
sg376
Nsg23
g419
ssg263
(lp429
g280
ag291
assg26
(dp430
g28
S'./MG_JEN_cps.'
p431
sg29
(dp432
g1
g262
sS'master_reqseq'
p433
S'if True, use a master reqseq for solver(s)'
p434
sg14
g265
sS'insert_flagger'
p435
S'if True, insert a flagger'
p436
sS'redun'
p437
S'if True, redundant spacing calibration'
p438
sS'insert_solver'
p439
S'if True, insert a solver'
p440
sS'punit'
p441
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- 3c147:'
p442
sg5
S'name of the (AIPS++) Measurement Set'
p443
sS'chain_solvers'
p444
S'if True, chain the solvers (recommended)'
p445
sS'num_cells'
p446
S'if defined, ModRes argument [ntime,nfreq]'
p447
sg7
g261
sS'tile_size'
p448
S'(inputrec) size (in time-slots) of the input data-tile'
p449
sg23
g39
ssS'reference'
p450
I00
sg46
g47
sg48
S'MG_JEN_cps'
p451
sg50
(dp452
g1
I8
sg14
I6
sg435
I2
sg437
I13
sg439
I1
sg441
I9
sg5
I4
sg7
I7
sg3
I0
sg446
I14
sg448
I5
sg23
I10
ssg52
(dp453
g1
I00
sg433
I01
sg14
I00
sg437
I00
sS'last_changed'
p454
I01
sg23
I00
sg444
I01
sg446
I00
sg7
I00
sg441
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p455
sg56
g381
sg60
g455
sg62
(dp456
g454
I00
sg435
I00
sg433
I00
sg439
I00
sg437
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p457
sg66
(dp458
g1
(lp459
g2
ag71
aS'@@polrep'
p460
asg433
(lp461
I01
aI00
aS'@@master_reqseq'
p462
asg14
(lp463
(lp464
I0
aI1
aI2
aI3
aI4
aa(lp465
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp466
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp467
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p468
asg435
(lp469
I01
aI00
aS'@@insert_flagger'
p470
asg437
(lp471
I01
aI00
aS'@@redun'
p472
asg439
(lp473
I01
aI00
aS'@@insert_solver'
p474
asg454
(lp475
S'd30jan2006'
p476
aS'@@last_changed'
p477
asg5
(lp478
g6
aS'@@ms_name'
p479
asg444
(lp480
I01
aS'@@chain_solvers'
p481
asg446
(lp482
Na(lp483
I5
aI2
aa(lp484
I2
aI2
aa(lp485
I3
aI3
aaS'@@num_cells'
p486
asg7
(lp487
NaS'@@parmtable'
p488
asg448
(lp489
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p490
asg441
(lp491
S'unpol'
p492
aS'unpol2'
p493
aS'unpol10'
p494
aS'3c147'
p495
aS'RMtest'
p496
aS'QUV'
p497
aS'QU'
p498
aS'SItest'
p499
aS'@@punit'
p500
asg23
(lp501
I00
aS'@@uvplane_effect'
p502
assg102
S'2006-02-09 14:38'
p503
sS'HISTORY'
p504
(dp505
g253
S'2006-02-09 14:38: Derived from: MG_JEN_cps_GDJones.inarg'
p506
sg116
S'2006-02-09 14:38: Derived from: MG_JEN_cps.inarg'
p507
ssg104
g4
sS'save_file'
p508
S'MG_JEN_cps_GDJones_protected.inarg'
p509
sS'file_filter'
p510
S'MG_JEN_cps*.inarg'
p511
sg108
S''
p512
sg110
S'<specific>'
p513
sS'browse'
p514
(dp515
g5
S'*.MS'
p516
ssg112
I01
sg113
g503
sg114
(dp517
S'11'
p518
S'.modify( punit ): unpol  ->  QU'
p519
sS'10'
p520
S'.modify(): stripped off: _JEN_inarg_option'
p521
sS'12'
p522
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1, 'punit': 1}"
p523
sg253
S'.modify( uvplane_effect ): False  ->  True'
p524
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p525
sg309
S".modify(): found ={'uvplane_effect': 1, 'tile_size': 1}"
p526
sg311
S'.modify( tile_size ): 10  ->  100'
p527
sg313
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p528
sg315
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p529
sS'7'
p530
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p531
sS'6'
p532
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p533
sS'9'
p534
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p535
sS'8'
p536
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p537
ssg118
(lp538
g26
ag3
ag439
ag435
ag454
ag5
ag448
ag14
ag7
ag1
ag441
ag23
ag444
ag433
ag437
ag446
aS'./MG_JEN_exec.stream_control()'
p539
aS'./MG_JEN_Cohset.make_spigots()'
p540
ag8
aS'./MG_JEN_Cohset.predict()'
p541
aS'./MG_JEN_Cohset.insert_solver()'
p542
aS'./MG_JEN_Cohset.make_sinks()'
p543
assg543
(dp544
S'fullDomainMux'
p545
I01
sS'output_col'
p546
S'PREDICT'
p547
sS'visu'
p548
I01
sS'flag'
p549
I00
sg26
(dp550
g104
S'MG_JEN_Cohset::make_sinks()'
p551
sg28
g543
sg50
(dp552
g549
I126
sg548
I125
sg545
I127
sg546
I123
sS'visu_array_config'
p553
I124
ssg106
S'MG_JEN_Cohsetmake_sinks'
p554
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-09 14:38'
p555
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p556
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-09 14:38'
p557
sg108
S'make_sinks'
p558
sg66
(dp559
g549
(lp560
I01
aI00
aS'@@flag'
p561
asg553
(lp562
I01
aI00
aS'@@visu_array_config'
p563
asg546
(lp564
g547
aS'RESIDUALS'
p565
aS'DATA'
p566
aS'@@output_col'
p567
asg545
(lp568
I01
aI00
aS'@@fullDomainMux'
p569
asg548
(lp570
I01
aI00
aS'@@visu'
p571
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-09 14:38'
p572
sg101
Nsg56
g270
sg113
S'2006-02-09 14:38'
p573
sg48
S'MG_JEN_Cohset'
p574
sg62
(dp575
g549
I00
sg553
I00
sg545
I00
sg548
I00
ssg112
I00
sg102
g573
sg118
(lp576
g26
ag546
ag553
ag548
ag549
ag545
asg29
(dp577
g549
S'if True, insert a flagger for the output uv-data'
p578
sg553
S'if True, visualise the array config (from MS)'
p579
sg546
S'name of the logical (VisTile) output column'
p580
sg545
S'if True, attach an extra VisDataMux'
p581
sg548
S'if True, visualise the output uv-data'
p582
sssg553
I01
ssg448
I100
sg540
(dp583
S'MS_corr_index'
p584
(lp585
I0
aI1
aI2
aI3
asg549
I00
sg26
(dp586
g104
S'MG_JEN_Cohset::make_spigots()'
p587
sg28
g540
sg50
(dp588
g549
I26
sg584
I24
sg548
I25
ssg52
(dp589
S'input_col'
p590
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p591
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-09 14:38'
p592
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p593
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-09 14:38'
p594
sg108
S'make_spigots'
p595
sg66
(dp596
g549
(lp597
I01
aI00
aS'@@flag'
p598
asg584
(lp599
g585
a(lp600
I0
aI-1
aI-1
aI1
aa(lp601
I0
aI-1
aI-1
aI3
aaS'@@'
p602
aS'@@MS_corr_index'
p603
asg590
(lp604
g566
ag547
ag565
aS'@@input_col'
p605
asg548
(lp606
I01
aI00
aS'@@visu'
p607
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-09 14:38'
p608
sg101
Nsg56
g270
sg113
S'2006-02-09 14:38'
p609
sg48
S'MG_JEN_Cohset'
p610
sg62
(dp611
g549
I00
sg548
I00
ssg112
I00
sg102
g609
sg118
(lp612
g26
ag590
ag584
ag548
ag549
asg29
(dp613
g549
S'if True, insert a flagger for the input uv-data'
p614
sg584
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p615
sg590
S'name of the logical (VisTile) input column'
p616
sg548
S'if True, visualise the input uv-data'
p617
sssg590
g566
sg548
I01
ssg541
(dp618
g1
S'@@polrep'
p619
sg26
(dp620
g104
S'MG_JEN_Cohset::predict()'
p621
sg28
g541
sg50
(dp622
sg52
(dp623
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p624
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-09 14:38'
p625
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p626
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-09 14:38'
p627
sg108
S'predict'
p628
sg66
(dp629
g1
(lp630
g2
ag71
ag619
asg14
(lp631
(lp632
I0
aI1
aI2
aI3
aI4
aa(lp633
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp634
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp635
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p636
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-09 14:38'
p637
sg101
Nsg56
g270
sg113
S'2006-02-09 14:38'
p638
sg48
S'MG_JEN_Cohset'
p639
sg58
(dp640
g1
I00
sg14
I00
ssg112
I00
sg102
g638
sg118
(lp641
g26
ag14
ag1
asg29
(dp642
g1
g262
sg14
g265
sssg14
g636
ssg435
I00
sg454
g476
sg441
g498
sg23
I01
sg446
Nsg433
I00
sg14
g464
sg539
(dp643
S'channel_start_index'
p644
I10
sS'data_column_name'
p645
g566
sS'predict_column'
p646
S'CORRECTED_DATA'
p647
sg5
S'@@ms_name'
p648
sg26
(dp649
g28
g539
sg29
(dp650
g644
S'(inputrec.sel) index of first selected freq channel'
p651
sg645
S'(inputrec) MS input column'
p652
sg646
S'MS output column to be associated with the VisTile predict-column'
p653
sg5
g443
sg448
g449
sS'channel_increment'
p654
S'(inputrec.sel) take every nth channel (1=all)'
p655
sS'channel_end_index'
p656
S'(inputrec.sel) index of last selected freq channel'
p657
sS'write_flags'
p658
S'(outputrec) if True, write flags to MS'
p659
ssg46
g47
sg48
S'MG_JEN_exec'
p660
sg50
(dp661
g644
I18
sg645
I17
sg646
I22
sg658
I21
sg656
I19
sg654
I20
ssg52
(dp662
g5
I01
sg448
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-09 14:38'
p663
sg56
S'20jan2006'
p664
sg58
(dp665
g5
I00
sg448
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-09 14:38'
p666
sg62
(dp667
g658
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-09 14:38'
p668
sg66
(dp669
g644
(lp670
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p671
asg645
(lp672
g566
ag647
aS'@@data_column_name'
p673
asg646
(lp674
g566
ag647
aS'MODEL_DATA'
p675
aS'@@predict_column'
p676
asg5
(lp677
g6
ag648
asg448
(lp678
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p679
asg654
(lp680
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p681
asg656
(lp682
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p683
asg658
(lp684
I01
aI00
aS'@@write_flags'
p685
assg101
Nsg102
S'2006-02-09 14:38'
p686
sg104
S'MG_JEN_exec::stream_control()'
p687
sg106
S'MG_JEN_execstream_control'
p688
sg108
S'stream_control'
p689
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-09 14:38'
p690
sg514
(dp691
g5
g516
ssg112
I00
sg113
g686
sg118
(lp692
g26
ag5
ag448
ag645
ag644
ag656
ag654
ag658
ag646
assg448
g679
sg654
I1
sg656
I50
sg658
I00
ssg437
I00
sg439
I01
sg444
I01
sg542
(dp693
g433
S'@@master_reqseq'
p694
sS'condeq_unop'
p695
Nsg548
I01
sg437
S'@@redun'
p696
sS'solver_subtree'
p697
NsS'./MG_JEN_Cohset.solver_subtree()'
p698
(dp699
S'rmin'
p700
Nsg548
I01
sS'epsilon'
p701
F0.01
sS'rmax'
p702
NsS'usesvd'
p703
I01
sS'debug_level'
p704
I10
sS'solvegroup'
p705
(lp706
g280
ag288
asg26
(dp707
g28
g698
sg29
(dp708
g700
S'if specified, only use baselines>=rmin'
p709
sg548
S'if True, include visualisation'
p710
sg701
S'iteration control criterion'
p711
sg702
S'if specified, only use baselines<=rmax'
p712
sg703
S'if True, use Singular Value Decomposition (SVD)'
p713
sg704
S'solver debug_level'
p714
sg705
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p715
sg446
g447
sS'history'
p716
S'if True, include history collection of metrics'
p717
sS'num_iter'
p718
S'max number of iterations'
p719
sS'condition'
p720
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p721
sS'colin_factor'
p722
S'colinearity factor'
p723
ssg46
g47
sg48
S'MG_JEN_Cohset'
p724
sg50
(dp725
g700
I113
sg548
I121
sg701
I117
sg702
I114
sg703
I119
sg705
I111
sg446
I115
sg716
I122
sg718
I116
sg720
I112
sg722
I118
ssg52
(dp726
g704
I01
sg446
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-09 14:38'
p727
sg56
S'20dec2005'
p728
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p729
sg62
(dp730
g703
I00
sg716
I00
sg548
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-09 14:38'
p731
sg66
(dp732
g700
(lp733
NaI100
aI200
aI500
aS'@@rmin'
p734
asg548
(lp735
I01
aI00
aS'@@visu'
p736
asg701
(lp737
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p738
asg702
(lp739
NaI500
aI1000
aI2000
aS'@@rmax'
p740
asg703
(lp741
I01
aI00
aS'@@usesvd'
p742
asg704
(lp743
I10
aS'@@debug_level'
p744
asg705
(lp745
(lp746
a(lp747
g280
aa(lp748
S'Ggain'
p749
aa(lp750
S'Gphase'
p751
aa(lp752
S'Gpol1'
p753
aa(lp754
S'Gpol2'
p755
aa(lp756
g280
aS'stokesI'
p757
aa(lp758
g757
aa(lp759
S'stokesIQU'
p760
aa(lp761
S'stokesIQUV'
p762
aa(lp763
g280
ag288
aa(lp764
g288
aa(lp765
S'dang'
p766
aa(lp767
S'dell'
p768
aa(lp769
g280
ag288
ag284
aa(lp770
g284
aa(lp771
g280
ag282
aa(lp772
g282
aa(lp773
S'Breal'
p774
aa(lp775
S'Bimag'
p776
aa(lp777
S'Bpol1'
p778
aa(lp779
S'Bpol2'
p780
aaS'@@solvegroup'
p781
asg446
(lp782
Na(lp783
I5
aI2
aa(lp784
I2
aI2
aa(lp785
I3
aI3
aaS'@@num_cells'
p786
asg716
(lp787
I01
aI00
aS'@@history'
p788
asg718
(lp789
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p790
asg720
(lp791
NaS'Gphase_X_sum=0.0'
p792
aS'Gphase_Y_sum=0.0'
p793
a(lp794
g792
ag793
aa(lp795
S'Gphase_X_first=0.0'
p796
aS'Gphase_Y_first=0.0'
p797
aa(lp798
S'Gphase_X_last=0.0'
p799
aS'Gphase_Y_last=0.0'
p800
aaS'dang_sum=0.0'
p801
a(lp802
S'Bimag_X_sum=0.0'
p803
aS'Bimag_Y_sum=0.0'
p804
aa(lp805
S'Breal_X_product=1.0'
p806
aS'Breal_Y_product=1.0'
p807
aaS'@@condition'
p808
asg722
(lp809
F1e-08
aF0.0
aS'@@colin_factor'
p810
assg101
Nsg102
S'2006-02-09 14:38'
p811
sg104
S'MG_JEN_Cohset::solver_subtree()'
p812
sg106
S'MG_JEN_Cohsetsolver_subtree'
p813
sg108
S'solver_subtree'
p814
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-09 14:38'
p815
sg112
I00
sg113
g811
sg114
(dp816
g253
S'.modify( num_iter ): 20  ->  5'
p817
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p818
sg311
S".modify( solvegroup ): []  ->  ['GJones', 'DJones']"
p819
ssg118
(lp820
g26
ag705
ag720
ag700
ag702
ag446
ag718
ag701
ag722
ag703
ag704
ag548
ag716
assg446
Nsg716
I01
sg718
I5
sg720
Nsg722
F1e-08
ssg444
S'@@chain_solvers'
p821
sg26
(dp822
g28
g542
sg29
(dp823
g433
g434
sg695
S'Optional unary operation on Condeq inputs'
p824
sg548
S'if True, include full visualisation'
p825
sg437
g438
sg697
S'solver subtree qualifier(s)'
p826
sg444
g445
sg446
g447
sS'subtract'
p827
S'if True, subtract predicted from measured'
p828
sS'correct'
p829
S'if True, correct measured with predicted.Joneset'
p830
ssg46
g47
sg48
S'MG_JEN_Cohset'
p831
sg50
(dp832
g827
I109
sg829
I110
sg695
I107
sg548
I108
ssg52
(dp833
g697
I01
sg446
I01
sg444
I01
sg437
I01
sg433
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-09 14:38'
p834
sg56
g270
sg58
(dp835
g446
I00
sg444
I00
sg437
I00
sg433
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p836
sg62
(dp837
g437
I00
sg433
I00
sg827
I00
sg829
I00
sg548
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-09 14:38'
p838
sg66
(dp839
g433
(lp840
I01
aI00
ag694
asg695
(lp841
NaS'Abs'
p842
aS'Arg'
p843
aS'@@condeq_unop'
p844
asg548
(lp845
I01
aI00
aS'@@visu'
p846
asg437
(lp847
I01
aI00
ag696
asg697
(lp848
NaS'@@solver_subtree'
p849
asg444
(lp850
I01
ag821
asg446
(lp851
Na(lp852
I5
aI2
aa(lp853
I2
aI2
aa(lp854
I3
aI3
aaS'@@num_cells'
p855
asg827
(lp856
I01
aI00
aS'@@subtract'
p857
asg829
(lp858
I01
aI00
aS'@@correct'
p859
assg101
Nsg102
S'2006-02-09 14:38'
p860
sg104
S'MG_JEN_Cohset::insert_solver()'
p861
sg106
S'MG_JEN_Cohsetinsert_solver'
p862
sg108
S'insert_solver'
p863
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-09 14:38'
p864
sg112
I00
sg113
g860
sg114
(dp865
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p866
ssg118
(lp867
g26
ag697
ag437
ag446
ag444
ag433
ag695
ag548
ag827
ag829
ag698
assg446
g855
sg827
I00
sg829
I01
ss.