(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'tdeg_Bimag'
p12
S'@tdeg_Breal'
p13
sS'unsolvable'
p14
I00
sg1
S'@@polrep'
p15
sS'fdeg_Breal'
p16
I3
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stations'
p19
S'@@stations'
p20
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'target_definition'
p28
S'MG_JEN_Joneset::BJones()'
p29
sS'localscope'
p30
g10
sS'JEN_inargGUI_ident'
p31
(dp32
g16
I65
sg17
I70
sg21
I67
sS'fdeg_Bimag'
p33
I66
sg25
I69
sg12
I68
ssS'hide'
p34
(dp35
g14
I01
sg1
I01
sg19
I01
sS'stddev_Bimag'
p36
I01
sg22
I01
sg23
I01
sg7
I01
sS'c00_Breal'
p37
I01
sS'stddev_Breal'
p38
I01
sS'c00_Bimag'
p39
I01
ssS'barescope'
p40
S'MG_JEN_JonesetBJones'
p41
sS'target_dir'
p42
S'.'
p43
sS'description'
p44
S'defines diagonal BJones bandpass matrices'
p45
sS'oneliner'
p46
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-07 18:03'
p47
sS'target_function'
p48
S'BJones'
p49
sS'protected'
p50
I00
sS'choice'
p51
(dp52
g12
(lp53
I0
aI1
aI2
aI3
ag13
aS'@@tdeg_Bimag'
p54
asg14
(lp55
I01
aI00
aS'@@unsolvable'
p56
asg1
(lp57
g2
aS'circular'
p58
ag15
asg16
(lp59
I0
aI1
aI2
aI3
aS'@@fdeg_Breal'
p60
asg17
(lp61
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p62
asg19
(lp63
(lp64
I0
aag20
asg22
(lp65
F0.0
aS'@@ft_coeff_scale'
p66
asg33
(lp67
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p68
aS'@@fdeg_Bimag'
p69
asg23
(lp70
I00
ag24
asg25
(lp71
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p72
asg37
(lp73
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p74
asg21
(lp75
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p76
asg7
(lp77
NaS'@@parmtable'
p78
asg38
(lp79
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p80
asg36
(lp81
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p82
asg39
(lp83
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p84
assS'qual'
p85
NsS'version'
p86
S'16dec2005'
p87
sS'datetime_defined'
p88
S'2006-02-07 18:03'
p89
sS'target_module'
p90
S'MG_JEN_Joneset'
p91
sS'editable'
p92
(dp93
g14
I00
ssS'mutable'
p94
(dp95
g23
I00
sg7
I00
sg1
I00
sg19
I00
ssS'MESSAGE'
p96
(dp97
S'0'
p98
S'.modify( tdeg_Breal ): 0  ->  3'
p99
ssS'last_edited'
p100
g89
sS'order'
p101
(lp102
g26
ag19
ag7
ag23
ag1
ag14
ag22
ag16
ag33
ag21
ag12
ag25
ag17
ag37
ag39
ag38
ag36
asS'help'
p103
(dp104
g12
S'degree of time polynomial'
p105
sg14
S'if True, do NOT store solvegroup/parmgroup info'
p106
sg1
S'polarisation representation'
p107
sg16
S'degree of freq polynomial'
p108
sg17
S'sub-tile size (None=entire tile)'
p109
sg19
S'list of station names/numbers'
p110
sg22
S'scale of polc_ft non-c00 coeff'
p111
sg33
g108
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p112
sg25
g109
sg37
S'default c00 funklet value'
p113
sg21
g105
sg7
S'name of the MeqParm table'
p114
sg38
S'scatter in default c00 funklet values'
p115
sg36
g115
sg39
g113
sssg33
g68
sg7
g78
sg38
F0.0
sg36
F0.0
sg37
F1.0
sg39
F0.0
ssg1
S'@@polrep'
p116
sg19
S'@@stations'
p117
sS'./MG_JEN_Joneset.DJones_WSRT()'
p118
(dp119
S'fdeg_dang'
p120
I1
sS'c00_dang'
p121
F0.0
sg14
I00
sg1
S'@@polrep'
p122
sS'stddev_dell'
p123
F0.0
sg19
S'@@stations'
p124
sS'fdeg_dell'
p125
S'@fdeg_dang'
p126
sS'coupled_XY_dell'
p127
I01
sS'stddev_dang'
p128
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p129
sg7
S'@@parmtable'
p130
sS'c00_dell'
p131
F0.0
sg26
(dp132
g28
S'MG_JEN_Joneset::DJones_WSRT()'
p133
sg30
g118
sg31
(dp134
g120
I89
sg125
I90
sg127
I88
sS'tdeg_dell'
p135
I92
sS'coupled_XY_dang'
p136
I87
sS'subtile_size_dang'
p137
I93
sS'subtile_size_dell'
p138
I94
sS'tdeg_dang'
p139
I91
ssg34
(dp140
g121
I01
sg14
I01
sg1
I01
sg123
I01
sg131
I01
sg19
I01
sg128
I01
sg22
I01
sg23
I01
sg7
I01
sS'c00_PZD'
p141
I01
ssg40
S'MG_JEN_JonesetDJones_WSRT'
p142
sg42
g43
sg44
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p143
sg46
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-07 18:03'
p144
sg48
S'DJones_WSRT'
p145
sg50
I00
sg51
(dp146
g120
(lp147
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p148
asg121
(lp149
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p150
asg14
(lp151
I01
aI00
aS'@@unsolvable'
p152
asg1
(lp153
g2
ag58
ag122
asg123
(lp154
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p155
asg19
(lp156
(lp157
I0
aag124
asg125
(lp158
I0
aI1
aI2
aI3
ag126
aS'@@fdeg_dell'
p159
asg127
(lp160
I01
aI00
aS'@@coupled_XY_dell'
p161
asg128
(lp162
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p163
asg22
(lp164
F0.0
aS'@@ft_coeff_scale'
p165
asg23
(lp166
I00
ag129
asg7
(lp167
Nag130
asg131
(lp168
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p169
asg135
(lp170
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p171
aS'@@tdeg_dell'
p172
asg136
(lp173
I01
aI00
aS'@@coupled_XY_dang'
p174
asg137
(lp175
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p176
asg138
(lp177
S'@subtile_size_dang'
p178
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p179
asg139
(lp180
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p181
asg141
(lp182
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p183
assg85
Nsg86
g87
sg88
S'2006-02-07 18:03'
p184
sg90
S'MG_JEN_Joneset'
p185
sg92
(dp186
g14
I00
sg136
I00
sg127
I00
ssg94
(dp187
g23
I00
sg7
I00
sg1
I00
sg19
I00
ssg96
(dp188
g98
S'.modify( tdeg_dang ): 0  ->  3'
p189
ssg100
g184
sg101
(lp190
g26
ag19
ag7
ag23
ag1
ag14
ag22
ag136
ag127
ag120
ag125
ag139
ag135
ag137
ag138
ag121
ag131
ag141
ag128
ag123
asg103
(dp191
g120
S'degree of freq polynomial'
p192
sg121
S'default c00 funklet value'
p193
sg14
g106
sg1
g107
sg123
S'scatter in default c00 funklet values'
p194
sg19
g110
sg125
g192
sg127
S'if True, Xdell = -Ydell per station'
p195
sg128
g194
sg22
g111
sg23
g112
sg7
g114
sg131
g193
sg135
S'degree of time polynomial'
p196
sg136
S'if True, Xdang = Ydang per station'
p197
sg137
S'sub-tile size (None=entire tile)'
p198
sg138
g198
sg139
g196
sg141
g193
sssg135
g171
sg136
I01
sg137
Nsg138
g178
sg139
I3
sg141
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p199
(dp200
g14
I00
sg1
S'@@polrep'
p201
sg19
S'@@stations'
p202
sS'tdeg_RM'
p203
I3
sg22
F0.0
sS'fdeg_RM'
p204
I0
sS'c00_RM'
p205
F0.0
sg26
(dp206
g28
S'MG_JEN_Joneset::FJones()'
p207
sg30
g199
sg31
(dp208
g204
I55
sS'subtile_size_RM'
p209
I57
sg203
I56
ssg34
(dp210
g14
I01
sg1
I01
sg19
I01
sg22
I01
sg23
I01
sg205
I01
sg7
I01
ssg40
S'MG_JEN_JonesetFJones'
p211
sg42
g43
sg44
S'defines diagonal FJones Faraday rotation matrices'
p212
sg46
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-07 18:03'
p213
sg48
S'FJones'
p214
sg50
I00
sg51
(dp215
g14
(lp216
I01
aI00
aS'@@unsolvable'
p217
asg1
(lp218
g2
ag58
ag201
asg19
(lp219
(lp220
I0
aag202
asg203
(lp221
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p222
asg22
(lp223
F0.0
aS'@@ft_coeff_scale'
p224
asg204
(lp225
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p226
asg205
(lp227
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p228
asg209
(lp229
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p230
asg7
(lp231
NaS'@@parmtable'
p232
asg23
(lp233
I00
aS'@@uvplane_effect'
p234
assg85
Nsg86
g87
sg88
S'2006-02-07 18:03'
p235
sg90
S'MG_JEN_Joneset'
p236
sg92
(dp237
g14
I00
ssg94
(dp238
g23
I00
sg7
I00
sg1
I00
sg19
I00
ssg96
(dp239
S'1'
p240
S'.modify( subtile_size_RM ): 1  ->  None'
p241
sg98
S'.modify( tdeg_RM ): 0  ->  3'
p242
ssg100
g235
sg101
(lp243
g26
ag19
ag7
ag23
ag1
ag14
ag22
ag204
ag203
ag209
ag205
asg103
(dp244
g14
g106
sg1
g107
sg19
g110
sg203
S'degree of time polynomial'
p245
sg22
g111
sg204
S'degree of freq polynomial'
p246
sg205
S'default c00 funklet value'
p247
sg209
S'sub-tile size (None=entire tile)'
p248
sg7
g114
sg23
g112
sssg7
g232
sg23
g234
sg209
Nssg23
S'@@uvplane_effect'
p249
sg7
S'@@parmtable'
p250
sg26
(dp251
g28
S'MG_JEN_Cohset::JJones()'
p252
sg30
g8
sg31
(dp253
S'Jsequence'
p254
I31
ssg34
(dp255
g23
I01
sg7
I01
sg1
I01
sg19
I01
ssg40
S'MG_JEN_CohsetJJones'
p256
sg42
g43
sg46
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-07 18:03'
p257
sg48
S'JJones'
p258
sg51
(dp259
g23
(lp260
I00
ag249
asg7
(lp261
Nag250
asg1
(lp262
g2
ag58
ag116
asg254
(lp263
(lp264
S'GJones'
p265
aa(lp266
S'BJones'
p267
aa(lp268
S'FJones'
p269
aa(lp270
S'KJones'
p271
aa(lp272
S'DJones'
p273
aa(lp274
g265
ag273
aa(lp275
S'DJones_WSRT'
p276
aa(lp277
g265
ag276
aa(lp278
aS'@@Jsequence'
p279
asg19
(lp280
(lp281
I0
aI1
aI2
aI3
aI4
aa(lp282
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp283
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp284
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p285
ag117
assg85
Nsg50
I00
sg88
S'2006-02-07 18:03'
p286
sg86
S'25dec2005'
p287
sg90
S'MG_JEN_Cohset'
p288
sg94
(dp289
g23
I00
sg7
I00
sg1
I00
sg19
I00
ssg96
(dp290
g240
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p291
sg98
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p292
sS'3'
p293
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p294
sS'2'
p295
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p296
sS'4'
p297
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p298
ssg100
g286
sg101
(lp299
g26
ag19
ag7
ag1
ag23
ag254
aS'./MG_JEN_Joneset.GJones()'
p300
ag199
ag10
aS'./MG_JEN_Joneset.KJones()'
p301
ag118
asg103
(dp302
g23
g112
sg7
S'name of MeqParm table to be used'
p303
sg1
S'polarisation representation'
p304
sg254
S'sequence of Jones matrices to be used'
p305
sg19
S'the (subset of) stations to be used'
p306
ssg44
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p307
ssg301
(dp308
g14
I00
sg1
S'@@polrep'
p309
sg19
S'@@stations'
p310
sg22
F0.0
sg23
S'@@uvplane_effect'
p311
sg7
S'@@parmtable'
p312
sg26
(dp313
g28
S'MG_JEN_Joneset::KJones()'
p314
sg30
g301
sg31
(dp315
sg34
(dp316
g14
I01
sg1
I01
sg19
I01
sg22
I01
sg23
I01
sg7
I01
ssg40
S'MG_JEN_JonesetKJones'
p317
sg42
g43
sg44
S'defines diagonal KJones matrices for DFT Fourier kernel'
p318
sg46
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-07 18:03'
p319
sg48
S'KJones'
p320
sg51
(dp321
g14
(lp322
I01
aI00
aS'@@unsolvable'
p323
asg1
(lp324
g2
ag58
ag309
asg19
(lp325
(lp326
I0
aag310
asg22
(lp327
F0.0
aS'@@ft_coeff_scale'
p328
asg23
(lp329
I00
ag311
asg7
(lp330
Nag312
assg85
Nsg86
S'12dec2005'
p331
sg88
S'2006-02-07 18:03'
p332
sg90
S'MG_JEN_Joneset'
p333
sg92
(dp334
g14
I00
ssg94
(dp335
g23
I00
sg7
I00
sg1
I00
sg19
I00
ssg50
I00
sg100
g332
sg101
(lp336
g26
ag19
ag7
ag23
ag1
ag14
ag22
asg103
(dp337
g14
g106
sg1
g107
sg19
g110
sg22
g111
sg23
g112
sg7
g114
ssssg300
(dp338
S'stddev_Gampl'
p339
F0.0
sS'c00_Gampl'
p340
F1.0
sg14
I00
sg1
S'@@polrep'
p341
sS'tdeg_Gampl'
p342
I3
sg19
S'@@stations'
p343
sS'tdeg_Gphase'
p344
S'@tdeg_Gampl'
p345
sS'c00_Gphase'
p346
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p347
sS'fdeg_Gphase'
p348
S'@fdeg_Gampl'
p349
sg7
S'@@parmtable'
p350
sS'fdeg_Gampl'
p351
I0
sg26
(dp352
g28
S'MG_JEN_Joneset::GJones()'
p353
sg30
g300
sg31
(dp354
S'subtile_size_Gphase'
p355
I44
sg344
I42
sg348
I40
sg351
I39
sg342
I41
sS'subtile_size_Gampl'
p356
I43
sS'Gpolar'
p357
I38
ssg34
(dp358
g339
I01
sg340
I01
sg14
I01
sg1
I01
sg19
I01
sg346
I01
sg22
I01
sg23
I01
sg7
I01
sS'stddev_Gphase'
p359
I01
ssg40
S'MG_JEN_JonesetGJones'
p360
sg42
g43
sg44
S'defines diagonal GJones matrices for complex(Gampl,Gphase) parms'
p361
sg46
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-07 18:03'
p362
sg48
S'GJones'
p363
sg50
I00
sg51
(dp364
g339
(lp365
F0.0
aF0.10000000000000001
aS'@@stddev_Gampl'
p366
asg340
(lp367
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Gampl'
p368
asg14
(lp369
I01
aI00
aS'@@unsolvable'
p370
asg1
(lp371
g2
ag58
ag341
asg342
(lp372
I0
aI1
aI2
aI3
aS'@@tdeg_Gampl'
p373
asg19
(lp374
(lp375
I0
aag343
asg344
(lp376
I0
aI1
aI2
aI3
ag345
aS'@@tdeg_Gphase'
p377
asg346
(lp378
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p379
asg22
(lp380
F0.0
aS'@@ft_coeff_scale'
p381
asg23
(lp382
I00
ag347
asg348
(lp383
I0
aI1
aI2
aI3
ag349
aS'@@fdeg_Gphase'
p384
asg7
(lp385
Nag350
asg351
(lp386
I0
aI1
aI2
aI3
aS'@@fdeg_Gampl'
p387
asg355
(lp388
S'@subtile_size_Gampl'
p389
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p390
asg356
(lp391
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gampl'
p392
asg359
(lp393
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p394
asg357
(lp395
I01
aI00
aS'@@Gpolar'
p396
assg85
Nsg86
S'15dec2005'
p397
sg88
S'2006-02-07 18:03'
p398
sg90
S'MG_JEN_Joneset'
p399
sg92
(dp400
g14
I00
sg357
I00
ssg94
(dp401
g23
I00
sg7
I00
sg1
I00
sg19
I00
ssg96
(dp402
g240
S'.modify( subtile_size_Gampl ): 1  ->  None'
p403
sg98
S'.modify( tdeg_Gampl ): 0  ->  3'
p404
ssg100
g398
sg101
(lp405
g26
ag19
ag7
ag23
ag1
ag14
ag22
ag357
ag351
ag348
ag342
ag344
ag356
ag355
ag340
ag346
ag339
ag359
asg103
(dp406
g339
S'scatter in default c00 funklet values'
p407
sg340
S'default c00 funklet value'
p408
sg14
g106
sg1
g107
sg342
S'degree of time polynomial'
p409
sg19
g110
sg344
g409
sg346
g408
sg22
g111
sg23
g112
sg348
S'degree of freq polynomial'
p410
sg7
g114
sg351
g410
sg355
S'sub-tile size (None=entire tile)'
p411
sg356
g411
sg359
g407
sg357
S'if True, use MeqPolar, otherwise MeqToComplex'
p412
sssg355
g389
sg356
Nsg359
F0.0
sg357
I00
ssg254
(lp413
g265
ag276
assg26
(dp414
g30
S'./MG_JEN_cps.'
p415
sg103
(dp416
g1
g304
sS'master_reqseq'
p417
S'if True, use a master reqseq for solver(s)'
p418
sg19
g306
sS'chain_solvers'
p419
S'if True, chain the solvers (recommended)'
p420
sS'insert_flagger'
p421
S'if True, insert a flagger'
p422
sS'redun'
p423
S'if True, redundant spacing calibration'
p424
sS'insert_solver'
p425
S'if True, insert a solver'
p426
sS'punit'
p427
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- 3c147:'
p428
sg5
S'name of the (AIPS++) Measurement Set'
p429
sg7
g303
sS'num_cells'
p430
S'if defined, ModRes argument [ntime,nfreq]'
p431
sS'tile_size'
p432
S'(inputrec) size (in time-slots) of the input data-tile'
p433
sg23
g112
ssS'reference'
p434
S'MG_JEN_cps.inarg'
p435
sg42
g43
sg90
S'MG_JEN_cps'
p436
sg31
(dp437
g1
I8
sg19
I6
sg421
I2
sg423
I13
sg425
I1
sg427
I9
sg5
I4
sg7
I7
sg3
I0
sg430
I14
sg432
I5
sg23
I10
ssg34
(dp438
g1
I00
sg417
I01
sg19
I00
sg419
I01
sg423
I00
sS'last_changed'
p439
I01
sg23
I00
sg7
I00
sg430
I00
sg427
I00
ssS'browse'
p440
(dp441
g5
S'*.MS'
p442
ssg86
g397
sg44
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p443
sg92
(dp444
g417
I00
sg421
I00
sg423
I00
sg425
I00
sg439
I00
ssg46
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p445
sg51
(dp446
g1
(lp447
g2
ag58
aS'@@polrep'
p448
asg417
(lp449
I01
aI00
aS'@@master_reqseq'
p450
asg19
(lp451
(lp452
I0
aI1
aI2
aI3
aI4
aa(lp453
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp454
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp455
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag285
aS'@@stations'
p456
asg419
(lp457
I01
aS'@@chain_solvers'
p458
asg421
(lp459
I01
aI00
aS'@@insert_flagger'
p460
asg423
(lp461
I01
aI00
aS'@@redun'
p462
asg425
(lp463
I01
aI00
aS'@@insert_solver'
p464
asg439
(lp465
S'd30jan2006'
p466
aS'@@last_changed'
p467
asg5
(lp468
g6
aS'@@ms_name'
p469
asg7
(lp470
NaS'@@parmtable'
p471
asg430
(lp472
Na(lp473
I5
aI2
aa(lp474
I2
aI2
aa(lp475
I3
aI3
aaS'@@num_cells'
p476
asg432
(lp477
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p478
asg427
(lp479
S'unpol'
p480
aS'unpol2'
p481
aS'unpol10'
p482
aS'3c147'
p483
aS'RMtest'
p484
aS'QUV'
p485
aS'QU'
p486
aS'SItest'
p487
aS'@@punit'
p488
asg23
(lp489
I00
aS'@@uvplane_effect'
p490
assg100
S'2006-02-07 18:03'
p491
sS'HISTORY'
p492
(dp493
g240
S'2006-02-07 18:07: Derived from: MG_JEN_cps_GDJones.inarg'
p494
sg98
S'2006-02-07 18:03: Derived from: MG_JEN_cps.inarg'
p495
ssg28
g4
sS'save_file'
p496
S'MG_JEN_cps_GDJones_protected.inarg'
p497
sS'file_filter'
p498
S'MG_JEN_cps*.inarg'
p499
sg48
S''
p500
sg50
I01
sg88
g491
sg96
(dp501
g240
S'.modify( uvplane_effect ): False  ->  True'
p502
sg98
S'.modify(): stripped off: _JEN_inarg_option'
p503
sg293
S".modify(): found ={'uvplane_effect': 1, 'tile_size': 1}"
p504
sg295
S'.modify( tile_size ): 10  ->  100'
p505
sS'5'
p506
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p507
sg297
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p508
sS'7'
p509
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p510
sS'6'
p511
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p512
sS'9'
p513
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p514
sS'8'
p515
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p516
ssg101
(lp517
g26
ag3
ag425
ag421
ag439
ag5
ag432
ag19
ag7
ag1
ag427
ag23
ag419
ag417
ag423
ag430
aS'./MG_JEN_exec.stream_control()'
p518
aS'./MG_JEN_Cohset.make_spigots()'
p519
ag8
aS'./MG_JEN_Cohset.predict()'
p520
aS'./MG_JEN_Cohset.insert_solver()'
p521
aS'./MG_JEN_Cohset.make_sinks()'
p522
assg522
(dp523
S'flag'
p524
I00
sS'visu'
p525
I01
sg26
(dp526
g28
S'MG_JEN_Cohset::make_sinks()'
p527
sg30
g522
sg100
S'2006-02-07 18:03'
p528
sg40
S'MG_JEN_Cohsetmake_sinks'
p529
sg42
g43
sg46
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-07 18:03'
p530
sg48
S'make_sinks'
p531
sg51
(dp532
g524
(lp533
I01
aI00
aS'@@flag'
p534
asg525
(lp535
I01
aI00
aS'@@visu'
p536
asS'output_col'
p537
(lp538
S'PREDICT'
p539
aS'RESIDUALS'
p540
aS'DATA'
p541
aS'@@output_col'
p542
asS'visu_array_config'
p543
(lp544
I01
aI00
aS'@@visu_array_config'
p545
assg85
Nsg86
g287
sg31
(dp546
g524
I125
sg525
I124
sg537
I122
sg543
I123
ssg88
g528
sg90
S'MG_JEN_Cohset'
p547
sg92
(dp548
g524
I00
sg525
I00
sg543
I00
ssg50
I00
sg101
(lp549
g26
ag537
ag543
ag525
ag524
asg103
(dp550
g524
S'if True, insert a flagger for the output uv-data'
p551
sg525
S'if True, visualise the output uv-data'
p552
sg537
S'name of the logical (VisTile) output column'
p553
sg543
S'if True, visualise the array config (from MS)'
p554
ssg44
S'Make sink nodes in the given Cohset object'
p555
ssg537
g539
sg543
I01
ssg432
I100
sg519
(dp556
g524
I00
sg525
I01
sg26
(dp557
g28
S'MG_JEN_Cohset::make_spigots()'
p558
sg30
g519
sg100
S'2006-02-07 18:03'
p559
sg34
(dp560
S'input_col'
p561
I01
ssg40
S'MG_JEN_Cohsetmake_spigots'
p562
sg42
g43
sg46
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-07 18:03'
p563
sg48
S'make_spigots'
p564
sg51
(dp565
g524
(lp566
I01
aI00
aS'@@flag'
p567
asS'MS_corr_index'
p568
(lp569
(lp570
I0
aI1
aI2
aI3
aa(lp571
I0
aI-1
aI-1
aI1
aa(lp572
I0
aI-1
aI-1
aI3
aaS'@@'
p573
aS'@@MS_corr_index'
p574
asg561
(lp575
g541
ag539
ag540
aS'@@input_col'
p576
asg525
(lp577
I01
aI00
aS'@@visu'
p578
assg85
Nsg86
g287
sg31
(dp579
g524
I26
sg568
I24
sg525
I25
ssg88
g559
sg90
S'MG_JEN_Cohset'
p580
sg92
(dp581
g524
I00
sg525
I00
ssg50
I00
sg101
(lp582
g26
ag561
ag568
ag525
ag524
asg103
(dp583
g524
S'if True, insert a flagger for the input uv-data'
p584
sg568
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p585
sg561
S'name of the logical (VisTile) input column'
p586
sg525
S'if True, visualise the input uv-data'
p587
ssg44
S'Make spigot nodes in the given Cohset object'
p588
ssg561
g541
sg568
g570
ssg520
(dp589
g1
S'@@polrep'
p590
sg26
(dp591
g28
S'MG_JEN_Cohset::predict()'
p592
sg30
g520
sg100
S'2006-02-07 18:03'
p593
sg34
(dp594
g1
I01
sg19
I01
ssg40
S'MG_JEN_Cohsetpredict'
p595
sg42
g43
sg46
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-07 18:03'
p596
sg48
S'predict'
p597
sg51
(dp598
g1
(lp599
g2
ag58
ag590
asg19
(lp600
(lp601
I0
aI1
aI2
aI3
aI4
aa(lp602
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp603
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp604
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag285
aS'@@stations'
p605
assg85
Nsg86
g287
sg31
(dp606
sg88
g593
sg90
S'MG_JEN_Cohset'
p607
sg94
(dp608
g1
I00
sg19
I00
ssg50
I00
sg101
(lp609
g26
ag19
ag1
asg103
(dp610
g1
g304
sg19
g306
ssg44
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p611
ssg19
g605
ssg421
I00
sg439
g466
sg427
g480
sg23
I01
sg430
Nsg417
I00
sg19
g452
sg518
(dp612
S'channel_start_index'
p613
I10
sS'data_column_name'
p614
g541
sS'predict_column'
p615
S'CORRECTED_DATA'
p616
sg5
S'@@ms_name'
p617
sg26
(dp618
g28
S'MG_JEN_exec::stream_control()'
p619
sg30
g518
sg100
S'2006-02-07 18:03'
p620
sg34
(dp621
g5
I01
sg432
I01
ssg40
S'MG_JEN_execstream_control'
p622
sg440
(dp623
g5
g442
ssg42
g43
sg46
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-07 18:03'
p624
sg48
S'stream_control'
p625
sg51
(dp626
g613
(lp627
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p628
asg614
(lp629
g541
ag616
aS'@@data_column_name'
p630
asg615
(lp631
g541
ag616
aS'MODEL_DATA'
p632
aS'@@predict_column'
p633
asg5
(lp634
g6
ag617
asg432
(lp635
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p636
asS'channel_increment'
p637
(lp638
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p639
asS'channel_end_index'
p640
(lp641
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p642
asS'write_flags'
p643
(lp644
I01
aI00
aS'@@write_flags'
p645
assg85
Nsg86
S'20jan2006'
p646
sg31
(dp647
g613
I18
sg614
I17
sg615
I22
sg643
I21
sg640
I19
sg637
I20
ssg88
g620
sg90
S'MG_JEN_exec'
p648
sg92
(dp649
g643
I00
ssg94
(dp650
g5
I00
sg432
I00
ssg50
I00
sg101
(lp651
g26
ag5
ag432
ag614
ag613
ag640
ag637
ag643
ag615
asg103
(dp652
g613
S'(inputrec.sel) index of first selected freq channel'
p653
sg614
S'(inputrec) MS input column'
p654
sg615
S'MS output column to be associated with the VisTile predict-column'
p655
sg5
g429
sg432
g433
sg637
S'(inputrec.sel) take every nth channel (1=all)'
p656
sg640
S'(inputrec.sel) index of last selected freq channel'
p657
sg643
S'(outputrec) if True, write flags to MS'
p658
ssg44
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-07 18:03'
p659
ssg432
g636
sg637
I1
sg640
I50
sg643
I00
ssg423
I00
sg425
I01
sg419
I01
sg521
(dp660
g417
S'@@master_reqseq'
p661
sg525
I01
sg423
S'@@redun'
p662
sS'solver_subtree'
p663
NsS'./MG_JEN_Cohset.solver_subtree()'
p664
(dp665
S'rmin'
p666
I150
sg525
I01
sS'epsilon'
p667
F0.0001
sS'rmax'
p668
NsS'usesvd'
p669
I01
sS'debug_level'
p670
I10
sS'solvegroup'
p671
(lp672
g265
ag273
asg26
(dp673
g28
S'MG_JEN_Cohset::solver_subtree()'
p674
sg30
g664
sg31
(dp675
g666
I112
sg525
I120
sg667
I116
sg668
I113
sg669
I118
sg671
I110
sg430
I114
sS'history'
p676
I121
sS'num_iter'
p677
I115
sS'condition'
p678
I111
sS'colin_factor'
p679
I117
ssg34
(dp680
g670
I01
sg430
I00
ssg40
S'MG_JEN_Cohsetsolver_subtree'
p681
sg42
g43
sg44
S'Make a solver-subtree for the given Condeq Cohset'
p682
sg46
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-07 18:03'
p683
sg48
S'solver_subtree'
p684
sg50
I00
sg51
(dp685
g666
(lp686
NaI100
aI200
aI500
aS'@@rmin'
p687
asg525
(lp688
I01
aI00
aS'@@visu'
p689
asg667
(lp690
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p691
asg668
(lp692
NaI500
aI1000
aI2000
aS'@@rmax'
p693
asg669
(lp694
I01
aI00
aS'@@usesvd'
p695
asg670
(lp696
I10
aS'@@debug_level'
p697
asg671
(lp698
(lp699
a(lp700
g265
aa(lp701
S'Gampl'
p702
aa(lp703
S'Gphase'
p704
aa(lp705
S'Gpol1'
p706
aa(lp707
S'Gpol2'
p708
aa(lp709
g265
aS'stokesI'
p710
aa(lp711
g710
aa(lp712
S'stokesIQU'
p713
aa(lp714
S'stokesIQUV'
p715
aa(lp716
g265
ag273
aa(lp717
g273
aa(lp718
S'dang'
p719
aa(lp720
S'dell'
p721
aa(lp722
g265
ag273
ag269
aa(lp723
g269
aa(lp724
g265
ag267
aa(lp725
g267
aa(lp726
S'Breal'
p727
aa(lp728
S'Bimag'
p729
aa(lp730
S'Bpol1'
p731
aa(lp732
S'Bpol2'
p733
aaS'@@solvegroup'
p734
asg430
(lp735
Na(lp736
I5
aI2
aa(lp737
I2
aI2
aa(lp738
I3
aI3
aaS'@@num_cells'
p739
asg679
(lp740
F1e-08
aF0.0
aS'@@colin_factor'
p741
asg677
(lp742
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p743
asg678
(lp744
NaS'Gphase_X_sum=0.0'
p745
aS'Gphase_Y_sum=0.0'
p746
a(lp747
g745
ag746
aa(lp748
S'Gphase_X_first=0.0'
p749
aS'Gphase_Y_first=0.0'
p750
aa(lp751
S'Gphase_X_last=0.0'
p752
aS'Gphase_Y_last=0.0'
p753
aaS'dang_sum=0.0'
p754
a(lp755
S'Bimag_X_sum=0.0'
p756
aS'Bimag_Y_sum=0.0'
p757
aa(lp758
S'Breal_X_product=1.0'
p759
aS'Breal_Y_product=1.0'
p760
aaS'@@condition'
p761
asg676
(lp762
I01
aI00
aS'@@history'
p763
assg85
Nsg86
S'20dec2005'
p764
sg88
S'2006-02-07 18:03'
p765
sg90
S'MG_JEN_Cohset'
p766
sg92
(dp767
g669
I00
sg525
I00
sg676
I00
ssg96
(dp768
g98
S'.modify( rmin ): None  ->  150'
p769
ssg100
g765
sg101
(lp770
g26
ag671
ag678
ag666
ag668
ag430
ag677
ag667
ag679
ag669
ag670
ag525
ag676
asg103
(dp771
g666
S'if specified, only use baselines>=rmin'
p772
sg525
S'if True, include visualisation'
p773
sg667
S'iteration control criterion'
p774
sg668
S'if specified, only use baselines<=rmax'
p775
sg669
S'if True, use Singular Value Decomposition (SVD)'
p776
sg670
S'solver debug_level'
p777
sg671
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Gampl]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p778
sg430
g431
sg679
S'colinearity factor'
p779
sg677
S'max number of iterations'
p780
sg678
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p781
sg676
S'if True, include history collection of metrics'
p782
sssg430
Nsg679
F1e-08
sg677
I20
sg678
Nsg676
I01
ssg419
S'@@chain_solvers'
p783
sg26
(dp784
g28
S'MG_JEN_Cohset::insert_solver()'
p785
sg30
g521
sg31
(dp786
S'subtract'
p787
I108
sS'correct'
p788
I109
sg525
I107
ssg34
(dp789
g663
I01
sg423
I01
sg419
I01
sg417
I01
sg430
I01
ssg40
S'MG_JEN_Cohsetinsert_solver'
p790
sg42
g43
sg46
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-07 18:03'
p791
sg48
S'insert_solver'
p792
sg51
(dp793
g417
(lp794
I01
aI00
ag661
asg525
(lp795
I01
aI00
aS'@@visu'
p796
asg423
(lp797
I01
aI00
ag662
asg663
(lp798
NaS'@@solver_subtree'
p799
asg419
(lp800
I01
ag783
asg430
(lp801
Na(lp802
I5
aI2
aa(lp803
I2
aI2
aa(lp804
I3
aI3
aaS'@@num_cells'
p805
asg787
(lp806
I01
aI00
aS'@@subtract'
p807
asg788
(lp808
I01
aI00
aS'@@correct'
p809
assg85
Nsg50
I00
sg88
S'2006-02-07 18:03'
p810
sg86
g287
sg90
S'MG_JEN_Cohset'
p811
sg92
(dp812
g788
I00
sg525
I00
sg787
I00
sg417
I00
sg423
I00
ssg94
(dp813
g423
I00
sg419
I00
sg417
I00
sg430
I00
ssg96
(dp814
g98
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p815
ssg100
g810
sg101
(lp816
g26
ag663
ag423
ag430
ag419
ag417
ag525
ag787
ag788
ag664
asg103
(dp817
g417
g418
sg525
S'if True, include full visualisation'
p818
sg423
g424
sg663
S'solver subtree qualifier(s)'
p819
sg419
g420
sg430
g431
sg787
S'if True, subtract predicted from measured'
p820
sg788
S'if True, correct measured with predicted.Joneset'
p821
ssg44
S'insert one or more solver subtrees in the data stream'
p822
ssg430
g805
sg787
I00
sg788
I01
ss.