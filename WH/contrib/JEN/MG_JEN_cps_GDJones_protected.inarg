(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I86
sg17
I91
sg21
I88
sg38
I87
sg25
I90
sg44
I89
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-14 18:46'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I110
sg129
I111
sg131
I109
sg142
I113
sg144
I108
sg146
I114
sg148
I115
sg149
I112
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-14 18:46'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I76
sg217
I78
sg208
I77
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-14 18:46'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I52
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones_WSRT'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg14
(lp294
(lp295
I0
aI1
aI2
aI3
aI4
aa(lp296
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p299
ag121
assg101
Nsg102
S'2006-02-14 18:46'
p300
sg104
S'MG_JEN_Cohset::JJones()'
p301
sg106
S'MG_JEN_CohsetJJones'
p302
sg108
S'JJones'
p303
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p304
sg112
I00
sg113
g300
sg114
(dp305
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p306
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p307
sS'3'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p309
sS'2'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p311
sS'5'
p312
S".modify( Jsequence ): []  ->  ['GJones', 'DJones_WSRT']"
p313
sS'4'
p314
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p315
ssg118
(lp316
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p317
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p318
ag122
assg318
(dp319
g12
I00
sg1
S'@@polrep'
p320
sg14
S'@@stations'
p321
sg22
F0.0
sg23
S'@@uvplane_effect'
p322
sg7
S'@@parmtable'
p323
sg26
(dp324
g28
g318
sg29
(dp325
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p326
sg50
(dp327
sg52
(dp328
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p329
sg56
S'12dec2005'
p330
sg58
(dp331
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p332
sg62
(dp333
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p334
sg66
(dp335
g12
(lp336
I01
aI00
aS'@@unsolvable'
p337
asg1
(lp338
g2
ag71
ag320
asg14
(lp339
(lp340
I0
aag321
asg22
(lp341
F0.0
aS'@@ft_coeff_scale'
p342
asg23
(lp343
I00
ag322
asg7
(lp344
Nag323
assg101
Nsg102
S'2006-02-14 18:46'
p345
sg104
S'MG_JEN_Joneset::KJones()'
p346
sg106
S'MG_JEN_JonesetKJones'
p347
sg108
S'KJones'
p348
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p349
sg112
I00
sg113
g345
sg118
(lp350
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg317
(dp351
g12
I00
sg1
S'@@polrep'
p352
sS'fdeg_Ggain'
p353
I0
sS'tdeg_Gphase'
p354
S'@tdeg_Ggain'
p355
sS'stddev_Ggain'
p356
F0.0
sS'c00_Gphase'
p357
F0.0
sg22
F0.0
sg14
S'@@stations'
p358
sS'tdeg_Ggain'
p359
I3
sS'fdeg_Gphase'
p360
S'@fdeg_Ggain'
p361
sg7
S'@@parmtable'
p362
sg26
(dp363
g28
g317
sg29
(dp364
g12
g31
sg1
g32
sg14
g33
sg357
S'default c00 funklet value'
p365
sg353
S'degree of freq polynomial'
p366
sg354
S'degree of time polynomial'
p367
sg22
g37
sg359
g367
sg360
g366
sg7
g43
sg356
S'scatter in default c00 funklet values'
p368
sS'subtile_size_Gphase'
p369
S'sub-tile size (None=entire tile)'
p370
sS'c00_Ggain'
p371
g365
sS'stddev_Gphase'
p372
g368
sS'Gpolar'
p373
S'if True, use MeqPolar, otherwise MeqToComplex'
p374
sS'subtile_size_Ggain'
p375
g370
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p376
sg50
(dp377
g353
I60
sg375
I64
sg354
I63
sg359
I62
sg360
I61
sg369
I65
sg373
I59
ssg52
(dp378
g12
I01
sg1
I01
sg14
I01
sg356
I01
sg357
I01
sg22
I01
sg23
I01
sg7
I01
sg371
I01
sg372
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p379
sg56
S'15dec2005'
p380
sg58
(dp381
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p382
sg62
(dp383
g12
I00
sg373
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p384
sg66
(dp385
g12
(lp386
I01
aI00
aS'@@unsolvable'
p387
asg1
(lp388
g2
ag71
ag352
asg14
(lp389
(lp390
I0
aag358
asg357
(lp391
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p392
asg353
(lp393
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p394
asg354
(lp395
I0
aI1
aI2
aI3
ag355
aS'@@tdeg_Gphase'
p396
asg22
(lp397
F0.0
aS'@@ft_coeff_scale'
p398
asg359
(lp399
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p400
asg360
(lp401
I0
aI1
aI2
aI3
ag361
aS'@@fdeg_Gphase'
p402
asg7
(lp403
Nag362
asg356
(lp404
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p405
asg369
(lp406
S'@subtile_size_Ggain'
p407
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p408
asg371
(lp409
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p410
asg372
(lp411
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p412
asg373
(lp413
I01
aI00
aS'@@Gpolar'
p414
asg375
(lp415
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p416
asg23
(lp417
I00
aS'@@uvplane_effect'
p418
assg101
Nsg102
S'2006-02-14 18:46'
p419
sg104
S'MG_JEN_Joneset::GJones()'
p420
sg106
S'MG_JEN_JonesetGJones'
p421
sg108
S'GJones'
p422
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p423
sg112
I00
sg113
g419
sg114
(dp424
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p425
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p426
ssg118
(lp427
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag373
ag353
ag360
ag359
ag354
ag375
ag369
ag371
ag357
ag356
ag372
assg369
g407
sg371
F1.0
sg372
F0.0
sg373
I00
sg375
Nsg23
g418
ssg263
(lp428
g280
ag288
assg26
(dp429
g28
S'./MG_JEN_cps.'
p430
sg29
(dp431
g1
g262
sS'master_reqseq'
p432
S'if True, use a master reqseq for solver(s)'
p433
sg14
g265
sS'insert_flagger'
p434
S'if True, insert a flagger'
p435
sS'redun'
p436
S'if True, redundant spacing calibration'
p437
sS'insert_solver'
p438
S'if True, insert a solver'
p439
sg5
S'name of the (AIPS++) Measurement Set'
p440
sS'chain_solvers'
p441
S'if True, chain the solvers (recommended)'
p442
sS'num_cells'
p443
S'if defined, ModRes argument [ntime,nfreq]'
p444
sg7
g261
sS'tile_size'
p445
S'(inputrec) size (in time-slots) of the input data-tile'
p446
sg23
g39
ssS'reference'
p447
I00
sg46
g47
sg48
S'MG_JEN_cps'
p448
sg50
(dp449
g1
I8
sg14
I6
sg434
I2
sg436
I12
sg438
I1
sg5
I4
sg7
I7
sg3
I0
sg443
I13
sg445
I5
sg23
I9
ssg52
(dp450
g1
I00
sg432
I01
sg14
I00
sS'last_changed'
p451
I01
sg436
I00
sg23
I00
sg441
I01
sg443
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p452
sg56
g380
sg60
g452
sg62
(dp453
g451
I00
sg434
I00
sg432
I00
sg438
I00
sg436
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p454
sg66
(dp455
g1
(lp456
g2
ag71
aS'@@polrep'
p457
asg432
(lp458
I01
aI00
aS'@@master_reqseq'
p459
asg14
(lp460
(lp461
I0
aI1
aI2
aI3
aI4
aa(lp462
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp463
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp464
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p465
asg434
(lp466
I01
aI00
aS'@@insert_flagger'
p467
asg451
(lp468
S'd30jan2006'
p469
aS'@@last_changed'
p470
asg438
(lp471
I01
aI00
aS'@@insert_solver'
p472
asg436
(lp473
I01
aI00
aS'@@redun'
p474
asg5
(lp475
g6
aS'@@ms_name'
p476
asg441
(lp477
I01
aS'@@chain_solvers'
p478
asg443
(lp479
Na(lp480
I5
aI2
aa(lp481
I2
aI2
aa(lp482
I3
aI3
aaS'@@num_cells'
p483
asg7
(lp484
NaS'@@parmtable'
p485
asg445
(lp486
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p487
asg23
(lp488
I00
aS'@@uvplane_effect'
p489
assg102
S'2006-02-14 18:46'
p490
sS'HISTORY'
p491
(dp492
g253
S'2006-02-14 18:46: Derived from: MG_JEN_cps_GDJones.inarg'
p493
sg116
S'2006-02-14 18:46: Derived from: MG_JEN_cps.inarg'
p494
ssg104
g4
sS'save_file'
p495
S'MG_JEN_cps_GDJones_protected.inarg'
p496
sS'file_filter'
p497
S'MG_JEN_cps*.inarg'
p498
sg108
S''
p499
sg110
S'<specific>'
p500
sS'browse'
p501
(dp502
g5
S'*.MS'
p503
ssg112
I01
sg113
g490
sg114
(dp504
S'11'
p505
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1}"
p506
sS'10'
p507
S'.modify(): stripped off: _JEN_inarg_option'
p508
sS'13'
p509
S".modify(): found ={'I0': 1, 'Qpct': 1, 'Vpct': 1, 'SI': 1, 'RM': 1, 'Upct': 1, 'punit': 1}"
p510
sS'12'
p511
S'.modify(): stripped off: _JEN_inarg_option'
p512
sg253
S'.modify( uvplane_effect ): False  ->  True'
p513
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p514
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p515
sg310
S".modify(): found ={'uvplane_effect': 1}"
p516
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p517
sg314
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p518
sS'7'
p519
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p520
sS'6'
p521
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p522
sS'9'
p523
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p524
sS'8'
p525
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p526
ssg118
(lp527
g26
ag3
ag438
ag434
ag451
ag5
ag445
ag14
ag7
ag1
ag23
ag441
ag432
ag436
ag443
aS'./MG_JEN_exec.stream_control()'
p528
aS'./MG_JEN_Cohset.make_spigots()'
p529
aS'./MG_JEN_Sixpack.newstar_source()'
p530
ag8
aS'./MG_JEN_Cohset.predict()'
p531
aS'./MG_JEN_Cohset.insert_solver()'
p532
aS'./MG_JEN_Cohset.make_sinks()'
p533
assg533
(dp534
S'fullDomainMux'
p535
I01
sS'output_col'
p536
S'PREDICT'
p537
sS'visu'
p538
I01
sS'flag'
p539
I00
sg26
(dp540
g104
S'MG_JEN_Cohset::make_sinks()'
p541
sg28
g533
sg50
(dp542
g539
I147
sg538
I146
sg535
I148
sg536
I144
sS'visu_array_config'
p543
I145
ssg106
S'MG_JEN_Cohsetmake_sinks'
p544
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p545
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p546
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p547
sg108
S'make_sinks'
p548
sg66
(dp549
g539
(lp550
I01
aI00
aS'@@flag'
p551
asg543
(lp552
I01
aI00
aS'@@visu_array_config'
p553
asg536
(lp554
g537
aS'RESIDUALS'
p555
aS'DATA'
p556
aS'@@output_col'
p557
asg535
(lp558
I01
aI00
aS'@@fullDomainMux'
p559
asg538
(lp560
I01
aI00
aS'@@visu'
p561
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p562
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p563
sg48
S'MG_JEN_Cohset'
p564
sg62
(dp565
g539
I00
sg543
I00
sg535
I00
sg538
I00
ssg112
I00
sg102
g563
sg118
(lp566
g26
ag536
ag543
ag538
ag539
ag535
asg29
(dp567
g539
S'if True, insert a flagger for the output uv-data'
p568
sg543
S'if True, visualise the array config (from MS)'
p569
sg536
S'name of the logical (VisTile) output column'
p570
sg535
S'if True, attach an extra VisDataMux'
p571
sg538
S'if True, visualise the output uv-data'
p572
sssg543
I01
ssg445
I10
sg529
(dp573
S'MS_corr_index'
p574
(lp575
I0
aI1
aI2
aI3
asg539
I00
sg26
(dp576
g104
S'MG_JEN_Cohset::make_spigots()'
p577
sg28
g529
sg50
(dp578
g539
I25
sg574
I23
sg538
I24
ssg52
(dp579
S'input_col'
p580
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p581
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p582
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p583
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p584
sg108
S'make_spigots'
p585
sg66
(dp586
g539
(lp587
I01
aI00
aS'@@flag'
p588
asg574
(lp589
g575
a(lp590
I0
aI-1
aI-1
aI1
aa(lp591
I0
aI-1
aI-1
aI3
aaS'@@'
p592
aS'@@MS_corr_index'
p593
asg580
(lp594
g556
ag537
ag555
aS'@@input_col'
p595
asg538
(lp596
I01
aI00
aS'@@visu'
p597
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p598
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p599
sg48
S'MG_JEN_Cohset'
p600
sg62
(dp601
g539
I00
sg538
I00
ssg112
I00
sg102
g599
sg118
(lp602
g26
ag580
ag574
ag538
ag539
asg29
(dp603
g539
S'if True, insert a flagger for the input uv-data'
p604
sg574
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p605
sg580
S'name of the logical (VisTile) input column'
p606
sg538
S'if True, visualise the input uv-data'
p607
sssg580
g556
sg538
I01
ssg531
(dp608
g1
S'@@polrep'
p609
sg26
(dp610
g104
S'MG_JEN_Cohset::predict()'
p611
sg28
g531
sg50
(dp612
sg52
(dp613
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p614
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p615
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p616
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p617
sg108
S'predict'
p618
sg66
(dp619
g1
(lp620
g2
ag71
ag609
asg14
(lp621
(lp622
I0
aI1
aI2
aI3
aI4
aa(lp623
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp624
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp625
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p626
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p627
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p628
sg48
S'MG_JEN_Cohset'
p629
sg58
(dp630
g1
I00
sg14
I00
ssg112
I00
sg102
g628
sg118
(lp631
g26
ag14
ag1
asg29
(dp632
g1
g262
sg14
g265
sssg14
g626
ssg434
I00
sg451
g469
sg23
I01
sg443
Nsg530
(dp633
S'f0'
p634
F1000000.0
sS'major'
p635
F0.0
sg12
I00
sS'shape'
p636
S'point'
p637
sg7
NsS'Upct'
p638
I-10
sS'I0'
p639
F1.0
sS'Vpct'
p640
NsS'dDec'
p641
F0.0
sS'pa'
p642
F0.0
sg26
(dp643
g28
g530
sg29
(dp644
g634
S'reference freq (Hz): I=I0 @ f=f0'
p645
sg635
S'major axis (arcsec)'
p646
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p647
sg639
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p648
sg642
S'position angle (rad)'
p649
sS'SI'
p650
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p651
sS'Qpct'
p652
S'Stokes Q (percentage of I)'
p653
sS'punit'
p654
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p655
sg641
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p656
sg636
S'source shape'
p657
sg7
S'name of the MeqParm table (AIPS++)'
p658
sS'fsr_trace'
p659
S'If True, attach to forest state record'
p660
sS'RA0'
p661
S'If RA0 is a node, RA0+dRA overrides RA'
p662
sS'dRA'
p663
S'RA offset (arcsec): RA = RA0 + dRA'
p664
sS'RM'
p665
S'Intrinsic Rotation Measure (rad/m2)'
p666
sg638
S'Stokes U (percentage of I)'
p667
sS'Dec'
p668
S'Declination (rad, J2000)'
p669
sS'Dec0'
p670
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p671
sg640
S'Stokes V (percentage of I)'
p672
sS'minor'
p673
S'minor axis (arcsec)'
p674
sS'RA'
p675
S'Right Ascension (rad, J2000)'
p676
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p677
sg50
(dp678
g668
I38
sg639
I30
sg652
I31
sg640
I33
sg650
I35
sg7
I28
sg675
I37
sg665
I34
sg638
I32
sg654
I26
ssg52
(dp679
g634
I01
sg635
I01
sg12
I01
sS'name'
p680
I01
sg659
I01
sg654
I00
sg641
I01
sg636
I01
sg642
I01
sg661
I01
sg663
I01
sg670
I01
sg673
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p681
sg56
S'10feb2006'
p682
sg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p683
sg62
(dp684
g12
I00
sg659
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p685
sg66
(dp686
g634
(lp687
F1000000.0
aS'@@f0'
p688
asg635
(lp689
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p690
asg12
(lp691
I01
aI00
aS'@@unsolvable'
p692
asg636
(lp693
g637
aS'ell.gauss'
p694
aS'@@shape'
p695
asg7
(lp696
NaS'@@parmtable'
p697
asg638
(lp698
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p699
asg639
(lp700
F1.0
aF10.0
aS'@@I0'
p701
asg640
(lp702
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p703
asg641
(lp704
F0.0
aS'@@dDec'
p705
asg642
(lp706
F0.0
aF1.0
aF-0.5
aS'@@pa'
p707
asg675
(lp708
F0.0
aF0.5
aF1.0
aS'@@RA'
p709
asg663
(lp710
F0.0
aS'@@dRA'
p711
asg665
(lp712
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p713
asg670
(lp714
NaS'@@Dec0'
p715
asg673
(lp716
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p717
asg652
(lp718
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p719
asg654
(lp720
S'unpol'
p721
aS'unpol2'
p722
aS'unpol10'
p723
aS'QUV'
p724
aS'QU'
p725
aS'Qonly'
p726
aS'Uonly'
p727
aS'Vonly'
p728
aS'3c147'
p729
aS'3c286'
p730
aS'3c48'
p731
aS'3c295'
p732
aS'RMtest'
p733
aS'SItest'
p734
aS'@@punit'
p735
asg661
(lp736
NaS'@@RA0'
p737
asg668
(lp738
F0.5
aF1.0
aS'@@Dec'
p739
asg680
(lp740
NaS'@@name'
p741
asg659
(lp742
I01
aI00
aS'@@fsr_trace'
p743
asg650
(lp744
NaF-0.69999999999999996
a(lp745
F0.44700000000000001
aF-0.184
aaS'@@SI'
p746
assg101
Nsg102
S'2006-02-14 18:46'
p747
sg104
S'MG_JEN_Sixpack::newstar_source()'
p748
sg106
S'MG_JEN_Sixpacknewstar_source'
p749
sg108
S'newstar_source'
p750
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p751
sS'callback'
p752
(dp753
g654
I01
ssg112
I00
sg113
g747
sg114
(dp754
g253
S'.modify( Upct ): None  ->  -10'
p755
sg116
S'.modify( Qpct ): None  ->  10'
p756
sg310
S'.modify( punit ): unpol  ->  QU'
p757
ssg118
(lp758
g26
ag654
ag680
ag7
ag12
ag639
ag652
ag638
ag640
ag665
ag650
ag634
ag675
ag668
ag659
ag636
ag635
ag673
ag642
ag661
ag670
ag663
ag641
assg663
F0.0
sg665
Nsg670
Nsg673
F0.0
sg675
F0.0
sg652
I10
sg654
g725
sg661
Nsg668
F1.0
sg680
Nsg659
I01
sg650
Nssg432
I00
sg14
g461
sg528
(dp759
S'channel_start_index'
p760
I10
sS'data_column_name'
p761
g556
sS'predict_column'
p762
S'CORRECTED_DATA'
p763
sg5
S'@@ms_name'
p764
sg26
(dp765
g28
g528
sg29
(dp766
g760
S'(inputrec.sel) index of first selected freq channel'
p767
sg761
S'(inputrec) MS input column'
p768
sg762
S'MS output column to be associated with the VisTile predict-column'
p769
sg5
g440
sg445
g446
sS'channel_increment'
p770
S'(inputrec.sel) take every nth channel (1=all)'
p771
sS'channel_end_index'
p772
S'(inputrec.sel) index of last selected freq channel'
p773
sS'write_flags'
p774
S'(outputrec) if True, write flags to MS'
p775
ssg46
g47
sg48
S'MG_JEN_exec'
p776
sg50
(dp777
g760
I17
sg761
I16
sg762
I21
sg774
I20
sg772
I18
sg770
I19
ssg52
(dp778
g5
I01
sg445
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p779
sg56
S'20jan2006'
p780
sg58
(dp781
g5
I00
sg445
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p782
sg62
(dp783
g774
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p784
sg66
(dp785
g760
(lp786
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p787
asg761
(lp788
g556
ag763
aS'@@data_column_name'
p789
asg762
(lp790
g556
ag763
aS'MODEL_DATA'
p791
aS'@@predict_column'
p792
asg5
(lp793
g6
ag764
asg445
(lp794
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p795
asg770
(lp796
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p797
asg772
(lp798
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p799
asg774
(lp800
I01
aI00
aS'@@write_flags'
p801
assg101
Nsg102
S'2006-02-14 18:46'
p802
sg104
S'MG_JEN_exec::stream_control()'
p803
sg106
S'MG_JEN_execstream_control'
p804
sg108
S'stream_control'
p805
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p806
sg501
(dp807
g5
g503
ssg112
I00
sg113
g802
sg118
(lp808
g26
ag5
ag445
ag761
ag760
ag772
ag770
ag774
ag762
assg445
g795
sg770
I1
sg772
I50
sg774
I00
ssg436
I00
sg438
I01
sg441
I01
sg532
(dp809
S'correct_after'
p810
I01
sg432
S'@@master_reqseq'
p811
sS'condeq_unop'
p812
Nsg538
I01
sg436
S'@@redun'
p813
sS'solver_subtree'
p814
NsS'subtract_after'
p815
I00
sg441
S'@@chain_solvers'
p816
sg26
(dp817
g28
g532
sg29
(dp818
g810
S'if True, correct measured with predicted.Joneset'
p819
sg432
g433
sg812
S'Optional unary operation on Condeq inputs'
p820
sg538
S'if True, include full visualisation'
p821
sg436
g437
sg814
S'solver subtree qualifier(s)'
p822
sg815
S'if True, subtract predicted from measured'
p823
sg441
g442
sg443
g444
ssg46
g47
sg48
S'MG_JEN_Cohset'
p824
sg50
(dp825
g815
I130
sg810
I131
sg812
I128
sg538
I129
ssg52
(dp826
g814
I01
sg443
I01
sg441
I01
sg436
I01
sg432
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p827
sg56
g270
sg58
(dp828
g443
I00
sg441
I00
sg436
I00
sg432
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p829
sg62
(dp830
g815
I00
sg436
I00
sg810
I00
sg432
I00
sg538
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p831
sg66
(dp832
g810
(lp833
I01
aI00
aS'@@correct_after'
p834
asg432
(lp835
I01
aI00
ag811
asg812
(lp836
NaS'Abs'
p837
aS'Arg'
p838
aS'@@condeq_unop'
p839
asg538
(lp840
I01
aI00
aS'@@visu'
p841
asg436
(lp842
I01
aI00
ag813
asg814
(lp843
NaS'@@solver_subtree'
p844
asg815
(lp845
I01
aI00
aS'@@subtract_after'
p846
asg441
(lp847
I01
ag816
asg443
(lp848
Na(lp849
I5
aI2
aa(lp850
I2
aI2
aa(lp851
I3
aI3
aaS'@@num_cells'
p852
assg101
Nsg102
S'2006-02-14 18:46'
p853
sg104
S'MG_JEN_Cohset::insert_solver()'
p854
sg106
S'MG_JEN_Cohsetinsert_solver'
p855
sg108
S'insert_solver'
p856
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p857
sg112
I00
sg113
g853
sg114
(dp858
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p859
ssg118
(lp860
g26
ag814
ag436
ag443
ag441
ag432
ag812
ag538
ag815
ag810
aS'./MG_JEN_Cohset.solver_subtree()'
p861
assg443
g852
sg861
(dp862
S'rmin'
p863
Nsg538
I01
sS'epsilon'
p864
F0.01
sS'rmax'
p865
NsS'usesvd'
p866
I01
sS'debug_level'
p867
I10
sS'solvegroup'
p868
(lp869
g280
ag291
asg26
(dp870
g28
g861
sg29
(dp871
g863
S'if specified, only use baselines>=rmin'
p872
sg538
S'if True, include visualisation'
p873
sg864
S'iteration control criterion'
p874
sg865
S'if specified, only use baselines<=rmax'
p875
sg866
S'if True, use Singular Value Decomposition (SVD)'
p876
sg867
S'solver debug_level'
p877
sg868
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p878
sg443
g444
sS'history'
p879
S'if True, include history collection of metrics'
p880
sS'num_iter'
p881
S'max number of iterations'
p882
sS'condition'
p883
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p884
sS'colin_factor'
p885
S'colinearity factor'
p886
ssg46
g47
sg48
S'MG_JEN_Cohset'
p887
sg50
(dp888
g863
I134
sg538
I142
sg864
I138
sg865
I135
sg866
I140
sg868
I132
sg443
I136
sg879
I143
sg881
I137
sg883
I133
sg885
I139
ssg52
(dp889
g867
I01
sg443
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p890
sg56
S'20dec2005'
p891
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p892
sg62
(dp893
g866
I00
sg879
I00
sg538
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p894
sg66
(dp895
g863
(lp896
NaI100
aI200
aI500
aS'@@rmin'
p897
asg538
(lp898
I01
aI00
aS'@@visu'
p899
asg864
(lp900
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p901
asg865
(lp902
NaI500
aI1000
aI2000
aS'@@rmax'
p903
asg866
(lp904
I01
aI00
aS'@@usesvd'
p905
asg867
(lp906
I10
aS'@@debug_level'
p907
asg868
(lp908
(lp909
a(lp910
g280
aa(lp911
S'Ggain'
p912
aa(lp913
S'Gphase'
p914
aa(lp915
S'Gpol1'
p916
aa(lp917
S'Gpol2'
p918
aa(lp919
g280
aS'stokesI'
p920
aa(lp921
g920
aa(lp922
S'stokesIQU'
p923
aa(lp924
S'stokesIQUV'
p925
aa(lp926
g280
ag291
aa(lp927
g291
aa(lp928
S'dang'
p929
aa(lp930
S'dell'
p931
aa(lp932
S'Dreal'
p933
aa(lp934
S'Dimag'
p935
aa(lp936
g280
ag291
ag284
aa(lp937
g284
aa(lp938
g280
ag282
aa(lp939
g282
aa(lp940
S'Breal'
p941
aa(lp942
S'Bimag'
p943
aa(lp944
S'Bpol1'
p945
aa(lp946
S'Bpol2'
p947
aaS'@@solvegroup'
p948
asg443
(lp949
Na(lp950
I5
aI2
aa(lp951
I2
aI2
aa(lp952
I3
aI3
aaS'@@num_cells'
p953
asg879
(lp954
I01
aI00
aS'@@history'
p955
asg881
(lp956
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p957
asg883
(lp958
NaS'Gphase_X_sum=0.0'
p959
aS'Gphase_Y_sum=0.0'
p960
a(lp961
g959
ag960
aa(lp962
S'Gphase_X_first=0.0'
p963
aS'Gphase_Y_first=0.0'
p964
aa(lp965
S'Gphase_X_last=0.0'
p966
aS'Gphase_Y_last=0.0'
p967
aa(lp968
S'Dimag_X_sum=0.0'
p969
aS'Dimag_Y_sum=0.0'
p970
aa(lp971
S'Dreal_X_product=1.0'
p972
aS'Dreal_Y_product=1.0'
p973
aaS'dang_sum=0.0'
p974
a(lp975
S'Bimag_X_sum=0.0'
p976
aS'Bimag_Y_sum=0.0'
p977
aa(lp978
S'Breal_X_product=1.0'
p979
aS'Breal_Y_product=1.0'
p980
aaS'@@condition'
p981
asg885
(lp982
F1e-08
aF0.0
aS'@@colin_factor'
p983
assg101
Nsg102
S'2006-02-14 18:46'
p984
sg104
S'MG_JEN_Cohset::solver_subtree()'
p985
sg106
S'MG_JEN_Cohsetsolver_subtree'
p986
sg108
S'solver_subtree'
p987
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p988
sg112
I00
sg113
g984
sg114
(dp989
g253
S'.modify( num_iter ): 20  ->  5'
p990
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p991
sg310
S".modify( solvegroup ): []  ->  ['GJones', 'DJones']"
p992
ssg118
(lp993
g26
ag868
ag883
ag863
ag865
ag443
ag881
ag864
ag885
ag866
ag867
ag538
ag879
assg443
Nsg879
I01
sg881
I5
sg883
Nsg885
F1e-08
sss.