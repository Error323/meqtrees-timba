(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I86
sg17
I91
sg21
I88
sg38
I87
sg25
I90
sg44
I89
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-15 00:27'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-15 00:27'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-15 00:27'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-15 00:27'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I126
sg129
I127
sg131
I125
sg142
I129
sg144
I124
sg146
I130
sg148
I131
sg149
I128
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-15 00:27'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-15 00:27'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-15 00:27'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-15 00:27'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I76
sg217
I78
sg208
I77
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-15 00:27'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-15 00:27'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-15 00:27'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-15 00:27'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I52
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-15 00:27'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-15 00:27'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones_WSRT'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg14
(lp294
(lp295
I0
aI1
aI2
aI3
aI4
aa(lp296
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p299
ag121
assg101
Nsg102
S'2006-02-15 00:27'
p300
sg104
S'MG_JEN_Cohset::JJones()'
p301
sg106
S'MG_JEN_CohsetJJones'
p302
sg108
S'JJones'
p303
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-15 00:27'
p304
sg112
I00
sg113
g300
sg114
(dp305
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p306
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p307
sS'3'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p309
sS'2'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p311
sS'5'
p312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p313
sS'4'
p314
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones()'
p315
sS'6'
p316
S".modify( Jsequence ): []  ->  ['GJones', 'DJones_WSRT']"
p317
ssg118
(lp318
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p319
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p320
aS'./MG_JEN_Joneset.DJones()'
p321
ag122
assg320
(dp322
g12
I00
sg1
S'@@polrep'
p323
sg14
S'@@stations'
p324
sg22
F0.0
sg23
S'@@uvplane_effect'
p325
sg7
S'@@parmtable'
p326
sg26
(dp327
g28
g320
sg29
(dp328
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p329
sg50
(dp330
sg52
(dp331
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-15 00:27'
p332
sg56
S'12dec2005'
p333
sg58
(dp334
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p335
sg62
(dp336
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-15 00:27'
p337
sg66
(dp338
g12
(lp339
I01
aI00
aS'@@unsolvable'
p340
asg1
(lp341
g2
ag71
ag323
asg14
(lp342
(lp343
I0
aag324
asg22
(lp344
F0.0
aS'@@ft_coeff_scale'
p345
asg23
(lp346
I00
ag325
asg7
(lp347
Nag326
assg101
Nsg102
S'2006-02-15 00:27'
p348
sg104
S'MG_JEN_Joneset::KJones()'
p349
sg106
S'MG_JEN_JonesetKJones'
p350
sg108
S'KJones'
p351
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-15 00:27'
p352
sg112
I00
sg113
g348
sg118
(lp353
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg319
(dp354
g12
I00
sg1
S'@@polrep'
p355
sS'fdeg_Ggain'
p356
I0
sS'tdeg_Gphase'
p357
S'@tdeg_Ggain'
p358
sS'stddev_Ggain'
p359
F0.0
sS'c00_Gphase'
p360
F0.0
sg22
F0.0
sg14
S'@@stations'
p361
sS'tdeg_Ggain'
p362
I3
sS'fdeg_Gphase'
p363
S'@fdeg_Ggain'
p364
sg7
S'@@parmtable'
p365
sg26
(dp366
g28
g319
sg29
(dp367
g12
g31
sg1
g32
sg14
g33
sg360
S'default c00 funklet value'
p368
sg356
S'degree of freq polynomial'
p369
sg357
S'degree of time polynomial'
p370
sg22
g37
sg362
g370
sg363
g369
sg7
g43
sg359
S'scatter in default c00 funklet values'
p371
sS'subtile_size_Gphase'
p372
S'sub-tile size (None=entire tile)'
p373
sS'c00_Ggain'
p374
g368
sS'stddev_Gphase'
p375
g371
sS'Gpolar'
p376
S'if True, use MeqPolar, otherwise MeqToComplex'
p377
sS'subtile_size_Ggain'
p378
g373
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p379
sg50
(dp380
g356
I60
sg378
I64
sg357
I63
sg362
I62
sg363
I61
sg372
I65
sg376
I59
ssg52
(dp381
g12
I01
sg1
I01
sg14
I01
sg359
I01
sg360
I01
sg22
I01
sg23
I01
sg7
I01
sg374
I01
sg375
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-15 00:27'
p382
sg56
S'15dec2005'
p383
sg58
(dp384
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p385
sg62
(dp386
g12
I00
sg376
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-15 00:27'
p387
sg66
(dp388
g12
(lp389
I01
aI00
aS'@@unsolvable'
p390
asg1
(lp391
g2
ag71
ag355
asg14
(lp392
(lp393
I0
aag361
asg360
(lp394
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p395
asg356
(lp396
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p397
asg357
(lp398
I0
aI1
aI2
aI3
ag358
aS'@@tdeg_Gphase'
p399
asg22
(lp400
F0.0
aS'@@ft_coeff_scale'
p401
asg362
(lp402
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p403
asg363
(lp404
I0
aI1
aI2
aI3
ag364
aS'@@fdeg_Gphase'
p405
asg7
(lp406
Nag365
asg359
(lp407
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p408
asg372
(lp409
S'@subtile_size_Ggain'
p410
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p411
asg374
(lp412
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p413
asg375
(lp414
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p415
asg376
(lp416
I01
aI00
aS'@@Gpolar'
p417
asg378
(lp418
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p419
asg23
(lp420
I00
aS'@@uvplane_effect'
p421
assg101
Nsg102
S'2006-02-15 00:27'
p422
sg104
S'MG_JEN_Joneset::GJones()'
p423
sg106
S'MG_JEN_JonesetGJones'
p424
sg108
S'GJones'
p425
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-15 00:27'
p426
sg112
I00
sg113
g422
sg114
(dp427
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p428
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p429
ssg118
(lp430
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag376
ag356
ag363
ag362
ag357
ag378
ag372
ag374
ag360
ag359
ag375
assg372
g410
sg374
F1.0
sg375
F0.0
sg376
I00
sg378
Nsg23
g421
ssg321
(dp431
S'subtile_size_Dreal'
p432
Nsg12
I00
sg1
S'@@polrep'
p433
sg14
S'@@stations'
p434
sS'c00_Dimag'
p435
F0.0
sS'stddev_Dimag'
p436
F0.0
sS'tdeg_Dreal'
p437
I0
sS'fdeg_Dreal'
p438
I5
sS'stddev_Dreal'
p439
F0.0
sS'subtile_size_Dimag'
p440
S'@subtile_size_Dreal'
p441
sg23
S'@@uvplane_effect'
p442
sg7
S'@@parmtable'
p443
sg26
(dp444
g28
g321
sg29
(dp445
g432
S'sub-tile size (None=entire tile)'
p446
sg12
g31
sg1
g32
sg14
g33
sg435
S'default c00 funklet value'
p447
sg436
S'scatter in default c00 funklet values'
p448
sg437
S'degree of time polynomial'
p449
sg438
S'degree of freq polynomial'
p450
sg439
g448
sg440
g446
sg23
g39
sg7
g43
sS'c00_Dreal'
p451
g447
sS'fdeg_Dimag'
p452
g450
sg22
g37
sS'tdeg_Dimag'
p453
g449
ssg46
g47
sg48
S'MG_JEN_Joneset'
p454
sg50
(dp455
g432
I112
sg440
I113
sg437
I110
sg453
I111
sg438
I108
sg452
I109
ssg52
(dp456
g12
I01
sg1
I01
sg14
I01
sg435
I01
sg22
I01
sg439
I01
sg7
I01
sg451
I01
sg436
I01
sg23
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-15 00:27'
p457
sg56
S'14feb2006'
p458
sg58
(dp459
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Djones(station,source) matrix elements:\n    - D_11 = (Dreal_11,Dimag_11)\n    - D_12 = (Dreal_12,Dimag_12)\n    - D_21 = (Dreal_21,Dimag_21)\n    - D_22 = (Dreal_22,Dimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p460
sg62
(dp461
g12
I00
ssg64
S'MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-15 00:27'
p462
sg66
(dp463
g432
(lp464
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dreal'
p465
asg12
(lp466
I01
aI00
aS'@@unsolvable'
p467
asg1
(lp468
g2
ag71
ag433
asg14
(lp469
(lp470
I0
aag434
asg435
(lp471
F0.0
aF0.10000000000000001
aS'@@c00_Dimag'
p472
asg436
(lp473
F0.0
aF0.10000000000000001
aS'@@stddev_Dimag'
p474
asg437
(lp475
I0
aI1
aI2
aI3
aS'@@tdeg_Dreal'
p476
asg438
(lp477
I3
aI4
aI5
aS'@@fdeg_Dreal'
p478
asg439
(lp479
F0.0
aF0.10000000000000001
aS'@@stddev_Dreal'
p480
asg440
(lp481
g441
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dimag'
p482
asg23
(lp483
I00
ag442
asg7
(lp484
Nag443
asg451
(lp485
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Dreal'
p486
asg452
(lp487
I0
aI1
aI2
aI3
aS'@fdeg_Dreal'
p488
aS'@@fdeg_Dimag'
p489
asg22
(lp490
F0.0
aS'@@ft_coeff_scale'
p491
asg453
(lp492
I0
aI1
aI2
aI3
aS'@tdeg_Dreal'
p493
aS'@@tdeg_Dimag'
p494
assg101
Nsg102
S'2006-02-15 00:27'
p495
sg104
S'MG_JEN_Joneset::DJones()'
p496
sg106
S'MG_JEN_JonesetDJones'
p497
sg108
S'DJones'
p498
sg110
S'** Specific description of: MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-15 00:27'
p499
sg112
I00
sg113
g495
sg118
(lp500
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag438
ag452
ag437
ag453
ag432
ag440
ag451
ag435
ag439
ag436
assg451
F1.0
sg452
g488
sg22
F0.0
sg453
g493
ssg263
(lp501
g280
ag288
assg26
(dp502
g28
S'./MG_JEN_cps.'
p503
sg29
(dp504
g1
g262
sS'master_reqseq'
p505
S'if True, use a master reqseq for solver(s)'
p506
sg14
g265
sS'insert_flagger'
p507
S'if True, insert a flagger'
p508
sS'redun'
p509
S'if True, redundant spacing calibration'
p510
sS'insert_solver'
p511
S'if True, insert a solver'
p512
sg5
S'name of the (AIPS++) Measurement Set'
p513
sS'chain_solvers'
p514
S'if True, chain the solvers (recommended)'
p515
sS'num_cells'
p516
S'if defined, ModRes argument [ntime,nfreq]'
p517
sg7
g261
sS'tile_size'
p518
S'(inputrec) size (in time-slots) of the input data-tile'
p519
sg23
g39
ssS'reference'
p520
I00
sg46
g47
sg48
S'MG_JEN_cps'
p521
sg50
(dp522
g1
I8
sg14
I6
sg507
I2
sg509
I12
sg511
I1
sg5
I4
sg7
I7
sg3
I0
sg516
I13
sg518
I5
sg23
I9
ssg52
(dp523
g1
I00
sg505
I01
sg14
I00
sS'last_changed'
p524
I01
sg509
I00
sg23
I00
sg514
I01
sg516
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p525
sg56
g383
sg60
g525
sg62
(dp526
g524
I00
sg507
I00
sg505
I00
sg511
I00
sg509
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p527
sg66
(dp528
g1
(lp529
g2
ag71
aS'@@polrep'
p530
asg505
(lp531
I01
aI00
aS'@@master_reqseq'
p532
asg14
(lp533
(lp534
I0
aI1
aI2
aI3
aI4
aa(lp535
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp536
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp537
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p538
asg507
(lp539
I01
aI00
aS'@@insert_flagger'
p540
asg524
(lp541
S'd30jan2006'
p542
aS'@@last_changed'
p543
asg511
(lp544
I01
aI00
aS'@@insert_solver'
p545
asg509
(lp546
I01
aI00
aS'@@redun'
p547
asg5
(lp548
g6
aS'@@ms_name'
p549
asg514
(lp550
I01
aS'@@chain_solvers'
p551
asg516
(lp552
Na(lp553
I5
aI2
aa(lp554
I2
aI2
aa(lp555
I3
aI3
aaS'@@num_cells'
p556
asg7
(lp557
NaS'@@parmtable'
p558
asg518
(lp559
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p560
asg23
(lp561
I00
aS'@@uvplane_effect'
p562
assg102
S'2006-02-15 00:27'
p563
sS'HISTORY'
p564
(dp565
g253
S'2006-02-15 00:27: Derived from: MG_JEN_cps_GDJones.inarg'
p566
sg116
S'2006-02-15 00:27: Derived from: MG_JEN_cps.inarg'
p567
ssg104
g4
sS'save_file'
p568
S'MG_JEN_cps_GDJones_protected.inarg'
p569
sS'file_filter'
p570
S'MG_JEN_cps*.inarg'
p571
sg108
S''
p572
sg110
S'<specific>'
p573
sS'browse'
p574
(dp575
g5
S'*.MS'
p576
ssg112
I01
sg113
g563
sg114
(dp577
S'11'
p578
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1}"
p579
sS'10'
p580
S'.modify(): stripped off: _JEN_inarg_option'
p581
sS'13'
p582
S".modify(): found ={'I0': 1, 'Qpct': 1, 'Vpct': 1, 'SI': 1, 'RM': 1, 'Upct': 1, 'punit': 1}"
p583
sS'12'
p584
S'.modify(): stripped off: _JEN_inarg_option'
p585
sg253
S'.modify( uvplane_effect ): False  ->  True'
p586
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p587
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p588
sg310
S".modify(): found ={'uvplane_effect': 1}"
p589
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p590
sg314
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p591
sS'7'
p592
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p593
sg316
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p594
sS'9'
p595
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p596
sS'8'
p597
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p598
ssg118
(lp599
g26
ag3
ag511
ag507
ag524
ag5
ag518
ag14
ag7
ag1
ag23
ag514
ag505
ag509
ag516
aS'./MG_JEN_exec.stream_control()'
p600
aS'./MG_JEN_Cohset.make_spigots()'
p601
aS'./MG_JEN_Sixpack.newstar_source()'
p602
ag8
aS'./MG_JEN_Cohset.predict()'
p603
aS'./MG_JEN_Cohset.insert_solver()'
p604
aS'./MG_JEN_Cohset.make_sinks()'
p605
assg605
(dp606
S'fullDomainMux'
p607
I01
sS'output_col'
p608
S'PREDICT'
p609
sS'visu'
p610
I01
sS'flag'
p611
I00
sg26
(dp612
g104
S'MG_JEN_Cohset::make_sinks()'
p613
sg28
g605
sg50
(dp614
g611
I163
sg610
I162
sg607
I164
sg608
I160
sS'visu_array_config'
p615
I161
ssg106
S'MG_JEN_Cohsetmake_sinks'
p616
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-15 00:27'
p617
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p618
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-15 00:27'
p619
sg108
S'make_sinks'
p620
sg66
(dp621
g611
(lp622
I01
aI00
aS'@@flag'
p623
asg615
(lp624
I01
aI00
aS'@@visu_array_config'
p625
asg608
(lp626
g609
aS'RESIDUALS'
p627
aS'DATA'
p628
aS'@@output_col'
p629
asg607
(lp630
I01
aI00
aS'@@fullDomainMux'
p631
asg610
(lp632
I01
aI00
aS'@@visu'
p633
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-15 00:27'
p634
sg101
Nsg56
g270
sg113
S'2006-02-15 00:27'
p635
sg48
S'MG_JEN_Cohset'
p636
sg62
(dp637
g611
I00
sg615
I00
sg607
I00
sg610
I00
ssg112
I00
sg102
g635
sg118
(lp638
g26
ag608
ag615
ag610
ag611
ag607
asg29
(dp639
g611
S'if True, insert a flagger for the output uv-data'
p640
sg615
S'if True, visualise the array config (from MS)'
p641
sg608
S'name of the logical (VisTile) output column'
p642
sg607
S'if True, attach an extra VisDataMux'
p643
sg610
S'if True, visualise the output uv-data'
p644
sssg615
I01
ssg518
I10
sg601
(dp645
S'MS_corr_index'
p646
(lp647
I0
aI1
aI2
aI3
asg611
I00
sg26
(dp648
g104
S'MG_JEN_Cohset::make_spigots()'
p649
sg28
g601
sg50
(dp650
g611
I25
sg646
I23
sg610
I24
ssg52
(dp651
S'input_col'
p652
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p653
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-15 00:27'
p654
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p655
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-15 00:27'
p656
sg108
S'make_spigots'
p657
sg66
(dp658
g611
(lp659
I01
aI00
aS'@@flag'
p660
asg646
(lp661
g647
a(lp662
I0
aI-1
aI-1
aI1
aa(lp663
I0
aI-1
aI-1
aI3
aaS'@@'
p664
aS'@@MS_corr_index'
p665
asg652
(lp666
g628
ag609
ag627
aS'@@input_col'
p667
asg610
(lp668
I01
aI00
aS'@@visu'
p669
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-15 00:27'
p670
sg101
Nsg56
g270
sg113
S'2006-02-15 00:27'
p671
sg48
S'MG_JEN_Cohset'
p672
sg62
(dp673
g611
I00
sg610
I00
ssg112
I00
sg102
g671
sg118
(lp674
g26
ag652
ag646
ag610
ag611
asg29
(dp675
g611
S'if True, insert a flagger for the input uv-data'
p676
sg646
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p677
sg652
S'name of the logical (VisTile) input column'
p678
sg610
S'if True, visualise the input uv-data'
p679
sssg652
g628
sg610
I01
ssg603
(dp680
g1
S'@@polrep'
p681
sg26
(dp682
g104
S'MG_JEN_Cohset::predict()'
p683
sg28
g603
sg50
(dp684
sg52
(dp685
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p686
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-15 00:27'
p687
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p688
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-15 00:27'
p689
sg108
S'predict'
p690
sg66
(dp691
g1
(lp692
g2
ag71
ag681
asg14
(lp693
(lp694
I0
aI1
aI2
aI3
aI4
aa(lp695
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp696
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp697
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p698
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-15 00:27'
p699
sg101
Nsg56
g270
sg113
S'2006-02-15 00:27'
p700
sg48
S'MG_JEN_Cohset'
p701
sg58
(dp702
g1
I00
sg14
I00
ssg112
I00
sg102
g700
sg118
(lp703
g26
ag14
ag1
asg29
(dp704
g1
g262
sg14
g265
sssg14
g698
ssg507
I00
sg524
g542
sg23
I01
sg516
Nsg602
(dp705
S'f0'
p706
F1000000.0
sS'major'
p707
F0.0
sg12
I00
sS'shape'
p708
S'point'
p709
sg7
NsS'Upct'
p710
I-10
sS'I0'
p711
F1.0
sS'Vpct'
p712
NsS'dDec'
p713
F0.0
sS'pa'
p714
F0.0
sg26
(dp715
g28
g602
sg29
(dp716
g706
S'reference freq (Hz): I=I0 @ f=f0'
p717
sg707
S'major axis (arcsec)'
p718
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p719
sg711
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p720
sg714
S'position angle (rad)'
p721
sS'SI'
p722
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p723
sS'Qpct'
p724
S'Stokes Q (percentage of I)'
p725
sS'punit'
p726
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p727
sg713
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p728
sg708
S'source shape'
p729
sg7
S'name of the MeqParm table (AIPS++)'
p730
sS'fsr_trace'
p731
S'If True, attach to forest state record'
p732
sS'RA0'
p733
S'If RA0 is a node, RA0+dRA overrides RA'
p734
sS'dRA'
p735
S'RA offset (arcsec): RA = RA0 + dRA'
p736
sS'RM'
p737
S'Intrinsic Rotation Measure (rad/m2)'
p738
sg710
S'Stokes U (percentage of I)'
p739
sS'Dec'
p740
S'Declination (rad, J2000)'
p741
sS'Dec0'
p742
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p743
sg712
S'Stokes V (percentage of I)'
p744
sS'minor'
p745
S'minor axis (arcsec)'
p746
sS'RA'
p747
S'Right Ascension (rad, J2000)'
p748
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p749
sg50
(dp750
g740
I38
sg711
I30
sg724
I31
sg712
I33
sg722
I35
sg7
I28
sg747
I37
sg737
I34
sg710
I32
sg726
I26
ssg52
(dp751
g706
I01
sg707
I01
sg12
I01
sS'name'
p752
I01
sg731
I01
sg726
I00
sg713
I01
sg708
I01
sg714
I01
sg733
I01
sg735
I01
sg742
I01
sg745
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-15 00:27'
p753
sg56
S'10feb2006'
p754
sg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p755
sg62
(dp756
g12
I00
sg731
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-15 00:27'
p757
sg66
(dp758
g706
(lp759
F1000000.0
aS'@@f0'
p760
asg707
(lp761
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p762
asg12
(lp763
I01
aI00
aS'@@unsolvable'
p764
asg708
(lp765
g709
aS'ell.gauss'
p766
aS'@@shape'
p767
asg7
(lp768
NaS'@@parmtable'
p769
asg710
(lp770
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p771
asg711
(lp772
F1.0
aF10.0
aS'@@I0'
p773
asg712
(lp774
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p775
asg713
(lp776
F0.0
aS'@@dDec'
p777
asg714
(lp778
F0.0
aF1.0
aF-0.5
aS'@@pa'
p779
asg747
(lp780
F0.0
aF0.5
aF1.0
aS'@@RA'
p781
asg735
(lp782
F0.0
aS'@@dRA'
p783
asg737
(lp784
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p785
asg742
(lp786
NaS'@@Dec0'
p787
asg745
(lp788
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p789
asg724
(lp790
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p791
asg726
(lp792
S'unpol'
p793
aS'unpol2'
p794
aS'unpol10'
p795
aS'QUV'
p796
aS'QU'
p797
aS'Qonly'
p798
aS'Uonly'
p799
aS'Vonly'
p800
aS'3c147'
p801
aS'3c286'
p802
aS'3c48'
p803
aS'3c295'
p804
aS'RMtest'
p805
aS'SItest'
p806
aS'@@punit'
p807
asg733
(lp808
NaS'@@RA0'
p809
asg740
(lp810
F0.5
aF1.0
aS'@@Dec'
p811
asg752
(lp812
NaS'@@name'
p813
asg731
(lp814
I01
aI00
aS'@@fsr_trace'
p815
asg722
(lp816
NaF-0.69999999999999996
a(lp817
F0.44700000000000001
aF-0.184
aaS'@@SI'
p818
assg101
Nsg102
S'2006-02-15 00:27'
p819
sg104
S'MG_JEN_Sixpack::newstar_source()'
p820
sg106
S'MG_JEN_Sixpacknewstar_source'
p821
sg108
S'newstar_source'
p822
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-15 00:27'
p823
sS'callback'
p824
(dp825
g726
I01
ssg112
I00
sg113
g819
sg114
(dp826
g253
S'.modify( Upct ): None  ->  -10'
p827
sg116
S'.modify( Qpct ): None  ->  10'
p828
sg310
S'.modify( punit ): unpol  ->  QU'
p829
ssg118
(lp830
g26
ag726
ag752
ag7
ag12
ag711
ag724
ag710
ag712
ag737
ag722
ag706
ag747
ag740
ag731
ag708
ag707
ag745
ag714
ag733
ag742
ag735
ag713
assg735
F0.0
sg737
Nsg742
Nsg745
F0.0
sg747
F0.0
sg724
I10
sg726
g797
sg733
Nsg740
F1.0
sg752
Nsg731
I01
sg722
Nssg505
I00
sg14
g534
sg600
(dp831
S'channel_start_index'
p832
I10
sS'data_column_name'
p833
g628
sS'predict_column'
p834
S'CORRECTED_DATA'
p835
sg5
S'@@ms_name'
p836
sg26
(dp837
g28
g600
sg29
(dp838
g832
S'(inputrec.sel) index of first selected freq channel'
p839
sg833
S'(inputrec) MS input column'
p840
sg834
S'MS output column to be associated with the VisTile predict-column'
p841
sg5
g513
sg518
g519
sS'channel_increment'
p842
S'(inputrec.sel) take every nth channel (1=all)'
p843
sS'channel_end_index'
p844
S'(inputrec.sel) index of last selected freq channel'
p845
sS'write_flags'
p846
S'(outputrec) if True, write flags to MS'
p847
ssg46
g47
sg48
S'MG_JEN_exec'
p848
sg50
(dp849
g832
I17
sg833
I16
sg834
I21
sg846
I20
sg844
I18
sg842
I19
ssg52
(dp850
g5
I01
sg518
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-15 00:27'
p851
sg56
S'20jan2006'
p852
sg58
(dp853
g5
I00
sg518
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-15 00:27'
p854
sg62
(dp855
g846
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-15 00:27'
p856
sg66
(dp857
g832
(lp858
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p859
asg833
(lp860
g628
ag835
aS'@@data_column_name'
p861
asg834
(lp862
g628
ag835
aS'MODEL_DATA'
p863
aS'@@predict_column'
p864
asg5
(lp865
g6
ag836
asg518
(lp866
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p867
asg842
(lp868
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p869
asg844
(lp870
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p871
asg846
(lp872
I01
aI00
aS'@@write_flags'
p873
assg101
Nsg102
S'2006-02-15 00:27'
p874
sg104
S'MG_JEN_exec::stream_control()'
p875
sg106
S'MG_JEN_execstream_control'
p876
sg108
S'stream_control'
p877
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-15 00:27'
p878
sg574
(dp879
g5
g576
ssg112
I00
sg113
g874
sg118
(lp880
g26
ag5
ag518
ag833
ag832
ag844
ag842
ag846
ag834
assg518
g867
sg842
I1
sg844
I50
sg846
I00
ssg509
I00
sg511
I01
sg514
I01
sg604
(dp881
S'correct_after'
p882
I01
sg505
S'@@master_reqseq'
p883
sS'condeq_unop'
p884
Nsg610
I01
sg509
S'@@redun'
p885
sS'solver_subtree'
p886
NsS'subtract_after'
p887
I00
sg514
S'@@chain_solvers'
p888
sg26
(dp889
g28
g604
sg29
(dp890
g882
S'if True, correct measured with predicted.Joneset'
p891
sg505
g506
sg884
S'Optional unary operation on Condeq inputs'
p892
sg610
S'if True, include full visualisation'
p893
sg509
g510
sg886
S'solver subtree qualifier(s)'
p894
sg887
S'if True, subtract predicted from measured'
p895
sg514
g515
sg516
g517
ssg46
g47
sg48
S'MG_JEN_Cohset'
p896
sg50
(dp897
g887
I146
sg882
I147
sg884
I144
sg610
I145
ssg52
(dp898
g886
I01
sg516
I01
sg514
I01
sg509
I01
sg505
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-15 00:27'
p899
sg56
g270
sg58
(dp900
g516
I00
sg514
I00
sg509
I00
sg505
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p901
sg62
(dp902
g887
I00
sg509
I00
sg882
I00
sg505
I00
sg610
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-15 00:27'
p903
sg66
(dp904
g882
(lp905
I01
aI00
aS'@@correct_after'
p906
asg505
(lp907
I01
aI00
ag883
asg884
(lp908
NaS'Abs'
p909
aS'Arg'
p910
aS'@@condeq_unop'
p911
asg610
(lp912
I01
aI00
aS'@@visu'
p913
asg509
(lp914
I01
aI00
ag885
asg886
(lp915
NaS'@@solver_subtree'
p916
asg887
(lp917
I01
aI00
aS'@@subtract_after'
p918
asg514
(lp919
I01
ag888
asg516
(lp920
Na(lp921
I5
aI2
aa(lp922
I2
aI2
aa(lp923
I3
aI3
aaS'@@num_cells'
p924
assg101
Nsg102
S'2006-02-15 00:27'
p925
sg104
S'MG_JEN_Cohset::insert_solver()'
p926
sg106
S'MG_JEN_Cohsetinsert_solver'
p927
sg108
S'insert_solver'
p928
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-15 00:27'
p929
sg112
I00
sg113
g925
sg114
(dp930
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p931
ssg118
(lp932
g26
ag886
ag509
ag516
ag514
ag505
ag884
ag610
ag887
ag882
aS'./MG_JEN_Cohset.solver_subtree()'
p933
assg516
g924
sg933
(dp934
S'rmin'
p935
Nsg610
I01
sS'epsilon'
p936
F0.01
sS'rmax'
p937
NsS'usesvd'
p938
I01
sS'debug_level'
p939
I10
sS'solvegroup'
p940
(lp941
g280
ag291
asg26
(dp942
g28
g933
sg29
(dp943
g935
S'if specified, only use baselines>=rmin'
p944
sg610
S'if True, include visualisation'
p945
sg936
S'iteration control criterion'
p946
sg937
S'if specified, only use baselines<=rmax'
p947
sg938
S'if True, use Singular Value Decomposition (SVD)'
p948
sg939
S'solver debug_level'
p949
sg940
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p950
sg516
g517
sS'history'
p951
S'if True, include history collection of metrics'
p952
sS'num_iter'
p953
S'max number of iterations'
p954
sS'condition'
p955
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p956
sS'colin_factor'
p957
S'colinearity factor'
p958
ssg46
g47
sg48
S'MG_JEN_Cohset'
p959
sg50
(dp960
g935
I150
sg610
I158
sg936
I154
sg937
I151
sg938
I156
sg940
I148
sg516
I152
sg951
I159
sg953
I153
sg955
I149
sg957
I155
ssg52
(dp961
g939
I01
sg516
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-15 00:27'
p962
sg56
S'20dec2005'
p963
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p964
sg62
(dp965
g938
I00
sg951
I00
sg610
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-15 00:27'
p966
sg66
(dp967
g935
(lp968
NaI100
aI200
aI500
aS'@@rmin'
p969
asg610
(lp970
I01
aI00
aS'@@visu'
p971
asg936
(lp972
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p973
asg937
(lp974
NaI500
aI1000
aI2000
aS'@@rmax'
p975
asg938
(lp976
I01
aI00
aS'@@usesvd'
p977
asg939
(lp978
I10
aS'@@debug_level'
p979
asg940
(lp980
(lp981
a(lp982
g280
aa(lp983
S'Ggain'
p984
aa(lp985
S'Gphase'
p986
aa(lp987
S'Gpol1'
p988
aa(lp989
S'Gpol2'
p990
aa(lp991
g280
aS'stokesI'
p992
aa(lp993
g992
aa(lp994
S'stokesIQU'
p995
aa(lp996
S'stokesIQUV'
p997
aa(lp998
g280
ag291
aa(lp999
g291
aa(lp1000
S'dang'
p1001
aa(lp1002
S'dell'
p1003
aa(lp1004
S'Dreal'
p1005
aa(lp1006
S'Dimag'
p1007
aa(lp1008
g280
ag291
ag284
aa(lp1009
g284
aa(lp1010
g280
ag282
aa(lp1011
g282
aa(lp1012
S'Breal'
p1013
aa(lp1014
S'Bimag'
p1015
aa(lp1016
S'Bpol1'
p1017
aa(lp1018
S'Bpol2'
p1019
aaS'@@solvegroup'
p1020
asg516
(lp1021
Na(lp1022
I5
aI2
aa(lp1023
I2
aI2
aa(lp1024
I3
aI3
aaS'@@num_cells'
p1025
asg951
(lp1026
I01
aI00
aS'@@history'
p1027
asg953
(lp1028
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1029
asg955
(lp1030
NaS'Gphase_X_sum=0.0'
p1031
aS'Gphase_Y_sum=0.0'
p1032
a(lp1033
g1031
ag1032
aa(lp1034
S'Gphase_X_first=0.0'
p1035
aS'Gphase_Y_first=0.0'
p1036
aa(lp1037
S'Gphase_X_last=0.0'
p1038
aS'Gphase_Y_last=0.0'
p1039
aaS'dang_sum=0.0'
p1040
a(lp1041
S'Bimag_X_sum=0.0'
p1042
aS'Bimag_Y_sum=0.0'
p1043
aa(lp1044
S'Breal_X_product=1.0'
p1045
aS'Breal_Y_product=1.0'
p1046
aaS'@@condition'
p1047
asg957
(lp1048
F1e-08
aF0.0
aS'@@colin_factor'
p1049
assg101
Nsg102
S'2006-02-15 00:27'
p1050
sg104
S'MG_JEN_Cohset::solver_subtree()'
p1051
sg106
S'MG_JEN_Cohsetsolver_subtree'
p1052
sg108
S'solver_subtree'
p1053
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-15 00:27'
p1054
sg112
I00
sg113
g1050
sg114
(dp1055
g253
S'.modify( num_iter ): 20  ->  5'
p1056
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p1057
sg310
S".modify( solvegroup ): []  ->  ['GJones', 'DJones']"
p1058
ssg118
(lp1059
g26
ag940
ag955
ag935
ag937
ag516
ag953
ag936
ag957
ag938
ag939
ag610
ag951
assg516
Nsg951
I01
sg953
I5
sg955
Nsg957
F1e-08
sss.