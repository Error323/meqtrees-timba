(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stations'
p7
S'@@stations'
p8
sg1
S'@@polrep'
p9
sS'_JEN_inarg_CTRL_record:'
p10
(dp11
S'target_definition'
p12
S'MG_JEN_Joneset::BJones()'
p13
sS'localscope'
p14
g5
sS'last_edited'
p15
S'2006-02-26 14:20'
p16
sS'hide'
p17
(dp18
S'@Jsequence'
p19
I01
sg1
I01
sS'stddev'
p20
I00
sg7
I01
ssS'barescope'
p21
S'MG_JEN_JonesetBJones'
p22
sS'generic'
p23
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p24
sS'target_dir'
p25
S'.'
p26
sS'oneliner'
p27
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p28
sS'target_function'
p29
S'BJones'
p30
sS'choice'
p31
(dp32
g19
(lp33
S'BJones'
p34
aS'@@@Jsequence'
p35
asg1
(lp36
g2
aS'circular'
p37
ag9
asg20
(lp38
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p39
asg7
(lp40
(lp41
I0
aag8
assS'specific'
p42
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p43
sS'qual'
p44
NsS'version'
p45
S'16dec2005'
p46
sS'datetime_defined'
p47
g16
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'mutable'
p50
(dp51
g1
I00
sg7
I00
ssS'protected'
p52
I00
sS'order'
p53
(lp54
g10
ag7
ag1
ag19
ag20
asS'help'
p55
(dp56
g19
S'list membership indication (used in JEN_inargGui)'
p57
sg1
S'polarisation representation'
p58
sg20
S'scatter in default c00 funklet values'
p59
sg7
S'list of station names/numbers'
p60
ssS'description'
p61
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p62
ssg20
F1.1000000000000001
sg19
g34
ssg1
S'@@polrep'
p63
sg7
S'@@stations'
p64
sS'./MG_JEN_Joneset.DJones_WSRT()'
p65
(dp66
g1
S'@@polrep'
p67
sg7
S'@@stations'
p68
sS'coupled_XY_Dell'
p69
I01
sg10
(dp70
g14
g65
sg55
(dp71
g1
g58
sg7
g60
sg69
S'if True, XDell = -YDell per station'
p72
sg20
g59
sS'coupled_XY_Dang'
p73
S'if True, XDang = YDang per station'
p74
sg19
g57
ssg25
g26
sg48
S'MG_JEN_Joneset'
p75
sS'JEN_inargGUI_ident'
p76
(dp77
g73
I64
sg69
I65
sg20
I66
ssg17
(dp78
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg23
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p79
sg45
g46
sg50
(dp80
g1
I00
sg7
I00
ssg61
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p81
sS'editable'
p82
(dp83
g73
I00
sg69
I00
ssg27
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p84
sg31
(dp85
g1
(lp86
g2
ag37
ag67
asg7
(lp87
(lp88
I0
aag68
asg69
(lp89
I01
aI00
aS'@@coupled_XY_Dell'
p90
asg20
(lp91
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p92
asg73
(lp93
I01
aI00
aS'@@coupled_XY_Dang'
p94
asg19
(lp95
S'DJones_WSRT'
p96
aS'@@@Jsequence'
p97
assg44
Nsg15
S'2006-02-26 14:20'
p98
sg12
S'MG_JEN_Joneset::DJones_WSRT()'
p99
sg21
S'MG_JEN_JonesetDJones_WSRT'
p100
sg29
S'DJones_WSRT'
p101
sg42
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p102
sg52
I00
sg47
g98
sg53
(lp103
g10
ag7
ag1
ag19
ag73
ag69
ag20
assg20
F1.1000000000000001
sg73
I01
sg19
g96
ssS'ft_coeff_scale'
p104
F0.0
sS'simul'
p105
S'@@simul'
p106
sS'uvplane_effect'
p107
S'@@uvplane_effect'
p108
sS'parmtable'
p109
S'@@parmtable'
p110
sg10
(dp111
g14
g3
sg55
(dp112
g1
g58
sg7
g60
sg104
S'scale of polc_ft non-c00 coeff'
p113
sg105
S'if True, use simulated (Leafset) Jones parameter values'
p114
sg107
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p115
sg109
S'name of the MeqParm table to be used'
p116
sS'Jsequence'
p117
S'sequence of Jones matrices to be used'
p118
sg19
g57
ssg25
g26
sg48
S'MG_JEN_Cohset'
p119
sg76
(dp120
g117
I55
ssg17
(dp121
g1
I01
sg7
I01
sg104
I01
sg105
I01
sg107
I01
sg109
I01
sg19
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p122
sg45
S'25dec2005'
p123
sg50
(dp124
g107
I00
sg7
I00
sg109
I00
sg1
I00
sg105
I00
ssg61
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p125
sg82
(dp126
g105
I00
ssg27
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p127
sg31
(dp128
g1
(lp129
g2
ag37
ag63
asg7
(lp130
(lp131
I0
aag64
asg104
(lp132
F0.0
aS'@@ft_coeff_scale'
p133
asg105
(lp134
I01
aI00
ag106
asg107
(lp135
I00
ag108
asg109
(lp136
NaS'test'
p137
ag110
asg117
(lp138
(lp139
S'GJones'
p140
aa(lp141
g34
aa(lp142
S'FJones'
p143
aa(lp144
S'KJones'
p145
aa(lp146
g96
aa(lp147
g140
ag96
aa(lp148
S'JJones'
p149
aa(lp150
aS'@@Jsequence'
p151
asg19
(lp152
NaS'@@@Jsequence'
p153
assg44
Nsg15
S'2006-02-26 14:20'
p154
sg12
S'MG_JEN_Cohset::Jones()'
p155
sg21
S'MG_JEN_CohsetJones'
p156
sg29
S'Jones'
p157
sg42
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p158
sg52
I00
sg47
g154
sS'MESSAGE'
p159
(dp160
S'1'
p161
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p162
sS'0'
p163
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p164
sS'3'
p165
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p166
sS'2'
p167
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p168
sS'5'
p169
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p170
sS'4'
p171
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p172
sS'6'
p173
S".modify( Jsequence ): []  ->  ['GJones', 'DJones_WSRT']"
p174
ssg53
(lp175
g10
ag7
ag1
ag19
ag109
ag107
ag104
ag105
ag117
aS'./MG_JEN_Joneset.GJones()'
p176
aS'./MG_JEN_Joneset.FJones()'
p177
ag5
aS'./MG_JEN_Joneset.KJones()'
p178
ag65
aS'./MG_JEN_Joneset.JJones()'
p179
assg178
(dp180
g7
S'@@stations'
p181
sg105
g106
sg1
S'@@polrep'
p182
sg10
(dp183
g12
S'MG_JEN_Joneset::KJones()'
p184
sg14
g178
sg15
S'2006-02-26 14:20'
p185
sg17
(dp186
g19
I01
sg1
I01
sg7
I01
ssg21
S'MG_JEN_JonesetKJones'
p187
sg23
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p188
sg25
g26
sg27
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p189
sg29
S'KJones'
p190
sg31
(dp191
g19
(lp192
g145
aS'@@@Jsequence'
p193
asg1
(lp194
g2
ag37
ag182
asg7
(lp195
(lp196
I0
aag181
assg42
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p197
sg44
Nsg45
S'12dec2005'
p198
sg47
g185
sg48
S'MG_JEN_Joneset'
p199
sg50
(dp200
g1
I00
sg7
I00
ssg52
I00
sg53
(lp201
g10
ag7
ag1
ag19
asg55
(dp202
g19
g57
sg1
g58
sg7
g60
ssg61
S'defines diagonal KJones matrices for DFT Fourier kernel'
p203
ssg19
g145
ssg179
(dp204
g7
S'@@stations'
p205
sg1
S'@@polrep'
p206
sg10
(dp207
g12
S'MG_JEN_Joneset::JJones()'
p208
sg14
g179
sg15
S'2006-02-26 14:20'
p209
sg17
(dp210
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetJJones'
p211
sg23
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p212
sg25
g26
sg27
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p213
sg29
S'JJones'
p214
sg31
(dp215
g19
(lp216
g149
aS'@@@Jsequence'
p217
asg1
(lp218
g2
ag37
ag206
asg20
(lp219
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p220
asg7
(lp221
(lp222
I0
aag205
assg42
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p223
sg44
Nsg45
S'14feb2006'
p224
sg47
g209
sg48
S'MG_JEN_Joneset'
p225
sg50
(dp226
g1
I00
sg7
I00
ssg52
I00
sg53
(lp227
g10
ag7
ag1
ag19
ag20
asg55
(dp228
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p229
ssg20
F1.1000000000000001
sg19
g149
ssg176
(dp230
g1
S'@@polrep'
p231
sg7
S'@@stations'
p232
sg10
(dp233
g14
g176
sg55
(dp234
g19
g57
sS'Gpolar'
p235
S'if True, use MeqPolar, otherwise MeqToComplex'
p236
sg1
g58
sg20
g59
sg7
g60
ssg25
g26
sg48
S'MG_JEN_Joneset'
p237
sg76
(dp238
g235
I59
sg20
I60
ssg17
(dp239
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg23
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p240
sg45
S'15dec2005'
p241
sg50
(dp242
g1
I00
sg7
I00
ssg61
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p243
sg82
(dp244
g235
I00
ssg27
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p245
sg31
(dp246
g19
(lp247
g140
aS'@@@Jsequence'
p248
asg235
(lp249
I01
aI00
aS'@@Gpolar'
p250
asg1
(lp251
g2
ag37
ag231
asg20
(lp252
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p253
asg7
(lp254
(lp255
I0
aag232
assg44
Nsg15
S'2006-02-26 14:20'
p256
sg12
S'MG_JEN_Joneset::GJones()'
p257
sg21
S'MG_JEN_JonesetGJones'
p258
sg29
S'GJones'
p259
sg42
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p260
sg52
I00
sg47
g256
sg53
(lp261
g10
ag7
ag1
ag19
ag235
ag20
assg20
F1.1000000000000001
sg235
I00
sg19
g140
ssg117
(lp262
g140
ag96
asg177
(dp263
g7
S'@@stations'
p264
sg1
S'@@polrep'
p265
sg10
(dp266
g12
S'MG_JEN_Joneset::FJones()'
p267
sg14
g177
sg15
S'2006-02-26 14:20'
p268
sg17
(dp269
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetFJones'
p270
sg23
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p271
sg25
g26
sg27
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p272
sg29
S'FJones'
p273
sg31
(dp274
g19
(lp275
g143
aS'@@@Jsequence'
p276
asg1
(lp277
g2
ag37
ag265
asg20
(lp278
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p279
asg7
(lp280
(lp281
I0
aag264
assg42
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p282
sg44
Nsg45
g46
sg47
g268
sg48
S'MG_JEN_Joneset'
p283
sg50
(dp284
g1
I00
sg7
I00
ssg52
I00
sg53
(lp285
g10
ag7
ag1
ag19
ag20
asg55
(dp286
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'defines diagonal FJones Faraday rotation matrices'
p287
ssg20
F1.1000000000000001
sg19
g143
ssg19
NssS'./MG_JEN_Cohset.predict()'
p288
(dp289
g1
S'@@polrep'
p290
sg10
(dp291
g12
S'MG_JEN_Cohset::predict()'
p292
sg14
g288
sg76
(dp293
sg17
(dp294
g1
I01
sg7
I01
ssg21
S'MG_JEN_Cohsetpredict'
p295
sg23
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p296
sg25
g26
sg61
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p297
sg27
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p298
sg29
S'predict'
p299
sg31
(dp300
g1
(lp301
g2
ag37
ag290
asg7
(lp302
(lp303
I0
aI1
aI2
aI3
aI4
aa(lp304
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp305
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp306
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p307
aS'@@stations'
p308
assg42
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p309
sg44
Nsg45
g123
sg47
S'2006-02-26 14:20'
p310
sg48
S'MG_JEN_Cohset'
p311
sg50
(dp312
g1
I00
sg7
I00
ssg52
I00
sg15
g310
sg53
(lp313
g10
ag7
ag1
asg55
(dp314
g1
S'polarisation representation'
p315
sg7
S'the (subset of) stations to be used'
p316
sssg7
g308
ssS'script_name'
p317
S'MG_JEN_cps'
p318
sS'redun'
p319
I00
sS'ms_name'
p320
S'D1.MS'
p321
sg109
Nsg10
(dp322
g14
S'./MG_JEN_cps.'
p323
sg55
(dp324
g1
g58
sS'master_reqseq'
p325
S'if True, use a master reqseq for solver(s)'
p326
sg7
g60
sS'insert_flagger'
p327
S'if True, insert a flagger'
p328
sg319
S'if True, redundant spacing calibration'
p329
sS'insert_solver'
p330
S'if True, insert a solver'
p331
sg104
g113
sg320
S'name of the (AIPS++) Measurement Set'
p332
sS'chain_solvers'
p333
S'if True, chain the solvers (recommended)'
p334
sS'num_cells'
p335
S'if defined, ModRes argument [ntime,nfreq]'
p336
sg109
g116
sS'tile_size'
p337
S'(inputrec) size (in time-slots) of the input data-tile'
p338
sg105
g114
sg107
g115
sg19
g57
ssS'reference'
p339
I00
sg25
g26
sg48
S'MG_JEN_cps'
p340
sg76
(dp341
g1
I7
sg7
I6
sg327
I2
sg319
I15
sg330
I1
sg105
I12
sg320
I4
sg109
I9
sg317
I0
sg335
I16
sg337
I5
sg107
I10
ssg17
(dp342
g325
I01
sg319
I00
sS'last_changed'
p343
I01
sg104
I01
sg107
I00
sg333
I01
sg335
I00
sg19
I01
ssg23
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p344
sg45
g241
sg61
g344
sg82
(dp345
g325
I00
sg319
I00
sg327
I00
sg343
I00
sg330
I00
sg105
I00
ssg27
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p346
sg31
(dp347
g1
(lp348
g2
ag37
aS'@@polrep'
p349
asg325
(lp350
I01
aI00
aS'@@master_reqseq'
p351
asg7
(lp352
(lp353
I0
aaS'@@stations'
p354
asg327
(lp355
I01
aI00
aS'@@insert_flagger'
p356
asg319
(lp357
I01
aI00
aS'@@redun'
p358
asg330
(lp359
I01
aI00
aS'@@insert_solver'
p360
asg343
(lp361
S'd30jan2006'
p362
aS'@@last_changed'
p363
asg320
(lp364
g321
aS'@@ms_name'
p365
asg333
(lp366
I01
aS'@@chain_solvers'
p367
asg335
(lp368
Na(lp369
I5
aI2
aa(lp370
I2
aI2
aa(lp371
I3
aI3
aaS'@@num_cells'
p372
asg109
(lp373
Nag137
aS'@@parmtable'
p374
asg337
(lp375
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p376
asg105
(lp377
I01
aI00
aS'@@simul'
p378
asg104
(lp379
F0.0
aS'@@ft_coeff_scale'
p380
asg107
(lp381
I00
aS'@@uvplane_effect'
p382
asg19
(lp383
NaS'@@@Jsequence'
p384
assg15
S'2006-02-26 14:20'
p385
sS'HISTORY'
p386
(dp387
g161
S'2006-02-26 14:20: Derived from: MG_JEN_cps_GDJones.inarg'
p388
sg163
S'2006-02-26 14:20: Derived from: MG_JEN_cps.inarg'
p389
ssg12
g318
sS'save_file'
p390
S'MG_JEN_cps_GDJones_protected.inarg'
p391
sS'file_filter'
p392
S'MG_JEN_cps*.inarg'
p393
sg29
S''
p394
sg42
S'<specific>'
p395
sS'browse'
p396
(dp397
g320
S'*.MS'
p398
ssg52
I01
sg47
g385
sg159
(dp399
S'11'
p400
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1}"
p401
sS'10'
p402
S'.modify(): stripped off: _JEN_inarg_option'
p403
sS'13'
p404
S".modify(): found ={'I0': 1, 'Qpct': 1, 'Vpct': 1, 'SI': 1, 'RM': 1, 'Upct': 1, 'punit': 1}"
p405
sS'12'
p406
S'.modify(): stripped off: _JEN_inarg_option'
p407
sg161
S'.modify( uvplane_effect ): False  ->  True'
p408
sg163
S'.modify(): stripped off: _JEN_inarg_option'
p409
sg165
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p410
sg167
S".modify(): found ={'uvplane_effect': 1}"
p411
sg169
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p412
sg171
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p413
sS'7'
p414
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p415
sg173
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p416
sS'9'
p417
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p418
sS'8'
p419
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p420
ssg53
(lp421
g10
ag317
ag330
ag327
ag343
ag320
ag337
ag7
ag1
ag19
ag109
ag107
ag104
ag105
ag333
ag325
ag319
ag335
aS'./MG_JEN_exec.stream_control()'
p422
aS'./MG_JEN_Cohset.make_spigots()'
p423
aS'./MG_JEN_Sixpack.newstar_source()'
p424
ag3
ag288
aS'./MG_JEN_Cohset.insert_solver()'
p425
aS'./MG_JEN_Cohset.make_sinks()'
p426
assg426
(dp427
S'fullDomainMux'
p428
I01
sS'output_col'
p429
S'PREDICT'
p430
sS'visu'
p431
I01
sS'flag'
p432
I00
sg10
(dp433
g12
S'MG_JEN_Cohset::make_sinks()'
p434
sg14
g426
sg76
(dp435
g432
I94
sg431
I93
sg428
I95
sg429
I91
sS'visu_array_config'
p436
I92
ssg21
S'MG_JEN_Cohsetmake_sinks'
p437
sg23
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p438
sg25
g26
sg61
S'Make sink nodes in the given Cohset object'
p439
sg27
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p440
sg29
S'make_sinks'
p441
sg31
(dp442
g432
(lp443
I01
aI00
aS'@@flag'
p444
asg436
(lp445
I01
aI00
aS'@@visu_array_config'
p446
asg429
(lp447
g430
aS'RESIDUALS'
p448
aS'DATA'
p449
aS'@@output_col'
p450
asg428
(lp451
I01
aI00
aS'@@fullDomainMux'
p452
asg431
(lp453
I01
aI00
aS'@@visu'
p454
assg42
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p455
sg44
Nsg45
g123
sg47
S'2006-02-26 14:20'
p456
sg48
S'MG_JEN_Cohset'
p457
sg82
(dp458
g432
I00
sg436
I00
sg428
I00
sg431
I00
ssg52
I00
sg15
g456
sg53
(lp459
g10
ag429
ag436
ag431
ag432
ag428
asg55
(dp460
g432
S'if True, insert a flagger for the output uv-data'
p461
sg436
S'if True, visualise the array config (from MS)'
p462
sg429
S'name of the logical (VisTile) output column'
p463
sg428
S'if True, attach an extra VisDataMux'
p464
sg431
S'if True, visualise the output uv-data'
p465
sssg436
I01
ssg337
I10
sg423
(dp466
S'MS_corr_index'
p467
(lp468
I0
aI1
aI2
aI3
asg432
I00
sg10
(dp469
g12
S'MG_JEN_Cohset::make_spigots()'
p470
sg14
g423
sg76
(dp471
g432
I28
sg467
I26
sg431
I27
ssg17
(dp472
S'input_col'
p473
I01
ssg21
S'MG_JEN_Cohsetmake_spigots'
p474
sg23
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p475
sg25
g26
sg61
S'Make spigot nodes in the given Cohset object'
p476
sg27
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p477
sg29
S'make_spigots'
p478
sg31
(dp479
g432
(lp480
I01
aI00
aS'@@flag'
p481
asg467
(lp482
g468
a(lp483
I0
aI-1
aI-1
aI1
aa(lp484
I0
aI-1
aI-1
aI3
aaS'@@'
p485
aS'@@MS_corr_index'
p486
asg473
(lp487
g449
ag430
ag448
aS'@@input_col'
p488
asg431
(lp489
I01
aI00
aS'@@visu'
p490
assg42
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p491
sg44
Nsg45
g123
sg47
S'2006-02-26 14:20'
p492
sg48
S'MG_JEN_Cohset'
p493
sg82
(dp494
g432
I00
sg431
I00
ssg52
I00
sg15
g492
sg53
(lp495
g10
ag473
ag467
ag431
ag432
asg55
(dp496
g432
S'if True, insert a flagger for the input uv-data'
p497
sg467
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p498
sg473
S'name of the logical (VisTile) input column'
p499
sg431
S'if True, visualise the input uv-data'
p500
sssg473
g449
sg431
I01
ssg19
Nsg327
I00
sg343
g362
sg107
I01
sg335
Nsg424
(dp501
S'f0'
p502
F1000000.0
sS'major'
p503
F0.0
sS'unsolvable'
p504
I00
sS'from_LSM'
p505
NsS'name'
p506
NsS'I0'
p507
F1.0
sS'SI'
p508
NsS'Qpct'
p509
I10
sS'punit'
p510
S'QU'
p511
sS'fsr_trace'
p512
I01
sS'shape'
p513
S'point'
p514
sS'pa'
p515
F0.0
sS'RA'
p516
F4.3570000000000002
sg109
NsS'RM'
p517
NsS'Upct'
p518
I-10
sS'Dec'
p519
F1.0920000000000001
sS'Vpct'
p520
NsS'minor'
p521
F0.0
sg10
(dp522
g14
g424
sg55
(dp523
g502
S'reference freq (Hz): I=I0 @ f=f0'
p524
sg503
S'major axis (arcsec)'
p525
sg504
S'if True, do NOT store solvegroup/parmgroup info'
p526
sg505
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p527
sg507
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p528
sg508
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p529
sg509
S'Stokes Q (percentage of I)'
p530
sg510
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p531
sg513
S'source shape'
p532
sg515
S'position angle (rad)'
p533
sg512
S'If True, attach to forest state record'
p534
sg109
S'name of the MeqParm table (AIPS++)'
p535
sg517
S'Intrinsic Rotation Measure (rad/m2)'
p536
sg518
S'Stokes U (percentage of I)'
p537
sg519
S'Declination (rad, J2000)'
p538
sg520
S'Stokes V (percentage of I)'
p539
sg521
S'minor axis (arcsec)'
p540
sg516
S'Right Ascension (rad, J2000)'
p541
ssg25
g26
sg48
S'MG_JEN_Sixpack'
p542
sg76
(dp543
g519
I42
sg505
I30
sg507
I34
sg509
I35
sg510
I29
sg508
I39
sg109
I32
sg516
I41
sg517
I38
sg518
I36
sg520
I37
ssg17
(dp544
g502
I01
sg503
I01
sg504
I01
sg505
I00
sg512
I01
sg510
I00
sg513
I01
sg515
I01
sg521
I01
sg506
I01
ssg23
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p545
sg45
S'10feb2006'
p546
sg396
(dp547
g505
S'*.lsm'
p548
ssg61
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p549
sg82
(dp550
g504
I00
sg512
I00
ssg27
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p551
sg31
(dp552
g502
(lp553
F1000000.0
aS'@@f0'
p554
asg503
(lp555
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p556
asg504
(lp557
I01
aI00
aS'@@unsolvable'
p558
asg505
(lp559
NaS'@@from_LSM'
p560
asg507
(lp561
F1.0
aF10.0
aS'@@I0'
p562
asg508
(lp563
NaF-0.69999999999999996
a(lp564
F0.44700000000000001
aF-0.184
aaS'@@SI'
p565
asg509
(lp566
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p567
asg510
(lp568
S'unpol'
p569
aS'unpol2'
p570
aS'unpol10'
p571
aS'QUV'
p572
ag511
aS'Qonly'
p573
aS'Uonly'
p574
aS'Vonly'
p575
aS'3c147'
p576
aS'3c286'
p577
aS'3c48'
p578
aS'3c295'
p579
aS'RMtest'
p580
aS'SItest'
p581
aS'@@punit'
p582
asg512
(lp583
I01
aI00
aS'@@fsr_trace'
p584
asg513
(lp585
g514
aS'ell.gauss'
p586
aS'@@shape'
p587
asg515
(lp588
F0.0
aF1.0
aF-0.5
aS'@@pa'
p589
asg516
(lp590
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p591
asg109
(lp592
NaS'@@parmtable'
p593
asg517
(lp594
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p595
asg518
(lp596
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p597
asg519
(lp598
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p599
asg520
(lp600
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p601
asg521
(lp602
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p603
asg506
(lp604
NaS'@@name'
p605
assg44
Nsg15
S'2006-02-26 14:20'
p606
sg12
S'MG_JEN_Sixpack::newstar_source()'
p607
sg21
S'MG_JEN_Sixpacknewstar_source'
p608
sg29
S'newstar_source'
p609
sg42
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p610
sS'callback'
p611
(dp612
g510
I01
ssg52
I00
sg47
g606
sg159
(dp613
g161
S'.modify( Upct ): None  ->  -10'
p614
sg163
S'.modify( Qpct ): None  ->  10'
p615
sg167
S'.modify( punit ): unpol  ->  QU'
p616
ssg53
(lp617
g10
ag510
ag505
ag506
ag109
ag504
ag507
ag509
ag518
ag520
ag517
ag508
ag502
ag516
ag519
ag512
ag513
ag503
ag521
ag515
asssg325
I00
sg7
g353
sg422
(dp618
S'channel_start_index'
p619
I10
sS'data_column_name'
p620
g449
sS'predict_column'
p621
S'CORRECTED_DATA'
p622
sg320
S'@@ms_name'
p623
sg10
(dp624
g14
g422
sg55
(dp625
g619
S'(inputrec.sel) index of first selected freq channel'
p626
sg620
S'(inputrec) MS input column'
p627
sg621
S'MS output column to be associated with the VisTile predict-column'
p628
sg320
g332
sg337
g338
sS'channel_increment'
p629
S'(inputrec.sel) take every nth channel (1=all)'
p630
sS'channel_end_index'
p631
S'(inputrec.sel) index of last selected freq channel'
p632
sS'write_flags'
p633
S'(outputrec) if True, write flags to MS'
p634
ssg25
g26
sg48
S'MG_JEN_exec'
p635
sg76
(dp636
g619
I20
sg620
I19
sg621
I24
sg633
I23
sg631
I21
sg629
I22
ssg17
(dp637
g320
I01
sg337
I01
ssg23
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p638
sg45
S'20jan2006'
p639
sg50
(dp640
g320
I00
sg337
I00
ssg61
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p641
sg82
(dp642
g633
I00
ssg27
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p643
sg31
(dp644
g619
(lp645
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p646
asg620
(lp647
g449
ag622
aS'@@data_column_name'
p648
asg621
(lp649
g449
ag622
aS'MODEL_DATA'
p650
aS'@@predict_column'
p651
asg320
(lp652
g321
ag623
asg337
(lp653
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p654
asg629
(lp655
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p656
asg631
(lp657
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p658
asg633
(lp659
I01
aI00
aS'@@write_flags'
p660
assg44
Nsg15
S'2006-02-26 14:20'
p661
sg12
S'MG_JEN_exec::stream_control()'
p662
sg21
S'MG_JEN_execstream_control'
p663
sg29
S'stream_control'
p664
sg42
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p665
sg396
(dp666
g320
g398
ssg52
I00
sg47
g661
sg53
(lp667
g10
ag320
ag337
ag620
ag619
ag631
ag629
ag633
ag621
assg337
g654
sg629
I1
sg631
I50
sg633
I00
ssg104
F0.0
sg330
I01
sg105
I00
sg333
I01
sg425
(dp668
S'correct_after'
p669
I01
sg325
S'@@master_reqseq'
p670
sS'condeq_unop'
p671
Nsg431
I01
sg319
S'@@redun'
p672
sS'solver_subtree'
p673
NsS'subtract_after'
p674
I00
sg333
S'@@chain_solvers'
p675
sg10
(dp676
g14
g425
sg55
(dp677
g669
S'if True, correct measured with predicted.Joneset'
p678
sg325
g326
sg671
S'Optional unary operation on Condeq inputs'
p679
sg431
S'if True, include full visualisation'
p680
sg319
g329
sg673
S'solver subtree qualifier(s)'
p681
sg674
S'if True, subtract predicted from measured'
p682
sg333
g334
sS'flag_residuals'
p683
S'if True, flag the residuals'
p684
sg335
g336
ssg25
g26
sg48
S'MG_JEN_Cohset'
p685
sg76
(dp686
g674
I76
sg669
I77
sg671
I74
sg431
I75
ssg17
(dp687
g325
I01
sg319
I01
sg673
I01
sg333
I01
sg683
I01
sg335
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p688
sg45
g123
sg50
(dp689
g335
I00
sg333
I00
sg319
I00
sg325
I00
ssg61
S'insert one or more solver subtrees in the data stream'
p690
sg82
(dp691
g669
I00
sg325
I00
sg431
I00
sg319
I00
sg674
I00
sg683
I00
ssg27
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p692
sg31
(dp693
g669
(lp694
I01
aI00
aS'@@correct_after'
p695
asg325
(lp696
I01
aI00
ag670
asg671
(lp697
NaS'Abs'
p698
aS'Arg'
p699
aS'@@condeq_unop'
p700
asg431
(lp701
I01
aI00
aS'@@visu'
p702
asg319
(lp703
I01
aI00
ag672
asg673
(lp704
NaS'@@solver_subtree'
p705
asg674
(lp706
I01
aI00
aS'@@subtract_after'
p707
asg333
(lp708
I01
ag675
asg683
(lp709
I01
aI00
aS'@@flag_residuals'
p710
asg335
(lp711
Na(lp712
I5
aI2
aa(lp713
I2
aI2
aa(lp714
I3
aI3
aaS'@@num_cells'
p715
assg44
Nsg15
S'2006-02-26 14:20'
p716
sg12
S'MG_JEN_Cohset::insert_solver()'
p717
sg21
S'MG_JEN_Cohsetinsert_solver'
p718
sg29
S'insert_solver'
p719
sg42
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p720
sg52
I00
sg47
g716
sg159
(dp721
g163
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p722
ssg53
(lp723
g10
ag673
ag319
ag335
ag333
ag325
ag671
ag431
ag674
ag669
ag683
aS'./MG_JEN_Cohset.solver_subtree()'
p724
assg335
g715
sg724
(dp725
S'rmin'
p726
Nsg431
I01
sS'epsilon'
p727
F0.0001
sS'rmax'
p728
NsS'usesvd'
p729
I01
sS'debug_level'
p730
I10
sS'solvegroup'
p731
(lp732
g140
aS'DJones'
p733
asg10
(dp734
g14
g724
sg55
(dp735
g726
S'if specified, only use baselines>=rmin'
p736
sg431
S'if True, include visualisation'
p737
sg727
S'iteration control criterion'
p738
sg728
S'if specified, only use baselines<=rmax'
p739
sg729
S'if True, use Singular Value Decomposition (SVD)'
p740
sg730
S'solver debug_level'
p741
sg731
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p742
sg335
g336
sS'history'
p743
S'if True, include history collection of metrics'
p744
sS'num_iter'
p745
S'max number of iterations'
p746
sS'condition'
p747
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p748
sS'colin_factor'
p749
S'colinearity factor'
p750
ssg25
g26
sg48
S'MG_JEN_Cohset'
p751
sg76
(dp752
g726
I81
sg431
I89
sg727
I85
sg728
I82
sg729
I87
sg731
I79
sg335
I83
sg743
I90
sg745
I84
sg747
I80
sg749
I86
ssg17
(dp753
g730
I01
sg335
I00
ssg23
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p754
sg45
S'20dec2005'
p755
sg61
S'Make a solver-subtree for the given Condeq Cohset'
p756
sg82
(dp757
g729
I00
sg743
I00
sg431
I00
ssg27
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p758
sg31
(dp759
g726
(lp760
NaI100
aI200
aI500
aS'@@rmin'
p761
asg431
(lp762
I01
aI00
aS'@@visu'
p763
asg727
(lp764
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p765
asg728
(lp766
NaI500
aI1000
aI2000
aS'@@rmax'
p767
asg729
(lp768
I01
aI00
aS'@@usesvd'
p769
asg730
(lp770
I10
aS'@@debug_level'
p771
asg731
(lp772
(lp773
a(lp774
g140
aa(lp775
S'Ggain'
p776
aa(lp777
S'Gphase'
p778
aa(lp779
S'Gpol1'
p780
aa(lp781
S'Gpol2'
p782
aa(lp783
g149
aa(lp784
g140
aS'stokesI'
p785
aa(lp786
g785
aa(lp787
S'stokesIQU'
p788
aa(lp789
S'stokesIQUV'
p790
aa(lp791
g140
ag733
aa(lp792
g733
aa(lp793
S'Dang'
p794
aa(lp795
S'Dell'
p796
aa(lp797
S'Dreal'
p798
aa(lp799
S'Dimag'
p800
aa(lp801
g140
ag733
ag143
aa(lp802
g143
aa(lp803
g140
ag34
aa(lp804
g34
aa(lp805
S'Breal'
p806
aa(lp807
S'Bimag'
p808
aa(lp809
S'Bpol1'
p810
aa(lp811
S'Bpol2'
p812
aaS'@@solvegroup'
p813
asg335
(lp814
Na(lp815
I5
aI2
aa(lp816
I2
aI2
aa(lp817
I3
aI3
aaS'@@num_cells'
p818
asg743
(lp819
I01
aI00
aS'@@history'
p820
asg745
(lp821
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p822
asg747
(lp823
NaS'Gphase_X_sum=0.0'
p824
aS'Gphase_Y_sum=0.0'
p825
a(lp826
g824
ag825
aa(lp827
S'Gphase_X_first=0.0'
p828
aS'Gphase_Y_first=0.0'
p829
aa(lp830
S'Gphase_X_last=0.0'
p831
aS'Gphase_Y_last=0.0'
p832
aaS'Dang_sum=0.0'
p833
a(lp834
S'Bimag_X_sum=0.0'
p835
aS'Bimag_Y_sum=0.0'
p836
aa(lp837
S'Breal_X_product=1.0'
p838
aS'Breal_Y_product=1.0'
p839
aaS'@@condition'
p840
asg749
(lp841
F1e-08
aF0.0
aS'@@colin_factor'
p842
assg44
Nsg15
S'2006-02-26 14:20'
p843
sg12
S'MG_JEN_Cohset::solver_subtree()'
p844
sg21
S'MG_JEN_Cohsetsolver_subtree'
p845
sg29
S'solver_subtree'
p846
sg42
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p847
sg52
I00
sg47
g843
sg159
(dp848
g163
S".modify( solvegroup ): []  ->  ['GJones', 'DJones']"
p849
ssg53
(lp850
g10
ag731
ag747
ag726
ag728
ag335
ag745
ag727
ag749
ag729
ag730
ag431
ag743
assg335
Nsg743
I01
sg745
I20
sg747
Nsg749
F1e-08
ssg683
I00
ss.