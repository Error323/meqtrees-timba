(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I86
sg17
I91
sg21
I88
sg38
I87
sg25
I90
sg44
I89
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-14 18:46'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I110
sg129
I111
sg131
I109
sg142
I113
sg144
I108
sg146
I114
sg148
I115
sg149
I112
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-14 18:46'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I76
sg217
I78
sg208
I77
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-14 18:46'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I52
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones_WSRT'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg14
(lp294
(lp295
I0
aI1
aI2
aI3
aI4
aa(lp296
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p299
ag121
assg101
Nsg102
S'2006-02-14 18:46'
p300
sg104
S'MG_JEN_Cohset::JJones()'
p301
sg106
S'MG_JEN_CohsetJJones'
p302
sg108
S'JJones'
p303
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p304
sg112
I00
sg113
g300
sg114
(dp305
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p306
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p307
sS'3'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p309
sS'2'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p311
sS'5'
p312
S".modify( Jsequence ): []  ->  ['GJones']"
p313
sS'4'
p314
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p315
ssg118
(lp316
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p317
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p318
ag122
assg318
(dp319
g12
I00
sg1
S'@@polrep'
p320
sg14
S'@@stations'
p321
sg22
F0.0
sg23
S'@@uvplane_effect'
p322
sg7
S'@@parmtable'
p323
sg26
(dp324
g28
g318
sg29
(dp325
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p326
sg50
(dp327
sg52
(dp328
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p329
sg56
S'12dec2005'
p330
sg58
(dp331
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p332
sg62
(dp333
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p334
sg66
(dp335
g12
(lp336
I01
aI00
aS'@@unsolvable'
p337
asg1
(lp338
g2
ag71
ag320
asg14
(lp339
(lp340
I0
aag321
asg22
(lp341
F0.0
aS'@@ft_coeff_scale'
p342
asg23
(lp343
I00
ag322
asg7
(lp344
Nag323
assg101
Nsg102
S'2006-02-14 18:46'
p345
sg104
S'MG_JEN_Joneset::KJones()'
p346
sg106
S'MG_JEN_JonesetKJones'
p347
sg108
S'KJones'
p348
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p349
sg112
I00
sg113
g345
sg118
(lp350
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg317
(dp351
g12
I00
sg1
S'@@polrep'
p352
sS'fdeg_Ggain'
p353
I0
sS'tdeg_Gphase'
p354
S'@tdeg_Ggain'
p355
sS'stddev_Ggain'
p356
F0.0
sS'c00_Gphase'
p357
F0.0
sg22
F0.0
sg14
S'@@stations'
p358
sS'tdeg_Ggain'
p359
I3
sS'fdeg_Gphase'
p360
S'@fdeg_Ggain'
p361
sg7
S'@@parmtable'
p362
sg26
(dp363
g28
g317
sg29
(dp364
g12
g31
sg1
g32
sg14
g33
sg357
S'default c00 funklet value'
p365
sg353
S'degree of freq polynomial'
p366
sg354
S'degree of time polynomial'
p367
sg22
g37
sg359
g367
sg360
g366
sg7
g43
sg356
S'scatter in default c00 funklet values'
p368
sS'subtile_size_Gphase'
p369
S'sub-tile size (None=entire tile)'
p370
sS'c00_Ggain'
p371
g365
sS'stddev_Gphase'
p372
g368
sS'Gpolar'
p373
S'if True, use MeqPolar, otherwise MeqToComplex'
p374
sS'subtile_size_Ggain'
p375
g370
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p376
sg50
(dp377
g353
I60
sg375
I64
sg354
I63
sg359
I62
sg360
I61
sg369
I65
sg373
I59
ssg52
(dp378
g12
I01
sg1
I01
sg14
I01
sg356
I01
sg357
I01
sg22
I01
sg23
I01
sg7
I01
sg371
I01
sg372
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p379
sg56
S'15dec2005'
p380
sg58
(dp381
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p382
sg62
(dp383
g12
I00
sg373
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p384
sg66
(dp385
g12
(lp386
I01
aI00
aS'@@unsolvable'
p387
asg1
(lp388
g2
ag71
ag352
asg14
(lp389
(lp390
I0
aag358
asg357
(lp391
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p392
asg353
(lp393
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p394
asg354
(lp395
I0
aI1
aI2
aI3
ag355
aS'@@tdeg_Gphase'
p396
asg22
(lp397
F0.0
aS'@@ft_coeff_scale'
p398
asg359
(lp399
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p400
asg360
(lp401
I0
aI1
aI2
aI3
ag361
aS'@@fdeg_Gphase'
p402
asg7
(lp403
Nag362
asg356
(lp404
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p405
asg369
(lp406
S'@subtile_size_Ggain'
p407
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p408
asg371
(lp409
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p410
asg372
(lp411
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p412
asg373
(lp413
I01
aI00
aS'@@Gpolar'
p414
asg375
(lp415
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p416
asg23
(lp417
I00
aS'@@uvplane_effect'
p418
assg101
Nsg102
S'2006-02-14 18:46'
p419
sg104
S'MG_JEN_Joneset::GJones()'
p420
sg106
S'MG_JEN_JonesetGJones'
p421
sg108
S'GJones'
p422
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p423
sg112
I00
sg113
g419
sg114
(dp424
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p425
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p426
ssg118
(lp427
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag373
ag353
ag360
ag359
ag354
ag375
ag369
ag371
ag357
ag356
ag372
assg369
g407
sg371
F1.0
sg372
F0.0
sg373
I00
sg375
Nsg23
g418
ssg263
(lp428
g280
assg26
(dp429
g28
S'./MG_JEN_cps.'
p430
sg29
(dp431
g1
g262
sS'master_reqseq'
p432
S'if True, use a master reqseq for solver(s)'
p433
sg14
g265
sS'insert_flagger'
p434
S'if True, insert a flagger'
p435
sS'redun'
p436
S'if True, redundant spacing calibration'
p437
sS'insert_solver'
p438
S'if True, insert a solver'
p439
sg5
S'name of the (AIPS++) Measurement Set'
p440
sS'chain_solvers'
p441
S'if True, chain the solvers (recommended)'
p442
sS'num_cells'
p443
S'if defined, ModRes argument [ntime,nfreq]'
p444
sg7
g261
sS'tile_size'
p445
S'(inputrec) size (in time-slots) of the input data-tile'
p446
sg23
g39
ssS'reference'
p447
I00
sg46
g47
sg48
S'MG_JEN_cps'
p448
sg50
(dp449
g1
I8
sg14
I6
sg434
I2
sg436
I12
sg438
I1
sg5
I4
sg7
I7
sg3
I0
sg443
I13
sg445
I5
sg23
I9
ssg52
(dp450
g1
I00
sg432
I01
sg14
I00
sS'last_changed'
p451
I01
sg436
I00
sg23
I00
sg441
I01
sg443
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p452
sg56
g380
sg60
g452
sg62
(dp453
g451
I00
sg434
I00
sg432
I00
sg438
I00
sg436
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p454
sg66
(dp455
g1
(lp456
g2
ag71
aS'@@polrep'
p457
asg432
(lp458
I01
aI00
aS'@@master_reqseq'
p459
asg14
(lp460
(lp461
I0
aI1
aI2
aI3
aI4
aa(lp462
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp463
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp464
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p465
asg434
(lp466
I01
aI00
aS'@@insert_flagger'
p467
asg451
(lp468
S'd30jan2006'
p469
aS'@@last_changed'
p470
asg438
(lp471
I01
aI00
aS'@@insert_solver'
p472
asg436
(lp473
I01
aI00
aS'@@redun'
p474
asg5
(lp475
g6
aS'@@ms_name'
p476
asg441
(lp477
I01
aS'@@chain_solvers'
p478
asg443
(lp479
Na(lp480
I5
aI2
aa(lp481
I2
aI2
aa(lp482
I3
aI3
aaS'@@num_cells'
p483
asg7
(lp484
NaS'@@parmtable'
p485
asg445
(lp486
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p487
asg23
(lp488
I00
aS'@@uvplane_effect'
p489
assg102
S'2006-02-14 18:46'
p490
sS'HISTORY'
p491
(dp492
g253
S'2006-02-14 18:46: Derived from: MG_JEN_cps_GJones.inarg'
p493
sg116
S'2006-02-14 18:46: Derived from: MG_JEN_cps.inarg'
p494
ssg104
g4
sS'save_file'
p495
S'MG_JEN_cps_GJones_protected.inarg'
p496
sS'file_filter'
p497
S'MG_JEN_cps*.inarg'
p498
sg108
S''
p499
sg110
S'<specific>'
p500
sS'browse'
p501
(dp502
g5
S'*.MS'
p503
ssg112
I01
sg113
g490
sg114
(dp504
S'11'
p505
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1}"
p506
sS'10'
p507
S'.modify(): stripped off: _JEN_inarg_option'
p508
sg253
S'.modify( uvplane_effect ): False  ->  True'
p509
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p510
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p511
sg310
S".modify(): found ={'uvplane_effect': 1}"
p512
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p513
sg314
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p514
sS'7'
p515
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p516
sS'6'
p517
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p518
sS'9'
p519
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p520
sS'8'
p521
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p522
ssg118
(lp523
g26
ag3
ag438
ag434
ag451
ag5
ag445
ag14
ag7
ag1
ag23
ag441
ag432
ag436
ag443
aS'./MG_JEN_exec.stream_control()'
p524
aS'./MG_JEN_Cohset.make_spigots()'
p525
aS'./MG_JEN_Sixpack.newstar_source()'
p526
ag8
aS'./MG_JEN_Cohset.predict()'
p527
aS'./MG_JEN_Cohset.insert_solver()'
p528
aS'./MG_JEN_Cohset.make_sinks()'
p529
assg529
(dp530
S'fullDomainMux'
p531
I01
sS'output_col'
p532
S'PREDICT'
p533
sS'visu'
p534
I01
sS'flag'
p535
I00
sg26
(dp536
g104
S'MG_JEN_Cohset::make_sinks()'
p537
sg28
g529
sg50
(dp538
g535
I147
sg534
I146
sg531
I148
sg532
I144
sS'visu_array_config'
p539
I145
ssg106
S'MG_JEN_Cohsetmake_sinks'
p540
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p541
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p542
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p543
sg108
S'make_sinks'
p544
sg66
(dp545
g535
(lp546
I01
aI00
aS'@@flag'
p547
asg539
(lp548
I01
aI00
aS'@@visu_array_config'
p549
asg532
(lp550
g533
aS'RESIDUALS'
p551
aS'DATA'
p552
aS'@@output_col'
p553
asg531
(lp554
I01
aI00
aS'@@fullDomainMux'
p555
asg534
(lp556
I01
aI00
aS'@@visu'
p557
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p558
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p559
sg48
S'MG_JEN_Cohset'
p560
sg62
(dp561
g535
I00
sg539
I00
sg531
I00
sg534
I00
ssg112
I00
sg102
g559
sg118
(lp562
g26
ag532
ag539
ag534
ag535
ag531
asg29
(dp563
g535
S'if True, insert a flagger for the output uv-data'
p564
sg539
S'if True, visualise the array config (from MS)'
p565
sg532
S'name of the logical (VisTile) output column'
p566
sg531
S'if True, attach an extra VisDataMux'
p567
sg534
S'if True, visualise the output uv-data'
p568
sssg539
I01
ssg445
I10
sg525
(dp569
S'MS_corr_index'
p570
(lp571
I0
aI1
aI2
aI3
asg535
I00
sg26
(dp572
g104
S'MG_JEN_Cohset::make_spigots()'
p573
sg28
g525
sg50
(dp574
g535
I25
sg570
I23
sg534
I24
ssg52
(dp575
S'input_col'
p576
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p577
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p578
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p579
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p580
sg108
S'make_spigots'
p581
sg66
(dp582
g535
(lp583
I01
aI00
aS'@@flag'
p584
asg570
(lp585
g571
a(lp586
I0
aI-1
aI-1
aI1
aa(lp587
I0
aI-1
aI-1
aI3
aaS'@@'
p588
aS'@@MS_corr_index'
p589
asg576
(lp590
g552
ag533
ag551
aS'@@input_col'
p591
asg534
(lp592
I01
aI00
aS'@@visu'
p593
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p594
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p595
sg48
S'MG_JEN_Cohset'
p596
sg62
(dp597
g535
I00
sg534
I00
ssg112
I00
sg102
g595
sg118
(lp598
g26
ag576
ag570
ag534
ag535
asg29
(dp599
g535
S'if True, insert a flagger for the input uv-data'
p600
sg570
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p601
sg576
S'name of the logical (VisTile) input column'
p602
sg534
S'if True, visualise the input uv-data'
p603
sssg576
g552
sg534
I01
ssg527
(dp604
g1
S'@@polrep'
p605
sg26
(dp606
g104
S'MG_JEN_Cohset::predict()'
p607
sg28
g527
sg50
(dp608
sg52
(dp609
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p610
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p611
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p612
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p613
sg108
S'predict'
p614
sg66
(dp615
g1
(lp616
g2
ag71
ag605
asg14
(lp617
(lp618
I0
aI1
aI2
aI3
aI4
aa(lp619
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp620
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp621
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p622
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p623
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p624
sg48
S'MG_JEN_Cohset'
p625
sg58
(dp626
g1
I00
sg14
I00
ssg112
I00
sg102
g624
sg118
(lp627
g26
ag14
ag1
asg29
(dp628
g1
g262
sg14
g265
sssg14
g622
ssg434
I00
sg451
g469
sg23
I01
sg443
Nsg526
(dp629
S'f0'
p630
F1000000.0
sS'major'
p631
F0.0
sg12
I00
sS'shape'
p632
S'point'
p633
sg7
NsS'Upct'
p634
NsS'I0'
p635
F1.0
sS'Vpct'
p636
NsS'dDec'
p637
F0.0
sS'pa'
p638
F0.0
sg26
(dp639
g28
g526
sg29
(dp640
g630
S'reference freq (Hz): I=I0 @ f=f0'
p641
sg631
S'major axis (arcsec)'
p642
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p643
sg635
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p644
sg638
S'position angle (rad)'
p645
sS'SI'
p646
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p647
sS'Qpct'
p648
S'Stokes Q (percentage of I)'
p649
sS'punit'
p650
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p651
sg637
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p652
sg632
S'source shape'
p653
sg7
S'name of the MeqParm table (AIPS++)'
p654
sS'fsr_trace'
p655
S'If True, attach to forest state record'
p656
sS'RA0'
p657
S'If RA0 is a node, RA0+dRA overrides RA'
p658
sS'dRA'
p659
S'RA offset (arcsec): RA = RA0 + dRA'
p660
sS'RM'
p661
S'Intrinsic Rotation Measure (rad/m2)'
p662
sg634
S'Stokes U (percentage of I)'
p663
sS'Dec'
p664
S'Declination (rad, J2000)'
p665
sS'Dec0'
p666
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p667
sg636
S'Stokes V (percentage of I)'
p668
sS'minor'
p669
S'minor axis (arcsec)'
p670
sS'RA'
p671
S'Right Ascension (rad, J2000)'
p672
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p673
sg50
(dp674
g664
I38
sg635
I30
sg648
I31
sg636
I33
sg646
I35
sg7
I28
sg671
I37
sg661
I34
sg634
I32
sg650
I26
ssg52
(dp675
g630
I01
sg631
I01
sg12
I01
sS'name'
p676
I01
sg655
I01
sg650
I00
sg637
I01
sg632
I01
sg638
I01
sg657
I01
sg659
I01
sg666
I01
sg669
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p677
sg56
S'10feb2006'
p678
sg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p679
sg62
(dp680
g12
I00
sg655
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p681
sg66
(dp682
g630
(lp683
F1000000.0
aS'@@f0'
p684
asg631
(lp685
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p686
asg12
(lp687
I01
aI00
aS'@@unsolvable'
p688
asg632
(lp689
g633
aS'ell.gauss'
p690
aS'@@shape'
p691
asg7
(lp692
NaS'@@parmtable'
p693
asg634
(lp694
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p695
asg635
(lp696
F1.0
aF10.0
aS'@@I0'
p697
asg636
(lp698
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p699
asg637
(lp700
F0.0
aS'@@dDec'
p701
asg638
(lp702
F0.0
aF1.0
aF-0.5
aS'@@pa'
p703
asg671
(lp704
F0.0
aF0.5
aF1.0
aS'@@RA'
p705
asg659
(lp706
F0.0
aS'@@dRA'
p707
asg661
(lp708
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p709
asg666
(lp710
NaS'@@Dec0'
p711
asg669
(lp712
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p713
asg648
(lp714
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p715
asg650
(lp716
S'unpol'
p717
aS'unpol2'
p718
aS'unpol10'
p719
aS'QUV'
p720
aS'QU'
p721
aS'Qonly'
p722
aS'Uonly'
p723
aS'Vonly'
p724
aS'3c147'
p725
aS'3c286'
p726
aS'3c48'
p727
aS'3c295'
p728
aS'RMtest'
p729
aS'SItest'
p730
aS'@@punit'
p731
asg657
(lp732
NaS'@@RA0'
p733
asg664
(lp734
F0.5
aF1.0
aS'@@Dec'
p735
asg676
(lp736
NaS'@@name'
p737
asg655
(lp738
I01
aI00
aS'@@fsr_trace'
p739
asg646
(lp740
NaF-0.69999999999999996
a(lp741
F0.44700000000000001
aF-0.184
aaS'@@SI'
p742
assg101
Nsg102
S'2006-02-14 18:46'
p743
sg104
S'MG_JEN_Sixpack::newstar_source()'
p744
sg106
S'MG_JEN_Sixpacknewstar_source'
p745
sg108
S'newstar_source'
p746
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p747
sS'callback'
p748
(dp749
g650
I01
ssg112
I00
sg113
g743
sg118
(lp750
g26
ag650
ag676
ag7
ag12
ag635
ag648
ag634
ag636
ag661
ag646
ag630
ag671
ag664
ag655
ag632
ag631
ag669
ag638
ag657
ag666
ag659
ag637
assg659
F0.0
sg661
Nsg666
Nsg669
F0.0
sg671
F0.0
sg648
Nsg650
g717
sg657
Nsg664
F1.0
sg676
Nsg655
I01
sg646
Nssg432
I00
sg14
g461
sg524
(dp751
S'channel_start_index'
p752
I10
sS'data_column_name'
p753
g552
sS'predict_column'
p754
S'CORRECTED_DATA'
p755
sg5
S'@@ms_name'
p756
sg26
(dp757
g28
g524
sg29
(dp758
g752
S'(inputrec.sel) index of first selected freq channel'
p759
sg753
S'(inputrec) MS input column'
p760
sg754
S'MS output column to be associated with the VisTile predict-column'
p761
sg5
g440
sg445
g446
sS'channel_increment'
p762
S'(inputrec.sel) take every nth channel (1=all)'
p763
sS'channel_end_index'
p764
S'(inputrec.sel) index of last selected freq channel'
p765
sS'write_flags'
p766
S'(outputrec) if True, write flags to MS'
p767
ssg46
g47
sg48
S'MG_JEN_exec'
p768
sg50
(dp769
g752
I17
sg753
I16
sg754
I21
sg766
I20
sg764
I18
sg762
I19
ssg52
(dp770
g5
I01
sg445
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p771
sg56
S'20jan2006'
p772
sg58
(dp773
g5
I00
sg445
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p774
sg62
(dp775
g766
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p776
sg66
(dp777
g752
(lp778
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p779
asg753
(lp780
g552
ag755
aS'@@data_column_name'
p781
asg754
(lp782
g552
ag755
aS'MODEL_DATA'
p783
aS'@@predict_column'
p784
asg5
(lp785
g6
ag756
asg445
(lp786
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p787
asg762
(lp788
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p789
asg764
(lp790
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p791
asg766
(lp792
I01
aI00
aS'@@write_flags'
p793
assg101
Nsg102
S'2006-02-14 18:46'
p794
sg104
S'MG_JEN_exec::stream_control()'
p795
sg106
S'MG_JEN_execstream_control'
p796
sg108
S'stream_control'
p797
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p798
sg501
(dp799
g5
g503
ssg112
I00
sg113
g794
sg118
(lp800
g26
ag5
ag445
ag753
ag752
ag764
ag762
ag766
ag754
assg445
g787
sg762
I1
sg764
I50
sg766
I00
ssg436
I00
sg438
I01
sg441
I01
sg528
(dp801
S'correct_after'
p802
I01
sg432
S'@@master_reqseq'
p803
sS'condeq_unop'
p804
Nsg534
I01
sg436
S'@@redun'
p805
sS'solver_subtree'
p806
NsS'subtract_after'
p807
I00
sg441
S'@@chain_solvers'
p808
sg26
(dp809
g28
g528
sg29
(dp810
g802
S'if True, correct measured with predicted.Joneset'
p811
sg432
g433
sg804
S'Optional unary operation on Condeq inputs'
p812
sg534
S'if True, include full visualisation'
p813
sg436
g437
sg806
S'solver subtree qualifier(s)'
p814
sg807
S'if True, subtract predicted from measured'
p815
sg441
g442
sg443
g444
ssg46
g47
sg48
S'MG_JEN_Cohset'
p816
sg50
(dp817
g807
I130
sg802
I131
sg804
I128
sg534
I129
ssg52
(dp818
g806
I01
sg443
I01
sg441
I01
sg436
I01
sg432
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p819
sg56
g270
sg58
(dp820
g443
I00
sg441
I00
sg436
I00
sg432
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p821
sg62
(dp822
g807
I00
sg436
I00
sg802
I00
sg432
I00
sg534
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p823
sg66
(dp824
g802
(lp825
I01
aI00
aS'@@correct_after'
p826
asg432
(lp827
I01
aI00
ag803
asg804
(lp828
NaS'Abs'
p829
aS'Arg'
p830
aS'@@condeq_unop'
p831
asg534
(lp832
I01
aI00
aS'@@visu'
p833
asg436
(lp834
I01
aI00
ag805
asg806
(lp835
NaS'@@solver_subtree'
p836
asg807
(lp837
I01
aI00
aS'@@subtract_after'
p838
asg441
(lp839
I01
ag808
asg443
(lp840
Na(lp841
I5
aI2
aa(lp842
I2
aI2
aa(lp843
I3
aI3
aaS'@@num_cells'
p844
assg101
Nsg102
S'2006-02-14 18:46'
p845
sg104
S'MG_JEN_Cohset::insert_solver()'
p846
sg106
S'MG_JEN_Cohsetinsert_solver'
p847
sg108
S'insert_solver'
p848
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p849
sg112
I00
sg113
g845
sg114
(dp850
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p851
ssg118
(lp852
g26
ag806
ag436
ag443
ag441
ag432
ag804
ag534
ag807
ag802
aS'./MG_JEN_Cohset.solver_subtree()'
p853
assg443
g844
sg853
(dp854
S'rmin'
p855
Nsg534
I01
sS'epsilon'
p856
F0.01
sS'rmax'
p857
NsS'usesvd'
p858
I01
sS'debug_level'
p859
I10
sS'solvegroup'
p860
(lp861
g280
asg26
(dp862
g28
g853
sg29
(dp863
g855
S'if specified, only use baselines>=rmin'
p864
sg534
S'if True, include visualisation'
p865
sg856
S'iteration control criterion'
p866
sg857
S'if specified, only use baselines<=rmax'
p867
sg858
S'if True, use Singular Value Decomposition (SVD)'
p868
sg859
S'solver debug_level'
p869
sg860
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p870
sg443
g444
sS'history'
p871
S'if True, include history collection of metrics'
p872
sS'num_iter'
p873
S'max number of iterations'
p874
sS'condition'
p875
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p876
sS'colin_factor'
p877
S'colinearity factor'
p878
ssg46
g47
sg48
S'MG_JEN_Cohset'
p879
sg50
(dp880
g855
I134
sg534
I142
sg856
I138
sg857
I135
sg858
I140
sg860
I132
sg443
I136
sg871
I143
sg873
I137
sg875
I133
sg877
I139
ssg52
(dp881
g859
I01
sg443
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p882
sg56
S'20dec2005'
p883
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p884
sg62
(dp885
g858
I00
sg871
I00
sg534
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p886
sg66
(dp887
g855
(lp888
NaI100
aI200
aI500
aS'@@rmin'
p889
asg534
(lp890
I01
aI00
aS'@@visu'
p891
asg856
(lp892
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p893
asg857
(lp894
NaI500
aI1000
aI2000
aS'@@rmax'
p895
asg858
(lp896
I01
aI00
aS'@@usesvd'
p897
asg859
(lp898
I10
aS'@@debug_level'
p899
asg860
(lp900
(lp901
a(lp902
g280
aa(lp903
S'Ggain'
p904
aa(lp905
S'Gphase'
p906
aa(lp907
S'Gpol1'
p908
aa(lp909
S'Gpol2'
p910
aa(lp911
g280
aS'stokesI'
p912
aa(lp913
g912
aa(lp914
S'stokesIQU'
p915
aa(lp916
S'stokesIQUV'
p917
aa(lp918
g280
ag291
aa(lp919
g291
aa(lp920
S'dang'
p921
aa(lp922
S'dell'
p923
aa(lp924
S'Dreal'
p925
aa(lp926
S'Dimag'
p927
aa(lp928
g280
ag291
ag284
aa(lp929
g284
aa(lp930
g280
ag282
aa(lp931
g282
aa(lp932
S'Breal'
p933
aa(lp934
S'Bimag'
p935
aa(lp936
S'Bpol1'
p937
aa(lp938
S'Bpol2'
p939
aaS'@@solvegroup'
p940
asg443
(lp941
Na(lp942
I5
aI2
aa(lp943
I2
aI2
aa(lp944
I3
aI3
aaS'@@num_cells'
p945
asg871
(lp946
I01
aI00
aS'@@history'
p947
asg873
(lp948
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p949
asg875
(lp950
NaS'Gphase_X_sum=0.0'
p951
aS'Gphase_Y_sum=0.0'
p952
a(lp953
g951
ag952
aa(lp954
S'Gphase_X_first=0.0'
p955
aS'Gphase_Y_first=0.0'
p956
aa(lp957
S'Gphase_X_last=0.0'
p958
aS'Gphase_Y_last=0.0'
p959
aa(lp960
S'Dimag_X_sum=0.0'
p961
aS'Dimag_Y_sum=0.0'
p962
aa(lp963
S'Dreal_X_product=1.0'
p964
aS'Dreal_Y_product=1.0'
p965
aaS'dang_sum=0.0'
p966
a(lp967
S'Bimag_X_sum=0.0'
p968
aS'Bimag_Y_sum=0.0'
p969
aa(lp970
S'Breal_X_product=1.0'
p971
aS'Breal_Y_product=1.0'
p972
aaS'@@condition'
p973
asg877
(lp974
F1e-08
aF0.0
aS'@@colin_factor'
p975
assg101
Nsg102
S'2006-02-14 18:46'
p976
sg104
S'MG_JEN_Cohset::solver_subtree()'
p977
sg106
S'MG_JEN_Cohsetsolver_subtree'
p978
sg108
S'solver_subtree'
p979
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p980
sg112
I00
sg113
g976
sg114
(dp981
g253
S'.modify( num_iter ): 20  ->  5'
p982
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p983
sg310
S".modify( solvegroup ): []  ->  ['GJones']"
p984
ssg118
(lp985
g26
ag860
ag875
ag855
ag857
ag443
ag873
ag856
ag877
ag858
ag859
ag534
ag871
assg443
Nsg871
I01
sg873
I5
sg875
Nsg877
F1e-08
sss.