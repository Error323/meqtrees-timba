(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I86
sg17
I91
sg21
I88
sg38
I87
sg25
I90
sg44
I89
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-10 18:22'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-10 18:22'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I110
sg129
I111
sg131
I109
sg142
I113
sg144
I108
sg146
I114
sg148
I115
sg149
I112
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-10 18:22'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-10 18:22'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I76
sg217
I78
sg208
I77
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-10 18:22'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-10 18:22'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I52
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones_WSRT'
p291
aa(lp292
g280
ag291
aa(lp293
aS'@@Jsequence'
p294
asg14
(lp295
(lp296
I0
aI1
aI2
aI3
aI4
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp299
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p300
ag121
assg101
Nsg102
S'2006-02-10 18:22'
p301
sg104
S'MG_JEN_Cohset::JJones()'
p302
sg106
S'MG_JEN_CohsetJJones'
p303
sg108
S'JJones'
p304
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-10 18:22'
p305
sg112
I00
sg113
g301
sg114
(dp306
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p307
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p308
sS'3'
p309
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p310
sS'2'
p311
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p312
sS'5'
p313
S".modify( Jsequence ): []  ->  ['GJones']"
p314
sS'4'
p315
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p316
ssg118
(lp317
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p318
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p319
ag122
assg319
(dp320
g12
I00
sg1
S'@@polrep'
p321
sg14
S'@@stations'
p322
sg22
F0.0
sg23
S'@@uvplane_effect'
p323
sg7
S'@@parmtable'
p324
sg26
(dp325
g28
g319
sg29
(dp326
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p327
sg50
(dp328
sg52
(dp329
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p330
sg56
S'12dec2005'
p331
sg58
(dp332
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p333
sg62
(dp334
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p335
sg66
(dp336
g12
(lp337
I01
aI00
aS'@@unsolvable'
p338
asg1
(lp339
g2
ag71
ag321
asg14
(lp340
(lp341
I0
aag322
asg22
(lp342
F0.0
aS'@@ft_coeff_scale'
p343
asg23
(lp344
I00
ag323
asg7
(lp345
Nag324
assg101
Nsg102
S'2006-02-10 18:22'
p346
sg104
S'MG_JEN_Joneset::KJones()'
p347
sg106
S'MG_JEN_JonesetKJones'
p348
sg108
S'KJones'
p349
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-10 18:22'
p350
sg112
I00
sg113
g346
sg118
(lp351
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg318
(dp352
g12
I00
sg1
S'@@polrep'
p353
sS'fdeg_Ggain'
p354
I0
sS'tdeg_Gphase'
p355
S'@tdeg_Ggain'
p356
sS'stddev_Ggain'
p357
F0.0
sS'c00_Gphase'
p358
F0.0
sg22
F0.0
sg14
S'@@stations'
p359
sS'tdeg_Ggain'
p360
I3
sS'fdeg_Gphase'
p361
S'@fdeg_Ggain'
p362
sg7
S'@@parmtable'
p363
sg26
(dp364
g28
g318
sg29
(dp365
g12
g31
sg1
g32
sg14
g33
sg358
S'default c00 funklet value'
p366
sg354
S'degree of freq polynomial'
p367
sg355
S'degree of time polynomial'
p368
sg22
g37
sg360
g368
sg361
g367
sg7
g43
sg357
S'scatter in default c00 funklet values'
p369
sS'subtile_size_Gphase'
p370
S'sub-tile size (None=entire tile)'
p371
sS'c00_Ggain'
p372
g366
sS'stddev_Gphase'
p373
g369
sS'Gpolar'
p374
S'if True, use MeqPolar, otherwise MeqToComplex'
p375
sS'subtile_size_Ggain'
p376
g371
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p377
sg50
(dp378
g354
I60
sg376
I64
sg355
I63
sg360
I62
sg361
I61
sg370
I65
sg374
I59
ssg52
(dp379
g12
I01
sg1
I01
sg14
I01
sg357
I01
sg358
I01
sg22
I01
sg23
I01
sg7
I01
sg372
I01
sg373
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p380
sg56
S'15dec2005'
p381
sg58
(dp382
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p383
sg62
(dp384
g12
I00
sg374
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p385
sg66
(dp386
g12
(lp387
I01
aI00
aS'@@unsolvable'
p388
asg1
(lp389
g2
ag71
ag353
asg14
(lp390
(lp391
I0
aag359
asg358
(lp392
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p393
asg354
(lp394
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p395
asg355
(lp396
I0
aI1
aI2
aI3
ag356
aS'@@tdeg_Gphase'
p397
asg22
(lp398
F0.0
aS'@@ft_coeff_scale'
p399
asg360
(lp400
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p401
asg361
(lp402
I0
aI1
aI2
aI3
ag362
aS'@@fdeg_Gphase'
p403
asg7
(lp404
Nag363
asg357
(lp405
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p406
asg370
(lp407
S'@subtile_size_Ggain'
p408
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p409
asg372
(lp410
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p411
asg373
(lp412
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p413
asg374
(lp414
I01
aI00
aS'@@Gpolar'
p415
asg376
(lp416
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p417
asg23
(lp418
I00
aS'@@uvplane_effect'
p419
assg101
Nsg102
S'2006-02-10 18:22'
p420
sg104
S'MG_JEN_Joneset::GJones()'
p421
sg106
S'MG_JEN_JonesetGJones'
p422
sg108
S'GJones'
p423
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-10 18:22'
p424
sg112
I00
sg113
g420
sg114
(dp425
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p426
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p427
ssg118
(lp428
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag374
ag354
ag361
ag360
ag355
ag376
ag370
ag372
ag358
ag357
ag373
assg370
g408
sg372
F1.0
sg373
F0.0
sg374
I00
sg376
Nsg23
g419
ssg263
(lp429
g280
assg26
(dp430
g28
S'./MG_JEN_cps.'
p431
sg29
(dp432
g1
g262
sS'master_reqseq'
p433
S'if True, use a master reqseq for solver(s)'
p434
sg14
g265
sS'insert_flagger'
p435
S'if True, insert a flagger'
p436
sS'redun'
p437
S'if True, redundant spacing calibration'
p438
sS'insert_solver'
p439
S'if True, insert a solver'
p440
sg5
S'name of the (AIPS++) Measurement Set'
p441
sS'chain_solvers'
p442
S'if True, chain the solvers (recommended)'
p443
sS'num_cells'
p444
S'if defined, ModRes argument [ntime,nfreq]'
p445
sg7
g261
sS'tile_size'
p446
S'(inputrec) size (in time-slots) of the input data-tile'
p447
sg23
g39
ssS'reference'
p448
I00
sg46
g47
sg48
S'MG_JEN_cps'
p449
sg50
(dp450
g1
I8
sg14
I6
sg435
I2
sg437
I12
sg439
I1
sg5
I4
sg7
I7
sg3
I0
sg444
I13
sg446
I5
sg23
I9
ssg52
(dp451
g1
I00
sg433
I01
sg14
I00
sS'last_changed'
p452
I01
sg437
I00
sg23
I00
sg442
I01
sg444
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p453
sg56
g381
sg60
g453
sg62
(dp454
g452
I00
sg435
I00
sg433
I00
sg439
I00
sg437
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p455
sg66
(dp456
g1
(lp457
g2
ag71
aS'@@polrep'
p458
asg433
(lp459
I01
aI00
aS'@@master_reqseq'
p460
asg14
(lp461
(lp462
I0
aI1
aI2
aI3
aI4
aa(lp463
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp464
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp465
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p466
asg435
(lp467
I01
aI00
aS'@@insert_flagger'
p468
asg452
(lp469
S'd30jan2006'
p470
aS'@@last_changed'
p471
asg439
(lp472
I01
aI00
aS'@@insert_solver'
p473
asg437
(lp474
I01
aI00
aS'@@redun'
p475
asg5
(lp476
g6
aS'@@ms_name'
p477
asg442
(lp478
I01
aS'@@chain_solvers'
p479
asg444
(lp480
Na(lp481
I5
aI2
aa(lp482
I2
aI2
aa(lp483
I3
aI3
aaS'@@num_cells'
p484
asg7
(lp485
NaS'@@parmtable'
p486
asg446
(lp487
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p488
asg23
(lp489
I00
aS'@@uvplane_effect'
p490
assg102
S'2006-02-10 18:22'
p491
sS'HISTORY'
p492
(dp493
g253
S'2006-02-10 18:22: Derived from: MG_JEN_cps_GJones.inarg'
p494
sg116
S'2006-02-10 18:22: Derived from: MG_JEN_cps.inarg'
p495
ssg104
g4
sS'save_file'
p496
S'MG_JEN_cps_GJones_protected.inarg'
p497
sS'file_filter'
p498
S'MG_JEN_cps*.inarg'
p499
sg108
S''
p500
sg110
S'<specific>'
p501
sS'browse'
p502
(dp503
g5
S'*.MS'
p504
ssg112
I01
sg113
g491
sg114
(dp505
S'11'
p506
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1}"
p507
sS'10'
p508
S'.modify(): stripped off: _JEN_inarg_option'
p509
sg253
S'.modify( uvplane_effect ): False  ->  True'
p510
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p511
sg309
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p512
sg311
S".modify(): found ={'uvplane_effect': 1}"
p513
sg313
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p514
sg315
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p515
sS'7'
p516
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p517
sS'6'
p518
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p519
sS'9'
p520
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p521
sS'8'
p522
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p523
ssg118
(lp524
g26
ag3
ag439
ag435
ag452
ag5
ag446
ag14
ag7
ag1
ag23
ag442
ag433
ag437
ag444
aS'./MG_JEN_exec.stream_control()'
p525
aS'./MG_JEN_Cohset.make_spigots()'
p526
aS'./MG_JEN_Sixpack.newstar_source()'
p527
ag8
aS'./MG_JEN_Cohset.predict()'
p528
aS'./MG_JEN_Cohset.insert_solver()'
p529
aS'./MG_JEN_Cohset.make_sinks()'
p530
assg530
(dp531
S'fullDomainMux'
p532
I01
sS'output_col'
p533
S'PREDICT'
p534
sS'visu'
p535
I01
sS'flag'
p536
I00
sg26
(dp537
g104
S'MG_JEN_Cohset::make_sinks()'
p538
sg28
g530
sg50
(dp539
g536
I147
sg535
I146
sg532
I148
sg533
I144
sS'visu_array_config'
p540
I145
ssg106
S'MG_JEN_Cohsetmake_sinks'
p541
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p542
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p543
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p544
sg108
S'make_sinks'
p545
sg66
(dp546
g536
(lp547
I01
aI00
aS'@@flag'
p548
asg540
(lp549
I01
aI00
aS'@@visu_array_config'
p550
asg533
(lp551
g534
aS'RESIDUALS'
p552
aS'DATA'
p553
aS'@@output_col'
p554
asg532
(lp555
I01
aI00
aS'@@fullDomainMux'
p556
asg535
(lp557
I01
aI00
aS'@@visu'
p558
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-10 18:22'
p559
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p560
sg48
S'MG_JEN_Cohset'
p561
sg62
(dp562
g536
I00
sg540
I00
sg532
I00
sg535
I00
ssg112
I00
sg102
g560
sg118
(lp563
g26
ag533
ag540
ag535
ag536
ag532
asg29
(dp564
g536
S'if True, insert a flagger for the output uv-data'
p565
sg540
S'if True, visualise the array config (from MS)'
p566
sg533
S'name of the logical (VisTile) output column'
p567
sg532
S'if True, attach an extra VisDataMux'
p568
sg535
S'if True, visualise the output uv-data'
p569
sssg540
I01
ssg446
I10
sg526
(dp570
S'MS_corr_index'
p571
(lp572
I0
aI1
aI2
aI3
asg536
I00
sg26
(dp573
g104
S'MG_JEN_Cohset::make_spigots()'
p574
sg28
g526
sg50
(dp575
g536
I25
sg571
I23
sg535
I24
ssg52
(dp576
S'input_col'
p577
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p578
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p579
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p580
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p581
sg108
S'make_spigots'
p582
sg66
(dp583
g536
(lp584
I01
aI00
aS'@@flag'
p585
asg571
(lp586
g572
a(lp587
I0
aI-1
aI-1
aI1
aa(lp588
I0
aI-1
aI-1
aI3
aaS'@@'
p589
aS'@@MS_corr_index'
p590
asg577
(lp591
g553
ag534
ag552
aS'@@input_col'
p592
asg535
(lp593
I01
aI00
aS'@@visu'
p594
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-10 18:22'
p595
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p596
sg48
S'MG_JEN_Cohset'
p597
sg62
(dp598
g536
I00
sg535
I00
ssg112
I00
sg102
g596
sg118
(lp599
g26
ag577
ag571
ag535
ag536
asg29
(dp600
g536
S'if True, insert a flagger for the input uv-data'
p601
sg571
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p602
sg577
S'name of the logical (VisTile) input column'
p603
sg535
S'if True, visualise the input uv-data'
p604
sssg577
g553
sg535
I01
ssg528
(dp605
g1
S'@@polrep'
p606
sg26
(dp607
g104
S'MG_JEN_Cohset::predict()'
p608
sg28
g528
sg50
(dp609
sg52
(dp610
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p611
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p612
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p613
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p614
sg108
S'predict'
p615
sg66
(dp616
g1
(lp617
g2
ag71
ag606
asg14
(lp618
(lp619
I0
aI1
aI2
aI3
aI4
aa(lp620
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp621
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp622
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag300
aS'@@stations'
p623
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-10 18:22'
p624
sg101
Nsg56
g270
sg113
S'2006-02-10 18:22'
p625
sg48
S'MG_JEN_Cohset'
p626
sg58
(dp627
g1
I00
sg14
I00
ssg112
I00
sg102
g625
sg118
(lp628
g26
ag14
ag1
asg29
(dp629
g1
g262
sg14
g265
sssg14
g623
ssg435
I00
sg452
g470
sg23
I01
sg444
Nsg527
(dp630
S'f0'
p631
F1000000.0
sS'major'
p632
F0.0
sg12
I00
sS'shape'
p633
S'point'
p634
sg7
NsS'Upct'
p635
NsS'I0'
p636
F1.0
sS'Vpct'
p637
NsS'dDec'
p638
F0.0
sS'pa'
p639
F0.0
sg26
(dp640
g28
g527
sg29
(dp641
g631
S'reference freq (Hz): I=I0 @ f=f0'
p642
sg632
S'major axis (arcsec)'
p643
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p644
sg636
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p645
sg639
S'position angle (rad)'
p646
sS'SI'
p647
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p648
sS'Qpct'
p649
S'Stokes Q (percentage of I)'
p650
sS'punit'
p651
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p652
sg638
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p653
sg633
S'source shape'
p654
sg7
S'name of the MeqParm table (AIPS++)'
p655
sS'fsr_trace'
p656
S'If True, attach to forest state record'
p657
sS'RA0'
p658
S'If RA0 is a node, RA0+dRA overrides RA'
p659
sS'dRA'
p660
S'RA offset (arcsec): RA = RA0 + dRA'
p661
sS'RM'
p662
S'Intrinsic Rotation Measure (rad/m2)'
p663
sg635
S'Stokes U (percentage of I)'
p664
sS'Dec'
p665
S'Declination (rad, J2000)'
p666
sS'Dec0'
p667
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p668
sg637
S'Stokes V (percentage of I)'
p669
sS'minor'
p670
S'minor axis (arcsec)'
p671
sS'RA'
p672
S'Right Ascension (rad, J2000)'
p673
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p674
sg50
(dp675
g665
I38
sg636
I30
sg649
I31
sg637
I33
sg647
I35
sg7
I28
sg672
I37
sg662
I34
sg635
I32
sg651
I26
ssg52
(dp676
g631
I01
sg632
I01
sg12
I01
sS'name'
p677
I01
sg656
I01
sg651
I00
sg638
I01
sg633
I01
sg639
I01
sg658
I01
sg660
I01
sg667
I01
sg670
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p678
sg56
S'10feb2006'
p679
sg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p680
sg62
(dp681
g12
I00
sg656
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p682
sg66
(dp683
g631
(lp684
F1000000.0
aS'@@f0'
p685
asg632
(lp686
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p687
asg12
(lp688
I01
aI00
aS'@@unsolvable'
p689
asg633
(lp690
g634
aS'ell.gauss'
p691
aS'@@shape'
p692
asg7
(lp693
NaS'@@parmtable'
p694
asg635
(lp695
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p696
asg636
(lp697
F1.0
aF10.0
aS'@@I0'
p698
asg637
(lp699
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p700
asg638
(lp701
F0.0
aS'@@dDec'
p702
asg639
(lp703
F0.0
aF1.0
aF-0.5
aS'@@pa'
p704
asg672
(lp705
F0.0
aF0.5
aF1.0
aS'@@RA'
p706
asg660
(lp707
F0.0
aS'@@dRA'
p708
asg662
(lp709
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p710
asg667
(lp711
NaS'@@Dec0'
p712
asg670
(lp713
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p714
asg649
(lp715
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p716
asg651
(lp717
S'unpol'
p718
aS'unpol2'
p719
aS'unpol10'
p720
aS'QUV'
p721
aS'QU'
p722
aS'Qonly'
p723
aS'Uonly'
p724
aS'Vonly'
p725
aS'3c147'
p726
aS'3c286'
p727
aS'3c48'
p728
aS'3c295'
p729
aS'RMtest'
p730
aS'SItest'
p731
aS'@@punit'
p732
asg658
(lp733
NaS'@@RA0'
p734
asg665
(lp735
F0.5
aF1.0
aS'@@Dec'
p736
asg677
(lp737
NaS'@@name'
p738
asg656
(lp739
I01
aI00
aS'@@fsr_trace'
p740
asg647
(lp741
NaF-0.69999999999999996
a(lp742
F0.44700000000000001
aF-0.184
aaS'@@SI'
p743
assg101
Nsg102
S'2006-02-10 18:22'
p744
sg104
S'MG_JEN_Sixpack::newstar_source()'
p745
sg106
S'MG_JEN_Sixpacknewstar_source'
p746
sg108
S'newstar_source'
p747
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-10 18:22'
p748
sS'callback'
p749
(dp750
g651
I01
ssg112
I00
sg113
g744
sg118
(lp751
g26
ag651
ag677
ag7
ag12
ag636
ag649
ag635
ag637
ag662
ag647
ag631
ag672
ag665
ag656
ag633
ag632
ag670
ag639
ag658
ag667
ag660
ag638
assg660
F0.0
sg662
Nsg667
Nsg670
F0.0
sg672
F0.0
sg649
Nsg651
g718
sg658
Nsg665
F1.0
sg677
Nsg656
I01
sg647
Nssg433
I00
sg14
g462
sg525
(dp752
S'channel_start_index'
p753
I10
sS'data_column_name'
p754
g553
sS'predict_column'
p755
S'CORRECTED_DATA'
p756
sg5
S'@@ms_name'
p757
sg26
(dp758
g28
g525
sg29
(dp759
g753
S'(inputrec.sel) index of first selected freq channel'
p760
sg754
S'(inputrec) MS input column'
p761
sg755
S'MS output column to be associated with the VisTile predict-column'
p762
sg5
g441
sg446
g447
sS'channel_increment'
p763
S'(inputrec.sel) take every nth channel (1=all)'
p764
sS'channel_end_index'
p765
S'(inputrec.sel) index of last selected freq channel'
p766
sS'write_flags'
p767
S'(outputrec) if True, write flags to MS'
p768
ssg46
g47
sg48
S'MG_JEN_exec'
p769
sg50
(dp770
g753
I17
sg754
I16
sg755
I21
sg767
I20
sg765
I18
sg763
I19
ssg52
(dp771
g5
I01
sg446
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p772
sg56
S'20jan2006'
p773
sg58
(dp774
g5
I00
sg446
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p775
sg62
(dp776
g767
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p777
sg66
(dp778
g753
(lp779
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p780
asg754
(lp781
g553
ag756
aS'@@data_column_name'
p782
asg755
(lp783
g553
ag756
aS'MODEL_DATA'
p784
aS'@@predict_column'
p785
asg5
(lp786
g6
ag757
asg446
(lp787
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p788
asg763
(lp789
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p790
asg765
(lp791
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p792
asg767
(lp793
I01
aI00
aS'@@write_flags'
p794
assg101
Nsg102
S'2006-02-10 18:22'
p795
sg104
S'MG_JEN_exec::stream_control()'
p796
sg106
S'MG_JEN_execstream_control'
p797
sg108
S'stream_control'
p798
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-10 18:22'
p799
sg502
(dp800
g5
g504
ssg112
I00
sg113
g795
sg118
(lp801
g26
ag5
ag446
ag754
ag753
ag765
ag763
ag767
ag755
assg446
g788
sg763
I1
sg765
I50
sg767
I00
ssg437
I00
sg439
I01
sg442
I01
sg529
(dp802
S'correct_after'
p803
I01
sg433
S'@@master_reqseq'
p804
sS'condeq_unop'
p805
Nsg535
I01
sg437
S'@@redun'
p806
sS'solver_subtree'
p807
NsS'subtract_after'
p808
I00
sg442
S'@@chain_solvers'
p809
sg26
(dp810
g28
g529
sg29
(dp811
g803
S'if True, correct measured with predicted.Joneset'
p812
sg433
g434
sg805
S'Optional unary operation on Condeq inputs'
p813
sg535
S'if True, include full visualisation'
p814
sg437
g438
sg807
S'solver subtree qualifier(s)'
p815
sg808
S'if True, subtract predicted from measured'
p816
sg442
g443
sg444
g445
ssg46
g47
sg48
S'MG_JEN_Cohset'
p817
sg50
(dp818
g808
I130
sg803
I131
sg805
I128
sg535
I129
ssg52
(dp819
g807
I01
sg444
I01
sg442
I01
sg437
I01
sg433
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p820
sg56
g270
sg58
(dp821
g444
I00
sg442
I00
sg437
I00
sg433
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p822
sg62
(dp823
g808
I00
sg437
I00
sg803
I00
sg433
I00
sg535
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p824
sg66
(dp825
g803
(lp826
I01
aI00
aS'@@correct_after'
p827
asg433
(lp828
I01
aI00
ag804
asg805
(lp829
NaS'Abs'
p830
aS'Arg'
p831
aS'@@condeq_unop'
p832
asg535
(lp833
I01
aI00
aS'@@visu'
p834
asg437
(lp835
I01
aI00
ag806
asg807
(lp836
NaS'@@solver_subtree'
p837
asg808
(lp838
I01
aI00
aS'@@subtract_after'
p839
asg442
(lp840
I01
ag809
asg444
(lp841
Na(lp842
I5
aI2
aa(lp843
I2
aI2
aa(lp844
I3
aI3
aaS'@@num_cells'
p845
assg101
Nsg102
S'2006-02-10 18:22'
p846
sg104
S'MG_JEN_Cohset::insert_solver()'
p847
sg106
S'MG_JEN_Cohsetinsert_solver'
p848
sg108
S'insert_solver'
p849
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-10 18:22'
p850
sg112
I00
sg113
g846
sg114
(dp851
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p852
ssg118
(lp853
g26
ag807
ag437
ag444
ag442
ag433
ag805
ag535
ag808
ag803
aS'./MG_JEN_Cohset.solver_subtree()'
p854
assg444
g845
sg854
(dp855
S'rmin'
p856
Nsg535
I01
sS'epsilon'
p857
F0.01
sS'rmax'
p858
NsS'usesvd'
p859
I01
sS'debug_level'
p860
I10
sS'solvegroup'
p861
(lp862
g280
asg26
(dp863
g28
g854
sg29
(dp864
g856
S'if specified, only use baselines>=rmin'
p865
sg535
S'if True, include visualisation'
p866
sg857
S'iteration control criterion'
p867
sg858
S'if specified, only use baselines<=rmax'
p868
sg859
S'if True, use Singular Value Decomposition (SVD)'
p869
sg860
S'solver debug_level'
p870
sg861
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p871
sg444
g445
sS'history'
p872
S'if True, include history collection of metrics'
p873
sS'num_iter'
p874
S'max number of iterations'
p875
sS'condition'
p876
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p877
sS'colin_factor'
p878
S'colinearity factor'
p879
ssg46
g47
sg48
S'MG_JEN_Cohset'
p880
sg50
(dp881
g856
I134
sg535
I142
sg857
I138
sg858
I135
sg859
I140
sg861
I132
sg444
I136
sg872
I143
sg874
I137
sg876
I133
sg878
I139
ssg52
(dp882
g860
I01
sg444
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p883
sg56
S'20dec2005'
p884
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p885
sg62
(dp886
g859
I00
sg872
I00
sg535
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p887
sg66
(dp888
g856
(lp889
NaI100
aI200
aI500
aS'@@rmin'
p890
asg535
(lp891
I01
aI00
aS'@@visu'
p892
asg857
(lp893
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p894
asg858
(lp895
NaI500
aI1000
aI2000
aS'@@rmax'
p896
asg859
(lp897
I01
aI00
aS'@@usesvd'
p898
asg860
(lp899
I10
aS'@@debug_level'
p900
asg861
(lp901
(lp902
a(lp903
g280
aa(lp904
S'Ggain'
p905
aa(lp906
S'Gphase'
p907
aa(lp908
S'Gpol1'
p909
aa(lp910
S'Gpol2'
p911
aa(lp912
g280
aS'stokesI'
p913
aa(lp914
g913
aa(lp915
S'stokesIQU'
p916
aa(lp917
S'stokesIQUV'
p918
aa(lp919
g280
ag288
aa(lp920
g288
aa(lp921
S'dang'
p922
aa(lp923
S'dell'
p924
aa(lp925
g280
ag288
ag284
aa(lp926
g284
aa(lp927
g280
ag282
aa(lp928
g282
aa(lp929
S'Breal'
p930
aa(lp931
S'Bimag'
p932
aa(lp933
S'Bpol1'
p934
aa(lp935
S'Bpol2'
p936
aaS'@@solvegroup'
p937
asg444
(lp938
Na(lp939
I5
aI2
aa(lp940
I2
aI2
aa(lp941
I3
aI3
aaS'@@num_cells'
p942
asg872
(lp943
I01
aI00
aS'@@history'
p944
asg874
(lp945
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p946
asg876
(lp947
NaS'Gphase_X_sum=0.0'
p948
aS'Gphase_Y_sum=0.0'
p949
a(lp950
g948
ag949
aa(lp951
S'Gphase_X_first=0.0'
p952
aS'Gphase_Y_first=0.0'
p953
aa(lp954
S'Gphase_X_last=0.0'
p955
aS'Gphase_Y_last=0.0'
p956
aaS'dang_sum=0.0'
p957
a(lp958
S'Bimag_X_sum=0.0'
p959
aS'Bimag_Y_sum=0.0'
p960
aa(lp961
S'Breal_X_product=1.0'
p962
aS'Breal_Y_product=1.0'
p963
aaS'@@condition'
p964
asg878
(lp965
F1e-08
aF0.0
aS'@@colin_factor'
p966
assg101
Nsg102
S'2006-02-10 18:22'
p967
sg104
S'MG_JEN_Cohset::solver_subtree()'
p968
sg106
S'MG_JEN_Cohsetsolver_subtree'
p969
sg108
S'solver_subtree'
p970
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-10 18:22'
p971
sg112
I00
sg113
g967
sg114
(dp972
g253
S'.modify( num_iter ): 20  ->  5'
p973
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p974
sg311
S".modify( solvegroup ): []  ->  ['GJones']"
p975
ssg118
(lp976
g26
ag861
ag876
ag856
ag858
ag444
ag874
ag857
ag878
ag859
ag860
ag535
ag872
assg444
Nsg872
I01
sg874
I5
sg876
Nsg878
F1e-08
sss.