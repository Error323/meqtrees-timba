(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'reset_funklet'
p7
I01
sg1
S'@@polrep'
p8
sS'color'
p9
S'red'
p10
sS'subtile_size_Bimag'
p11
NsS'subtile_size_Breal'
p12
NsS'auto_save'
p13
I01
sS'size'
p14
I10
sS'style'
p15
S'circle'
p16
sS'fdeg_Breal'
p17
I5
sS'condeq_corrs'
p18
S'*'
p19
sS'funklet_shape'
p20
NsS'_JEN_inarg_CTRL_record:'
p21
(dp22
S'localscope'
p23
g5
sS'help'
p24
(dp25
g7
S'if True, do NOT use any MeqParm table values when solvable'
p26
sg1
S'polarisation representation'
p27
sg9
S'plot_color'
p28
sg11
S'sub-tile size (None=entire tile)'
p29
sg12
g29
sg13
S'if True, save the result of every iteration (slow!)'
p30
sg14
S'size of plotted symbol'
p31
sg15
S'plot_style'
p32
sg17
S'degree of freq polynomial'
p33
sg18
S'correlations to be used for solving'
p34
sg20
S'shape [time,freq] of default funklet'
p35
sS'tdeg_Bimag'
p36
S'degree of time polynomial'
p37
sS'@Jsequence'
p38
S'list membership indication (used in JEN_inargGui)'
p39
sS'c00_default'
p40
S'default value of c[0,0] coefficient'
p41
sS'fdeg_Bimag'
p42
g33
sS'uvplane_effect'
p43
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p44
sS'stations'
p45
S'the (subset of) stations to be used'
p46
sS'tfdeg'
p47
S'(time,freq) polynomial degree'
p48
sS'tdeg_Breal'
p49
g37
sS'use_previous'
p50
S'if True, start with the previous solution'
p51
sS'subtile_size'
p52
S'size (time-slots) of a domain sub-tile'
p53
sS'parmtable'
p54
S'name of the MeqParm table to be used'
p55
ssS'target_dir'
p56
S'.'
p57
sS'target_module'
p58
S'MG_JEN_Joneset'
p59
sS'JEN_inargGUI_ident'
p60
(dp61
g7
I118
sg50
I116
sg17
I112
sg11
I115
sg49
I110
sg42
I113
sg12
I114
sg36
I111
sg13
I117
ssS'hide'
p62
(dp63
g15
I01
sg1
I01
sg40
I01
sg45
I01
sg9
I01
sg52
I01
sg18
I01
sg43
I01
sg20
I01
sg54
I01
sg47
I01
sg14
I01
sg38
I01
ssS'version'
p64
S'16dec2005'
p65
sS'mutable'
p66
(dp67
g43
I00
sg54
I00
sg1
I00
sg45
I00
ssS'description'
p68
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p69
sS'editable'
p70
(dp71
g7
I00
sg13
I00
sg50
I00
ssS'oneliner'
p72
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-14 13:14'
p73
sS'choice'
p74
(dp75
g7
(lp76
I01
aI00
aS'@@reset_funklet'
p77
asg1
(lp78
g2
aS'circular'
p79
ag8
asg9
(lp80
g10
aS'@@color'
p81
asg11
(lp82
S'@subtile_size_Breal'
p83
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p84
asg12
(lp85
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p86
asg13
(lp87
I01
aI00
aS'@@auto_save'
p88
asg14
(lp89
I10
aS'@@size'
p90
asg15
(lp91
g16
aS'@@style'
p92
asg17
(lp93
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p94
asg18
(lp95
g19
aS'@@condeq_corrs'
p96
asg20
(lp97
NaS'@@funklet_shape'
p98
asg36
(lp99
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p100
aS'@@tdeg_Bimag'
p101
asg38
(lp102
S'BJones'
p103
aS'@@@Jsequence'
p104
asg40
(lp105
F1.0
aS'@@c00_default'
p106
asg42
(lp107
I3
aI4
aI5
aI6
aS'@fdeg_Breal'
p108
aS'@@fdeg_Bimag'
p109
asg43
(lp110
I00
aS'@@uvplane_effect'
p111
asg45
(lp112
(lp113
I0
aI1
aI2
aI3
aI4
aa(lp114
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp115
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp116
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p117
aS'@@stations'
p118
asg47
(lp119
NaS'@@tfdeg'
p120
asg49
(lp121
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p122
asg50
(lp123
I01
aI00
aS'@@use_previous'
p124
asg52
(lp125
NaS'@@subtile_size'
p126
asg54
(lp127
NaS'test'
p128
aS'@@parmtable'
p129
assS'qual'
p130
NsS'last_edited'
p131
S'2006-03-14 13:14'
p132
sS'target_definition'
p133
S'MG_JEN_Joneset::BJones()'
p134
sS'inarg_specific'
p135
S'** Specific description of inarg record for: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-14 13:14'
p136
sS'barescope'
p137
S'MG_JEN_JonesetBJones'
p138
sS'target_function'
p139
S'BJones'
p140
sS'protected'
p141
I00
sS'datetime_defined'
p142
g132
sS'MESSAGE'
p143
(dp144
S'1'
p145
S'.modify( tdeg_Bimag ): @tdeg_Breal  ->  0'
p146
sS'0'
p147
S'.modify( subtile_size_Bimag ): @subtile_size_Breal  ->  None'
p148
ssS'order'
p149
(lp150
g21
ag45
ag1
ag38
ag54
ag43
ag49
ag36
ag17
ag42
ag12
ag11
ag50
ag13
ag7
ag9
ag15
ag14
ag40
ag47
ag20
ag52
ag18
assg36
I0
sg38
g103
sg40
F1.0
sg42
g108
sg43
g111
sg45
g118
sg47
Nsg49
I0
sg50
I01
sg52
Nsg54
g129
ssg1
S'@@polrep'
p151
sg45
S'@@stations'
p152
sS'./MG_JEN_Joneset.DJones_WSRT()'
p153
(dp154
g7
I01
sg1
S'@@polrep'
p155
sg9
g10
sS'fdeg_Dell'
p156
S'@fdeg_Dang'
p157
sS'coupled_XY_Dell'
p158
I01
sg54
S'@@parmtable'
p159
sS'subtile_size_Dang'
p160
Nsg13
I01
sg14
I10
sg15
g16
sg18
g19
sg20
Nsg21
(dp161
g23
g153
sg24
(dp162
g7
g26
sg1
g27
sg9
g28
sg156
S'degree of freq polynomial'
p163
sg158
S'if True, XDell = -YDell per station'
p164
sg47
g48
sg160
S'sub-tile size (None=entire tile)'
p165
sg13
g30
sg14
g31
sg15
g32
sg18
g34
sg20
g35
sS'subtile_size_Dell'
p166
g165
sg38
g39
sS'fdeg_Dang'
p167
g163
sg40
g41
sg43
g44
sS'tdeg_Dell'
p168
S'degree of time polynomial'
p169
sS'coupled_XY_Dang'
p170
S'if True, XDang = YDang per station'
p171
sS'tdeg_Dang'
p172
g169
sg45
g46
sg50
g51
sg52
g53
sg54
g55
ssg56
g57
sg58
S'MG_JEN_Joneset'
p173
sg60
(dp174
g167
I139
sg7
I145
sg156
I140
sg158
I134
sg50
I143
sg13
I144
sg168
I138
sg170
I133
sg160
I141
sg166
I142
sg172
I137
ssg62
(dp175
g15
I01
sg1
I01
sg40
I01
sg45
I01
sg9
I01
sg52
I01
sg18
I01
sg43
I01
sg20
I01
sg54
I01
sg47
I01
sg14
I01
sg38
I01
ssg64
g65
sg66
(dp176
g43
I00
sg54
I00
sg1
I00
sg45
I00
ssg68
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p177
sg70
(dp178
g7
I00
sg170
I00
sg158
I00
sg13
I00
sg50
I00
ssg72
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-14 13:14'
p179
sg74
(dp180
g7
(lp181
I01
aI00
aS'@@reset_funklet'
p182
asg1
(lp183
g2
ag79
ag155
asg9
(lp184
g10
aS'@@color'
p185
asg156
(lp186
I0
aI1
aI2
aI3
ag157
aS'@@fdeg_Dell'
p187
asg158
(lp188
I01
aI00
aS'@@coupled_XY_Dell'
p189
asg47
(lp190
NaS'@@tfdeg'
p191
asg160
(lp192
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p193
asg13
(lp194
I01
aI00
aS'@@auto_save'
p195
asg14
(lp196
I10
aS'@@size'
p197
asg15
(lp198
g16
aS'@@style'
p199
asg18
(lp200
g19
aS'@@condeq_corrs'
p201
asg20
(lp202
NaS'@@funklet_shape'
p203
asg166
(lp204
S'@subtile_size_Dang'
p205
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p206
asg38
(lp207
S'DJones_WSRT'
p208
aS'@@@Jsequence'
p209
asg167
(lp210
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p211
asg40
(lp212
F1.0
aS'@@c00_default'
p213
asg43
(lp214
I00
aS'@@uvplane_effect'
p215
asg168
(lp216
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p217
aS'@@tdeg_Dell'
p218
asg170
(lp219
I01
aI00
aS'@@coupled_XY_Dang'
p220
asg172
(lp221
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p222
asg45
(lp223
(lp224
I0
aI1
aI2
aI3
aI4
aa(lp225
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp226
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp227
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag117
aS'@@stations'
p228
asg50
(lp229
I01
aI00
aS'@@use_previous'
p230
asg52
(lp231
NaS'@@subtile_size'
p232
asg54
(lp233
Nag128
ag159
assg130
Nsg131
S'2006-03-14 13:14'
p234
sg133
S'MG_JEN_Joneset::DJones_WSRT()'
p235
sg135
S'** Specific description of inarg record for: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-14 13:14'
p236
sg137
S'MG_JEN_JonesetDJones_WSRT'
p237
sg139
S'DJones_WSRT'
p238
sg141
I00
sg142
g234
sg143
(dp239
g145
S'.modify( tdeg_Dell ): @tdeg_Dang  ->  0'
p240
sg147
S'.modify( subtile_size_Dell ): @subtile_size_Dang  ->  None'
p241
ssg149
(lp242
g21
ag45
ag1
ag38
ag170
ag158
ag54
ag43
ag172
ag168
ag167
ag156
ag160
ag166
ag50
ag13
ag7
ag9
ag15
ag14
ag40
ag47
ag20
ag52
ag18
assg166
Nsg38
g208
sg167
I0
sg40
F1.0
sg43
g215
sg168
I0
sg170
I01
sg172
I0
sg45
g228
sg50
I01
sg52
Nsg47
NssS'./MG_JEN_Joneset.FJones()'
p243
(dp244
g7
I01
sg15
g16
sg1
S'@@polrep'
p245
sg40
F1.0
sg45
S'@@stations'
p246
sg9
g10
sS'tdeg_RM'
p247
I0
sg52
Nsg18
g19
sg50
I01
sS'fdeg_RM'
p248
I2
sg20
Nsg54
S'@@parmtable'
p249
sg21
(dp250
g23
g243
sg24
(dp251
g7
g26
sg15
g32
sg1
g27
sg40
g41
sg247
S'degree of time polynomial'
p252
sg9
g28
sg45
g46
sg52
g53
sg18
g34
sg50
g51
sg248
S'degree of freq polynomial'
p253
sg20
g35
sg54
g55
sS'subtile_size_RM'
p254
S'sub-tile size (None=entire tile)'
p255
sg47
g48
sg14
g31
sg43
g44
sg13
g30
sg38
g39
ssg56
g57
sg58
S'MG_JEN_Joneset'
p256
sg60
(dp257
g7
I96
sg247
I91
sg50
I94
sg248
I92
sg254
I93
sg13
I95
ssg62
(dp258
g15
I01
sg1
I01
sg40
I01
sg45
I01
sg9
I01
sg52
I01
sg18
I01
sg43
I01
sg20
I01
sg54
I01
sg47
I01
sg14
I01
sg38
I01
ssg64
g65
sg66
(dp259
g43
I00
sg54
I00
sg1
I00
sg45
I00
ssg68
S'defines diagonal FJones Faraday rotation matrices'
p260
sg70
(dp261
g7
I00
sg13
I00
sg50
I00
ssg72
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-14 13:14'
p262
sg74
(dp263
g7
(lp264
I01
aI00
aS'@@reset_funklet'
p265
asg15
(lp266
g16
aS'@@style'
p267
asg1
(lp268
g2
ag79
ag245
asg40
(lp269
F1.0
aS'@@c00_default'
p270
asg247
(lp271
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p272
asg9
(lp273
g10
aS'@@color'
p274
asg45
(lp275
(lp276
I0
aI1
aI2
aI3
aI4
aa(lp277
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp278
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp279
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag117
ag246
asg52
(lp280
NaS'@@subtile_size'
p281
asg18
(lp282
g19
aS'@@condeq_corrs'
p283
asg50
(lp284
I01
aI00
aS'@@use_previous'
p285
asg248
(lp286
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p287
asg20
(lp288
NaS'@@funklet_shape'
p289
asg54
(lp290
Nag128
ag249
asg254
(lp291
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p292
asg47
(lp293
NaS'@@tfdeg'
p294
asg14
(lp295
I10
aS'@@size'
p296
asg43
(lp297
I00
aS'@@uvplane_effect'
p298
asg13
(lp299
I01
aI00
aS'@@auto_save'
p300
asg38
(lp301
S'FJones'
p302
aS'@@@Jsequence'
p303
assg130
Nsg131
S'2006-03-14 13:14'
p304
sg133
S'MG_JEN_Joneset::FJones()'
p305
sg135
S'** Specific description of inarg record for: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-14 13:14'
p306
sg137
S'MG_JEN_JonesetFJones'
p307
sg139
S'FJones'
p308
sg141
I00
sg142
g304
sg143
(dp309
g147
S'.modify( subtile_size_RM ): 1  ->  None'
p310
ssg149
(lp311
g21
ag45
ag1
ag38
ag54
ag43
ag247
ag248
ag254
ag50
ag13
ag7
ag9
ag15
ag14
ag40
ag47
ag20
ag52
ag18
assg254
Nsg47
Nsg14
I10
sg43
g298
sg13
I01
sg38
g302
ssg43
S'@@uvplane_effect'
p312
sg54
S'@@parmtable'
p313
sg21
(dp314
g133
S'MG_JEN_Cohset::Jones()'
p315
sg23
g3
sg60
(dp316
S'Jsequence'
p317
I62
ssg62
(dp318
g43
I01
sg45
I01
sg54
I01
sg1
I01
sg38
I01
ssg137
S'MG_JEN_CohsetJones'
p319
sg56
g57
sg68
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p320
sg72
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-14 13:14'
p321
sg139
S'Jones'
p322
sg74
(dp323
g1
(lp324
g2
ag79
ag151
asg45
(lp325
(lp326
I0
aI1
aI2
aI3
aI4
aa(lp327
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp328
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp329
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag117
ag152
asg43
(lp330
I00
ag312
asg54
(lp331
Nag128
ag313
asg317
(lp332
(lp333
S'GJones'
p334
aa(lp335
g103
aa(lp336
g302
aa(lp337
S'KJones'
p338
aa(lp339
g208
aa(lp340
g334
ag208
aa(lp341
S'JJones'
p342
aa(lp343
aS'@@Jsequence'
p344
asg38
(lp345
NaS'@@@Jsequence'
p346
assg130
Nsg141
I00
sg142
S'2006-03-14 13:14'
p347
sg64
S'25dec2005'
p348
sg58
S'MG_JEN_Cohset'
p349
sg135
S'** Specific description of inarg record for: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-14 13:14'
p350
sg143
(dp351
g145
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p352
sg147
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p353
sS'3'
p354
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p355
sS'2'
p356
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p357
sS'5'
p358
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p359
sS'4'
p360
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p361
sS'6'
p362
S".modify( Jsequence ): []  ->  ['GJones']"
p363
ssg131
g347
sg66
(dp364
g43
I00
sg54
I00
sg1
I00
sg45
I00
ssg149
(lp365
g21
ag45
ag1
ag38
ag54
ag43
ag317
aS'./MG_JEN_Joneset.GJones()'
p366
ag243
ag5
aS'./MG_JEN_Joneset.KJones()'
p367
ag153
aS'./MG_JEN_Joneset.JJones()'
p368
asg24
(dp369
g1
g27
sg45
g46
sg43
g44
sg54
g55
sg317
S'sequence of Jones matrices to be used'
p370
sg38
g39
sssg367
(dp371
g38
g338
sg1
S'@@polrep'
p372
sg21
(dp373
g133
S'MG_JEN_Joneset::KJones()'
p374
sg23
g367
sg60
(dp375
sg62
(dp376
g38
I01
sg1
I01
sg45
I01
ssg68
S'defines diagonal KJones matrices for DFT Fourier kernel'
p377
sg56
g57
sg72
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-14 13:14'
p378
sg139
S'KJones'
p379
sg74
(dp380
g38
(lp381
g338
aS'@@@Jsequence'
p382
asg1
(lp383
g2
ag79
ag372
asg45
(lp384
(lp385
I0
aI1
aI2
aI3
aI4
aa(lp386
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp387
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp388
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag117
aS'@@stations'
p389
assg130
Nsg141
I00
sg142
S'2006-03-14 13:14'
p390
sg64
S'12dec2005'
p391
sg58
S'MG_JEN_Joneset'
p392
sg135
S'** Specific description of inarg record for: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-14 13:14'
p393
sg66
(dp394
g1
I00
sg45
I00
ssg131
g390
sg149
(lp395
g21
ag45
ag1
ag38
asg24
(dp396
g38
g39
sg1
g27
sg45
g46
ssg137
S'MG_JEN_JonesetKJones'
p397
ssg45
g389
ssg368
(dp398
g7
I01
sg1
S'@@polrep'
p399
sS'tdeg_Jreal'
p400
I0
sg9
g10
sS'all4_always'
p401
Nsg54
S'@@parmtable'
p402
sS'subtile_size_Jreal'
p403
Nsg13
I01
sg14
I10
sg15
g16
sS'tdeg_Jimag'
p404
I0
sg18
g19
sg20
Nsg21
(dp405
g23
g368
sg24
(dp406
g7
g26
sg1
g27
sg400
S'degree of time polynomial'
p407
sg9
g28
sg401
S'stations for which all 4 elements will always be solved for'
p408
sg54
g55
sg403
S'sub-tile size (None=entire tile)'
p409
sg13
g30
sg14
g31
sg15
g32
sg404
g407
sg18
g34
sg20
g35
sS'fdeg_Jreal'
p410
S'degree of freq polynomial'
p411
sg40
g41
sg43
g44
sS'fdeg_Jimag'
p412
g411
sS'subtile_size_Jimag'
p413
g409
sg45
g46
sS'diagonal_only'
p414
S'if True, solve for diagonal (11,22) elements only'
p415
sg50
g51
sg52
g53
sg47
g48
sg38
g39
ssg56
g57
sg58
S'MG_JEN_Joneset'
p416
sg60
(dp417
g7
I169
sg413
I166
sg404
I162
sg400
I161
sg414
I157
sg50
I167
sg401
I158
sg412
I164
sg403
I165
sg13
I168
sg410
I163
ssg62
(dp418
g15
I01
sg1
I01
sg40
I01
sg45
I01
sg9
I01
sg52
I01
sg18
I01
sg43
I01
sg20
I01
sg54
I01
sg47
I01
sg14
I01
sg38
I01
ssg64
S'14feb2006'
p419
sg66
(dp420
g43
I00
sg54
I00
sg1
I00
sg45
I00
ssg68
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p421
sg70
(dp422
g7
I00
sg414
I00
sg13
I00
sg50
I00
ssg72
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-14 13:14'
p423
sg74
(dp424
g7
(lp425
I01
aI00
aS'@@reset_funklet'
p426
asg1
(lp427
g2
ag79
ag399
asg400
(lp428
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p429
asg9
(lp430
g10
aS'@@color'
p431
asg401
(lp432
Na(lp433
I14
aaS'WSRT/WHAT'
p434
aS'@@all4_always'
p435
asg54
(lp436
Nag128
ag402
asg403
(lp437
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p438
asg13
(lp439
I01
aI00
aS'@@auto_save'
p440
asg14
(lp441
I10
aS'@@size'
p442
asg15
(lp443
g16
aS'@@style'
p444
asg404
(lp445
I0
aI1
aI2
aI3
aS'@tdeg_Jreal'
p446
aS'@@tdeg_Jimag'
p447
asg18
(lp448
g19
aS'@@condeq_corrs'
p449
asg20
(lp450
NaS'@@funklet_shape'
p451
asg410
(lp452
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p453
asg40
(lp454
F1.0
aS'@@c00_default'
p455
asg43
(lp456
I00
aS'@@uvplane_effect'
p457
asg412
(lp458
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p459
aS'@@fdeg_Jimag'
p460
asg413
(lp461
S'@subtile_size_Jreal'
p462
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p463
asg45
(lp464
(lp465
I0
aI1
aI2
aI3
aI4
aa(lp466
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp467
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp468
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag117
aS'@@stations'
p469
asg414
(lp470
I01
aI00
aS'@@diagonal_only'
p471
asg50
(lp472
I01
aI00
aS'@@use_previous'
p473
asg52
(lp474
NaS'@@subtile_size'
p475
asg47
(lp476
NaS'@@tfdeg'
p477
asg38
(lp478
g342
aS'@@@Jsequence'
p479
assg130
Nsg131
S'2006-03-14 13:14'
p480
sg133
S'MG_JEN_Joneset::JJones()'
p481
sg135
S'** Specific description of inarg record for: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-14 13:14'
p482
sg137
S'MG_JEN_JonesetJJones'
p483
sg139
S'JJones'
p484
sg141
I00
sg142
g480
sg143
(dp485
g145
S'.modify( tdeg_Jimag ): @tdeg_Jreal  ->  0'
p486
sg147
S'.modify( subtile_size_Jimag ): @subtile_size_Jreal  ->  None'
p487
ssg149
(lp488
g21
ag45
ag1
ag38
ag414
ag401
ag54
ag43
ag400
ag404
ag410
ag412
ag403
ag413
ag50
ag13
ag7
ag9
ag15
ag14
ag40
ag47
ag20
ag52
ag18
assg410
I0
sg40
F1.0
sg43
g457
sg412
g459
sg413
Nsg45
g469
sg414
I00
sg50
I01
sg52
Nsg47
Nsg38
g342
ssg366
(dp489
g7
I01
sg1
S'@@polrep'
p490
sS'fdeg_Ggain'
p491
I0
sg9
g10
sg54
S'@@parmtable'
p492
sg13
I01
sg14
I10
sg15
g16
sS'subtile_size_Ggain'
p493
Nsg18
g19
sg20
Nsg21
(dp494
g23
g366
sg24
(dp495
g7
g26
sg1
g27
sg491
S'degree of freq polynomial'
p496
sg9
g28
sg54
g55
sg13
g30
sg14
g31
sg15
g32
sg493
S'sub-tile size (None=entire tile)'
p497
sg18
g34
sg20
g35
sg38
g39
sg40
g41
sS'tdeg_Gphase'
p498
S'degree of time polynomial'
p499
sS'tdeg_Ggain'
p500
g499
sS'fdeg_Gphase'
p501
g496
sS'subtile_size_Gphase'
p502
g497
sS'Gpolar'
p503
S'obsolete, kept only for upward compatibility'
p504
sg43
g44
sg45
g46
sg50
g51
sg52
g53
sg47
g48
ssg56
g57
sg58
S'MG_JEN_Joneset'
p505
sg60
(dp506
g7
I77
sg491
I71
sg493
I73
sg498
I70
sg50
I75
sg500
I69
sg501
I72
sg502
I74
sg13
I76
ssg62
(dp507
g14
I01
sg15
I01
sg1
I01
sg40
I01
sg45
I01
sg9
I01
sg52
I01
sg18
I01
sg43
I01
sg20
I01
sg54
I01
sg47
I01
sg503
I01
sg38
I01
ssg64
S'15dec2005'
p508
sg66
(dp509
g43
I00
sg54
I00
sg1
I00
sg45
I00
ssg68
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p510
sg70
(dp511
g7
I00
sg503
I00
sg13
I00
sg50
I00
ssg72
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-14 13:14'
p512
sg74
(dp513
g7
(lp514
I01
aI00
aS'@@reset_funklet'
p515
asg1
(lp516
g2
ag79
ag490
asg491
(lp517
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p518
asg9
(lp519
g10
aS'@@color'
p520
asg54
(lp521
Nag128
ag492
asg13
(lp522
I01
aI00
aS'@@auto_save'
p523
asg14
(lp524
I10
aS'@@size'
p525
asg15
(lp526
g16
aS'@@style'
p527
asg493
(lp528
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p529
asg18
(lp530
g19
aS'@@condeq_corrs'
p531
asg20
(lp532
NaS'@@funklet_shape'
p533
asg38
(lp534
g334
aS'@@@Jsequence'
p535
asg40
(lp536
F1.0
aS'@@c00_default'
p537
asg498
(lp538
I0
aI1
aI2
aI3
aS'@tdeg_Ggain'
p539
aS'@@tdeg_Gphase'
p540
asg500
(lp541
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p542
asg501
(lp543
I0
aI1
aI2
aI3
aS'@fdeg_Ggain'
p544
aS'@@fdeg_Gphase'
p545
asg502
(lp546
S'@subtile_size_Ggain'
p547
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p548
asg503
(lp549
I01
aI00
aS'@@Gpolar'
p550
asg43
(lp551
I00
aS'@@uvplane_effect'
p552
asg45
(lp553
(lp554
I0
aI1
aI2
aI3
aI4
aa(lp555
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp556
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp557
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag117
aS'@@stations'
p558
asg50
(lp559
I01
aI00
aS'@@use_previous'
p560
asg52
(lp561
NaS'@@subtile_size'
p562
asg47
(lp563
NaS'@@tfdeg'
p564
assg130
Nsg131
S'2006-03-14 13:14'
p565
sg133
S'MG_JEN_Joneset::GJones()'
p566
sg135
S'** Specific description of inarg record for: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-14 13:14'
p567
sg137
S'MG_JEN_JonesetGJones'
p568
sg139
S'GJones'
p569
sg141
I00
sg142
g565
sg143
(dp570
g145
S'.modify( subtile_size_Gphase ): @subtile_size_Ggain  ->  None'
p571
sg147
S'.modify( subtile_size_Ggain ): 1  ->  None'
p572
sg356
S'.modify( tdeg_Gphase ): @tdeg_Ggain  ->  0'
p573
ssg149
(lp574
g21
ag45
ag1
ag38
ag503
ag54
ag43
ag500
ag498
ag491
ag501
ag493
ag502
ag50
ag13
ag7
ag9
ag15
ag14
ag40
ag47
ag20
ag52
ag18
assg38
g334
sg40
F1.0
sg498
I0
sg500
I0
sg501
g544
sg502
Nsg503
I01
sg43
g552
sg45
g558
sg50
I01
sg52
Nsg47
Nssg317
(lp575
g334
asg38
NssS'_JEN_inarg_separator_record:_1'
p576
(dp577
S'txt'
p578
S'operations on input uv-data'
p579
ssS'./MG_JEN_Cohset.predict()'
p580
(dp581
g45
S'@@stations'
p582
sg1
S'@@polrep'
p583
sg21
(dp584
g133
S'MG_JEN_Cohset::predict()'
p585
sg23
g580
sg60
(dp586
sg62
(dp587
g45
I01
sg1
I01
sg38
I01
ssg137
S'MG_JEN_Cohsetpredict'
p588
sg56
g57
sg68
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p589
sg72
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-14 13:14'
p590
sg139
S'predict'
p591
sg74
(dp592
g45
(lp593
(lp594
I0
aI1
aI2
aI3
aI4
aa(lp595
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp596
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp597
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag117
ag582
asg1
(lp598
g2
ag79
ag583
asg38
(lp599
NaS'@@@Jsequence'
p600
assg130
Nsg141
I00
sg142
S'2006-03-14 13:14'
p601
sg64
g348
sg58
S'MG_JEN_Cohset'
p602
sg135
S'** Specific description of inarg record for: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-03-14 13:14'
p603
sg66
(dp604
g1
I00
sg45
I00
ssg131
g601
sg149
(lp605
g21
ag45
ag1
ag38
asg24
(dp606
g45
g46
sg1
g27
sg38
g39
sssg38
NssS'script_name'
p607
S'MG_JEN_cps'
p608
sS'ms_name'
p609
S'D1.MS'
p610
sg54
Nsg21
(dp611
g23
S'./MG_JEN_cps.'
p612
sg24
(dp613
g1
g27
sS'master_reqseq'
p614
S'if True, use a master reqseq for solver(s)'
p615
sg45
g46
sS'insert_flagger'
p616
S'if True, insert a flagger'
p617
sS'redun'
p618
S'if True, redundant spacing calibration'
p619
sS'insert_solver'
p620
S'if True, insert a solver'
p621
sg609
S'name of the (AIPS++) Measurement Set'
p622
sS'chain_solvers'
p623
S'if True, chain the solvers (recommended)'
p624
sS'num_cells'
p625
S'if defined, ModRes argument [ntime,nfreq]'
p626
sg54
g55
sS'tile_size'
p627
S'(inputrec) size (in time-slots) of the input data-tile'
p628
sg43
g44
sg38
g39
ssS'reference'
p629
I00
sg56
g57
sg58
S'MG_JEN_cps'
p630
sg60
(dp631
g1
I7
sg45
I6
sg616
I2
sg618
I13
sg620
I1
sg609
I4
sg54
I9
sg607
I0
sg625
I14
sg627
I5
sg43
I10
ssg62
(dp632
g1
I00
sg614
I01
sg45
I00
sS'last_changed'
p633
I01
sg618
I00
sg43
I00
sg623
I01
sg625
I00
sg38
I01
ssS'browse'
p634
(dp635
g609
S'*.MS'
p636
ssg64
g508
sg68
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p637
sg70
(dp638
g633
I00
sg616
I00
sg614
I00
sg620
I00
sg618
I00
ssg72
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p639
sg74
(dp640
g1
(lp641
g2
ag79
aS'@@polrep'
p642
asg614
(lp643
I01
aI00
aS'@@master_reqseq'
p644
asg45
(lp645
(lp646
I0
aI1
aI2
aI3
aI4
aa(lp647
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp648
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp649
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag117
aS'@@stations'
p650
asg616
(lp651
I01
aI00
aS'@@insert_flagger'
p652
asg633
(lp653
S'd30jan2006'
p654
aS'@@last_changed'
p655
asg620
(lp656
I01
aI00
aS'@@insert_solver'
p657
asg618
(lp658
I01
aI00
aS'@@redun'
p659
asg609
(lp660
g610
aS'@@ms_name'
p661
asg623
(lp662
I01
aS'@@chain_solvers'
p663
asg625
(lp664
Na(lp665
I5
aI2
aa(lp666
I2
aI2
aa(lp667
I3
aI3
aaS'@@num_cells'
p668
asg54
(lp669
Nag128
aS'@@parmtable'
p670
asg627
(lp671
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p672
asg43
(lp673
I00
aS'@@uvplane_effect'
p674
asg38
(lp675
NaS'@@@Jsequence'
p676
assg131
S'2006-03-14 13:14'
p677
sS'HISTORY'
p678
(dp679
g145
S'2006-03-14 13:14: Derived from: MG_JEN_cps_GJones.inarg'
p680
sg147
S'2006-03-14 13:14: Derived from: MG_JEN_cps.inarg'
p681
ssg133
g608
sg135
S'Modify MG_JEN_cps inarg for GJones operation'
p682
sS'save_file'
p683
S'MG_JEN_cps_GJones_protected.inarg'
p684
sS'file_filter'
p685
S'MG_JEN_cps*.inarg'
p686
sg139
S''
p687
sg141
I01
sg142
g677
sg143
(dp688
S'11'
p689
S".modify():   ** OK ** (['solvegroup', 'Jsequence'])"
p690
sS'10'
p691
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p692
sS'13'
p693
S".modify():   ** OK ** (['tile_size', 'num_iter', 'epsilon'])"
p694
sS'12'
p695
S'.modify( tile_size ): 10  ->  1'
p696
sS'14'
p697
S".modify():   ** OK ** (['subtile_size_', 'tdeg_'])"
p698
sg145
S".modify():   ** OK ** (['uvplane_effect'])"
p699
sg147
S'.modify( uvplane_effect ): False  ->  True'
p700
sg354
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p701
sg356
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p702
sg358
S'** JEN_inarg.separator(): : insert a solver'
p703
sg360
S'** JEN_inarg.separator(): : operations on input uv-data'
p704
sS'7'
p705
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p706
sg362
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p707
sS'9'
p708
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p709
sS'8'
p710
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p711
ssg149
(lp712
g21
ag607
ag620
ag616
ag633
ag609
ag627
ag45
ag1
ag38
ag54
ag43
ag623
ag614
ag618
ag625
aS'./MG_JEN_exec.stream_control()'
p713
aS'./MG_JEN_Cohset.make_spigots()'
p714
ag576
aS'_JEN_inarg_separator_record:_2'
p715
aS'./MG_JEN_Sixpack.newstar_source()'
p716
ag3
ag580
aS'./MG_JEN_Cohset.insert_solver()'
p717
aS'./MG_JEN_Cohset.make_sinks()'
p718
assg718
(dp719
S'fullDomainMux'
p720
I01
sS'output_col'
p721
S'PREDICT'
p722
sS'visu'
p723
I01
sS'flag'
p724
I00
sg21
(dp725
g133
S'MG_JEN_Cohset::make_sinks()'
p726
sg23
g718
sg60
(dp727
g724
I209
sg723
I208
sg720
I210
sg721
I206
sS'visu_array_config'
p728
I207
ssg135
S'** Specific description of inarg record for: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-14 13:14'
p729
sg137
S'MG_JEN_Cohsetmake_sinks'
p730
sg56
g57
sg68
S'Make sink nodes in the given Cohset object'
p731
sg72
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-14 13:14'
p732
sg139
S'make_sinks'
p733
sg74
(dp734
g724
(lp735
I01
aI00
aS'@@flag'
p736
asg728
(lp737
I01
aI00
aS'@@visu_array_config'
p738
asg721
(lp739
g722
aS'RESIDUALS'
p740
aS'DATA'
p741
aS'@@output_col'
p742
asg720
(lp743
I01
aI00
aS'@@fullDomainMux'
p744
asg723
(lp745
I01
aI00
aS'@@visu'
p746
assg130
Nsg64
g348
sg142
S'2006-03-14 13:14'
p747
sg58
S'MG_JEN_Cohset'
p748
sg70
(dp749
g724
I00
sg728
I00
sg720
I00
sg723
I00
ssg141
I00
sg131
g747
sg149
(lp750
g21
ag721
ag728
ag723
ag724
ag720
asg24
(dp751
g724
S'if True, insert a flagger for the output uv-data'
p752
sg728
S'if True, visualise the array config (from MS)'
p753
sg721
S'name of the logical (VisTile) output column'
p754
sg720
S'if True, attach an extra VisDataMux'
p755
sg723
S'if True, visualise the output uv-data'
p756
sssg728
I01
ssg627
I1
sg714
(dp757
S'MS_corr_index'
p758
(lp759
I0
aI1
aI2
aI3
asg724
I00
sg21
(dp760
g133
S'MG_JEN_Cohset::make_spigots()'
p761
sg23
g714
sg60
(dp762
g724
I26
sg758
I24
sg723
I25
ssg62
(dp763
S'input_col'
p764
I01
ssg137
S'MG_JEN_Cohsetmake_spigots'
p765
sg56
g57
sg68
S'Make spigot nodes in the given Cohset object'
p766
sg72
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-14 13:14'
p767
sg139
S'make_spigots'
p768
sg74
(dp769
g724
(lp770
I01
aI00
aS'@@flag'
p771
asg758
(lp772
(lp773
I0
aI1
aI2
aI3
aa(lp774
I0
aI-1
aI-1
aI1
aa(lp775
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p776
asg764
(lp777
g741
ag722
ag740
aS'@@input_col'
p778
asg723
(lp779
I01
aI00
aS'@@visu'
p780
assg130
Nsg64
g348
sg142
S'2006-03-14 13:14'
p781
sg58
S'MG_JEN_Cohset'
p782
sg70
(dp783
g724
I00
sg723
I00
ssg135
S'** Specific description of inarg record for: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-14 13:14'
p784
sg141
I00
sg131
g781
sg149
(lp785
g21
ag764
ag758
ag723
ag724
asg24
(dp786
g724
S'if True, insert a flagger for the input uv-data'
p787
sg758
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p788
sg764
S'name of the logical (VisTile) input column'
p789
sg723
S'if True, visualise the input uv-data'
p790
sssg764
g741
sg723
I01
ssg38
Nsg616
I00
sg633
g654
sg43
I01
sg625
Nsg716
(dp791
S'f0'
p792
F1000000.0
sg7
I01
sS'major'
p793
F0.0
sS'unsolvable'
p794
I00
sg9
g10
sS'shape'
p795
S'point'
p796
sg54
NsS'Upct'
p797
Nsg13
I01
sg14
I10
sg15
g16
sS'I0'
p798
F1.0
sS'SI'
p799
Nsg18
g19
sS'Vpct'
p800
Nsg20
NsS'pa'
p801
F0.0
sS'RA'
p802
F4.3570000000000002
sS'RM'
p803
NsS'minor'
p804
F0.0
sg21
(dp805
g23
g716
sg24
(dp806
g792
S'reference freq (Hz): I=I0 @ f=f0'
p807
sg7
g26
sg793
S'major axis (arcsec)'
p808
sg794
S'if True, do NOT store solvegroup/parmgroup info'
p809
sg9
g28
sg795
S'source shape'
p810
sg54
S'name of the MeqParm table (AIPS++)'
p811
sg797
S'Stokes U (percentage of I)'
p812
sg13
g30
sg14
g31
sg15
g32
sg798
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p813
sg799
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p814
sg18
g34
sg800
S'Stokes V (percentage of I)'
p815
sg20
g35
sg801
S'position angle (rad)'
p816
sg802
S'Right Ascension (rad, J2000)'
p817
sg803
S'Intrinsic Rotation Measure (rad/m2)'
p818
sg804
S'minor axis (arcsec)'
p819
sS'from_LSM'
p820
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p821
sg40
g41
sS'Qpct'
p822
S'Stokes Q (percentage of I)'
p823
sS'punit'
p824
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p825
sS'Dec'
p826
S'Declination (rad, J2000)'
p827
sS'fsr_trace'
p828
S'If True, attach to forest state record'
p829
sg50
g51
sg52
g53
sg47
g48
ssg56
g57
sg58
S'MG_JEN_Sixpack'
p830
sg60
(dp831
g7
I48
sg50
I46
sg826
I40
sg820
I28
sg798
I32
sg822
I33
sg824
I27
sg799
I37
sg54
I30
sg802
I39
sg803
I36
sg797
I34
sg800
I35
sg13
I47
ssg62
(dp832
g792
I01
sg793
I01
sg794
I01
sg820
I00
sg40
I01
sg9
I01
sg52
I01
sS'name'
p833
I01
sg795
I01
sg828
I01
sg824
I00
sg20
I01
sg801
I01
sg18
I01
sg47
I01
sg15
I01
sg804
I01
sg14
I01
ssg634
(dp834
g820
S'*.lsm'
p835
ssg64
S'10feb2006'
p836
sg68
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p837
sg70
(dp838
g7
I00
sg794
I00
sg828
I00
sg13
I00
sg50
I00
ssg72
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-14 13:14'
p839
sg74
(dp840
g792
(lp841
F1000000.0
aS'@@f0'
p842
asg7
(lp843
I01
aI00
aS'@@reset_funklet'
p844
asg793
(lp845
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p846
asg794
(lp847
I01
aI00
aS'@@unsolvable'
p848
asg9
(lp849
g10
aS'@@color'
p850
asg795
(lp851
g796
aS'ell.gauss'
p852
aS'@@shape'
p853
asg54
(lp854
NaS'@@parmtable'
p855
asg797
(lp856
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p857
asg13
(lp858
I01
aI00
aS'@@auto_save'
p859
asg14
(lp860
I10
aS'@@size'
p861
asg15
(lp862
g16
aS'@@style'
p863
asg798
(lp864
F1.0
aF10.0
aS'@@I0'
p865
asg799
(lp866
NaF-0.69999999999999996
a(lp867
F0.44700000000000001
aF-0.184
aaS'@@SI'
p868
asg18
(lp869
g19
aS'@@condeq_corrs'
p870
asg800
(lp871
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p872
asg20
(lp873
NaS'@@funklet_shape'
p874
asg801
(lp875
F0.0
aF1.0
aF-0.5
aS'@@pa'
p876
asg802
(lp877
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p878
asg803
(lp879
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p880
asg804
(lp881
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p882
asg820
(lp883
NaS'@@from_LSM'
p884
asg40
(lp885
F1.0
aS'@@c00_default'
p886
asg822
(lp887
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p888
asg824
(lp889
S'unpol'
p890
aS'unpol2'
p891
aS'unpol10'
p892
aS'QUV'
p893
aS'QU'
p894
aS'Qonly'
p895
aS'Uonly'
p896
aS'Vonly'
p897
aS'3c147'
p898
aS'3c286'
p899
aS'3c48'
p900
aS'3c295'
p901
aS'RMtest'
p902
aS'SItest'
p903
aS'@@punit'
p904
asg826
(lp905
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p906
asg833
(lp907
NaS'@@name'
p908
asg828
(lp909
I01
aI00
aS'@@fsr_trace'
p910
asg50
(lp911
I01
aI00
aS'@@use_previous'
p912
asg52
(lp913
NaS'@@subtile_size'
p914
asg47
(lp915
NaS'@@tfdeg'
p916
assg130
Nsg131
S'2006-03-14 13:14'
p917
sg133
S'MG_JEN_Sixpack::newstar_source()'
p918
sg135
S'** Specific description of inarg record for: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-14 13:14'
p919
sg137
S'MG_JEN_Sixpacknewstar_source'
p920
sg139
S'newstar_source'
p921
sS'callback'
p922
(dp923
g824
I01
ssg141
I00
sg142
g917
sg149
(lp924
g21
ag824
ag820
ag833
ag54
ag794
ag798
ag822
ag797
ag800
ag803
ag799
ag792
ag802
ag826
ag828
ag795
ag793
ag804
ag801
ag50
ag13
ag7
ag9
ag15
ag14
ag40
ag47
ag20
ag52
ag18
assg820
Nsg40
F1.0
sg822
Nsg824
g890
sg826
F1.0920000000000001
sg833
Nsg828
I01
sg50
I01
sg52
Nsg47
Nssg614
I00
sg45
g646
sg713
(dp925
S'channel_start_index'
p926
I10
sS'data_column_name'
p927
g741
sS'predict_column'
p928
S'CORRECTED_DATA'
p929
sg609
S'@@ms_name'
p930
sg21
(dp931
g23
g713
sg24
(dp932
g926
S'(inputrec.sel) index of first selected freq channel'
p933
sg927
S'(inputrec) MS input column'
p934
sg928
S'MS output column to be associated with the VisTile predict-column'
p935
sg609
g622
sg627
g628
sS'channel_increment'
p936
S'(inputrec.sel) take every nth channel (1=all)'
p937
sS'channel_end_index'
p938
S'(inputrec.sel) index of last selected freq channel'
p939
sS'write_flags'
p940
S'(outputrec) if True, write flags to MS'
p941
ssg56
g57
sg58
S'MG_JEN_exec'
p942
sg60
(dp943
g926
I18
sg927
I17
sg928
I22
sg940
I21
sg938
I19
sg936
I20
ssg62
(dp944
g609
I01
sg627
I01
ssg634
(dp945
g609
g636
ssg64
S'20jan2006'
p946
sg66
(dp947
g609
I00
sg627
I00
ssg68
S'** Description of script: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-14 13:14'
p948
sg70
(dp949
g940
I00
ssg72
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-14 13:14'
p950
sg74
(dp951
g926
(lp952
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p953
asg927
(lp954
g741
ag929
aS'@@data_column_name'
p955
asg928
(lp956
g741
ag929
aS'MODEL_DATA'
p957
aS'@@predict_column'
p958
asg609
(lp959
g610
ag930
asg627
(lp960
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p961
asg936
(lp962
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p963
asg938
(lp964
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p965
asg940
(lp966
I01
aI00
aS'@@write_flags'
p967
assg130
Nsg131
S'2006-03-14 13:14'
p968
sg133
S'MG_JEN_exec::stream_control()'
p969
sg135
S'** Specific description of inarg record for: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-14 13:14'
p970
sg137
S'MG_JEN_execstream_control'
p971
sg139
S'stream_control'
p972
sg141
I00
sg142
g968
sg143
(dp973
g147
S'.modify( tile_size ): @@tile_size  ->  1'
p974
ssg149
(lp975
g21
ag609
ag627
ag927
ag926
ag938
ag936
ag940
ag928
assg627
I1
sg936
I1
sg938
I50
sg940
I00
ssg618
I00
sg620
I01
sg715
(dp976
g578
S'insert a solver'
p977
ssg623
I01
sg717
(dp978
S'correct_after'
p979
I01
sg614
S'@@master_reqseq'
p980
sS'condeq_unop'
p981
Nsg723
I01
sg618
S'@@redun'
p982
sS'solver_subtree'
p983
NsS'subtract_after'
p984
I00
sg623
S'@@chain_solvers'
p985
sg21
(dp986
g23
g717
sg24
(dp987
g979
S'if True, correct measured with predicted.Joneset'
p988
sg614
g615
sg981
S'Optional unary operation on Condeq inputs'
p989
sg723
S'if True, include full visualisation'
p990
sg618
g619
sg983
S'solver subtree qualifier(s)'
p991
sg984
S'if True, subtract predicted from measured'
p992
sg623
g624
sS'flag_residuals'
p993
S'if True, flag the residuals'
p994
sg625
g626
ssg56
g57
sg58
S'MG_JEN_Cohset'
p995
sg60
(dp996
g984
I188
sg979
I189
sg981
I186
sg723
I187
ssg62
(dp997
g614
I01
sg618
I01
sg983
I01
sg623
I01
sg993
I01
sg625
I01
ssg64
g348
sg66
(dp998
g625
I00
sg623
I00
sg618
I00
sg614
I00
ssg68
S'insert one or more solver subtrees in the data stream'
p999
sg70
(dp1000
g979
I00
sg614
I00
sg723
I00
sg618
I00
sg984
I00
sg993
I00
ssg72
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-14 13:14'
p1001
sg74
(dp1002
g979
(lp1003
I01
aI00
aS'@@correct_after'
p1004
asg614
(lp1005
I01
aI00
ag980
asg981
(lp1006
NaS'Abs'
p1007
aS'Arg'
p1008
aS'@@condeq_unop'
p1009
asg723
(lp1010
I01
aI00
aS'@@visu'
p1011
asg618
(lp1012
I01
aI00
ag982
asg983
(lp1013
NaS'@@solver_subtree'
p1014
asg984
(lp1015
I01
aI00
aS'@@subtract_after'
p1016
asg623
(lp1017
I01
ag985
asg993
(lp1018
I01
aI00
aS'@@flag_residuals'
p1019
asg625
(lp1020
Na(lp1021
I5
aI2
aa(lp1022
I2
aI2
aa(lp1023
I3
aI3
aaS'@@num_cells'
p1024
assg130
Nsg131
S'2006-03-14 13:14'
p1025
sg133
S'MG_JEN_Cohset::insert_solver()'
p1026
sg135
S'** Specific description of inarg record for: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-14 13:14'
p1027
sg137
S'MG_JEN_Cohsetinsert_solver'
p1028
sg139
S'insert_solver'
p1029
sg141
I00
sg142
g1025
sg143
(dp1030
g147
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p1031
ssg149
(lp1032
g21
ag983
ag618
ag625
ag623
ag614
ag981
ag723
ag984
ag979
ag993
aS'./MG_JEN_Cohset.solver_subtree()'
p1033
assg625
g1024
sg1033
(dp1034
S'rmin'
p1035
Nsg723
I01
sS'epsilon'
p1036
F0.0001
sS'colin_factor'
p1037
F0.0
sS'rmax'
p1038
NsS'derivative_eps'
p1039
F1e-08
sS'usesvd'
p1040
I01
sS'debug_level'
p1041
I10
sS'history'
p1042
I01
sS'solvegroup'
p1043
(lp1044
g334
asg21
(dp1045
g133
S'MG_JEN_Cohset::solver_subtree()'
p1046
sg23
g1033
sg131
S'2006-03-14 13:14'
p1047
sg62
(dp1048
g1041
I01
sg1039
I01
sS'setBalanced'
p1049
I01
sS'epsval'
p1050
I01
sg625
I00
ssg68
S'Make a solver-subtree for the given Condeq Cohset'
p1051
sg56
g57
sg72
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-14 13:14'
p1052
sg139
S'solver_subtree'
p1053
sg74
(dp1054
g1035
(lp1055
NaI100
aI200
aI500
aS'@@rmin'
p1056
asg723
(lp1057
I01
aI00
aS'@@visu'
p1058
asg1036
(lp1059
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p1060
asg1038
(lp1061
NaI500
aI1000
aI2000
aS'@@rmax'
p1062
asg1039
(lp1063
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@derivative_eps'
p1064
asg1040
(lp1065
I01
aI00
aS'@@usesvd'
p1066
asg1041
(lp1067
I10
aS'@@debug_level'
p1068
asg1042
(lp1069
I01
aI00
aS'@@history'
p1070
asg1043
(lp1071
(lp1072
a(lp1073
g334
aa(lp1074
S'Ggain'
p1075
aa(lp1076
S'Gphase'
p1077
aa(lp1078
S'Gpol1'
p1079
aa(lp1080
S'Gpol2'
p1081
aa(lp1082
g342
aa(lp1083
g342
aS'stokesU'
p1084
aa(lp1085
g342
aS'stokesQ'
p1086
aa(lp1087
g342
aS'stokesV'
p1088
aa(lp1089
S'stokesQU'
p1090
ag342
aa(lp1091
S'stokesQUV'
p1092
ag342
aa(lp1093
g334
aS'stokesI'
p1094
aa(lp1095
g1094
aa(lp1096
S'stokesIQU'
p1097
aa(lp1098
S'stokesIQUV'
p1099
aa(lp1100
S'stokesIV'
p1101
aa(lp1102
g1090
aa(lp1103
g1092
aa(lp1104
g334
aS'DJones'
p1105
aa(lp1106
g1105
aa(lp1107
S'Dang'
p1108
aa(lp1109
S'Dell'
p1110
aa(lp1111
S'Dreal'
p1112
aa(lp1113
S'Dimag'
p1114
aa(lp1115
g334
ag1105
ag302
aa(lp1116
g302
aa(lp1117
g334
ag103
aa(lp1118
g103
aa(lp1119
S'Breal'
p1120
aa(lp1121
S'Bimag'
p1122
aa(lp1123
S'Bpol1'
p1124
aa(lp1125
S'Bpol2'
p1126
aaS'@@solvegroup'
p1127
asg1050
(lp1128
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsval'
p1129
asg625
(lp1130
Na(lp1131
I5
aI2
aa(lp1132
I2
aI2
aa(lp1133
I3
aI3
aaS'@@num_cells'
p1134
asg1049
(lp1135
I01
aI00
aS'@@setBalanced'
p1136
asS'num_iter'
p1137
(lp1138
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1139
asS'condition'
p1140
(lp1141
NaS'Gphase_X_sum=0.0'
p1142
aS'Gphase_Y_sum=0.0'
p1143
a(lp1144
g1142
ag1143
aa(lp1145
S'Gphase_X_first=0.0'
p1146
aS'Gphase_Y_first=0.0'
p1147
aa(lp1148
S'Gphase_X_last=0.0'
p1149
aS'Gphase_Y_last=0.0'
p1150
aaS'Dang_sum=0.0'
p1151
a(lp1152
S'Bimag_X_sum=0.0'
p1153
aS'Bimag_Y_sum=0.0'
p1154
aa(lp1155
S'Breal_X_product=1.0'
p1156
aS'Breal_Y_product=1.0'
p1157
aaS'@@condition'
p1158
asg1037
(lp1159
F1e-08
aF0.0
aS'@@colin_factor'
p1160
assg130
Nsg64
S'20dec2005'
p1161
sg60
(dp1162
g1035
I193
sg723
I204
sg1036
I197
sg1038
I194
sg1040
I201
sg1043
I191
sg625
I195
sg1042
I205
sg1137
I196
sg1140
I192
sg1037
I200
ssg142
g1047
sg58
S'MG_JEN_Cohset'
p1163
sg70
(dp1164
g1040
I00
sg1049
I00
sg1042
I00
sg723
I00
ssg135
S'** Specific description of inarg record for: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-14 13:14'
p1165
sg143
(dp1166
g147
S".modify( solvegroup ): []  ->  ['GJones']"
p1167
ssg141
I00
sg149
(lp1168
g21
ag1043
ag1140
ag1035
ag1038
ag625
ag1137
ag1036
ag1050
ag1039
ag1037
ag1040
ag1049
ag1041
ag723
ag1042
asg24
(dp1169
g1035
S'if specified, only use baselines>=rmin'
p1170
sg723
S'if True, include visualisation'
p1171
sg1036
S'iteration control criterion...'
p1172
sg1038
S'if specified, only use baselines<=rmax'
p1173
sg1039
S'NEW: also iteration control...'
p1174
sg1040
S'if True, use Singular Value Decomposition (SVD)'
p1175
sg1041
S'solver debug_level'
p1176
sg1042
S'if True, include history collection of metrics'
p1177
sg1043
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p1178
sg1050
S'NEW: WNB version of epsilon....'
p1179
sg625
g626
sg1049
S'NEW: if True, add (..) to diagonal, otherwise multiply (1+lambda)'
p1180
sg1137
S'max number of iterations (now also in fitter)'
p1181
sg1140
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p1182
sg1037
S'colinearity factor'
p1183
ssg137
S'MG_JEN_Cohsetsolver_subtree'
p1184
ssg625
Nsg1049
I00
sg1137
I5
sg1140
Nsg1050
F1e-08
ssg993
I00
ss.