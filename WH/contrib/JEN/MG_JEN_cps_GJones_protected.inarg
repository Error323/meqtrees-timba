(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'reset_funklet'
p7
I00
sg1
S'@@polrep'
p8
sS'color'
p9
S'red'
p10
sS'subtile_size_Bimag'
p11
NsS'save_all'
p12
I00
sS'subtile_size_Breal'
p13
NsS'auto_save'
p14
I01
sS'size'
p15
I10
sS'style'
p16
S'circle'
p17
sS'fdeg_Breal'
p18
I5
sS'condeq_corrs'
p19
S'*'
p20
sS'funklet_shape'
p21
NsS'_JEN_inarg_CTRL_record:'
p22
(dp23
S'target_definition'
p24
S'MG_JEN_Joneset::BJones()'
p25
sS'localscope'
p26
g5
sS'MESSAGE'
p27
(dp28
S'1'
p29
S'  2: ...../MG_JEN_Joneset.BJones() (qual=None): .modify(tdeg_Bimag):   @tdeg_Breal  ->  0'
p30
sS'0'
p31
S'  2: ...../MG_JEN_Joneset.BJones() (qual=None): .modify(subtile_size_Bimag):   @subtile_size_Breal  ->  None'
p32
ssS'hide'
p33
(dp34
g16
I01
sg1
I01
sS'c00_default'
p35
I01
sS'stations'
p36
I01
sg9
I01
sg21
I01
sg19
I01
sS'uvplane_effect'
p37
I01
sS'subtile_size'
p38
I01
sS'tfdeg'
p39
I01
sS'parmtable'
p40
I01
sS'@Jsequence_KJones'
p41
I01
sS'@Jsequence_simul'
p42
I01
sS'@Jsequence'
p43
I01
sg15
I01
ssS'barescope'
p44
S'MG_JEN_JonesetBJones'
p45
sS'target_dir'
p46
S'.'
p47
sS'description'
p48
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p49
sS'oneliner'
p50
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-30 09:55'
p51
sS'target_function'
p52
S'BJones'
p53
sS'choice'
p54
(dp55
g7
(lp56
I01
aI00
aS'@@reset_funklet'
p57
asg1
(lp58
g2
aS'circular'
p59
ag8
asg9
(lp60
g10
aS'@@color'
p61
asg11
(lp62
S'@subtile_size_Breal'
p63
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p64
asg12
(lp65
I01
aI00
aS'@@save_all'
p66
asg13
(lp67
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p68
asg14
(lp69
I01
aI00
aS'@@auto_save'
p70
asg15
(lp71
I10
aS'@@size'
p72
asg16
(lp73
g17
aS'@@style'
p74
asg18
(lp75
I3
aI4
aI5
aI6
aS'@@fdeg_Breal'
p76
asg19
(lp77
g20
aS'@@condeq_corrs'
p78
asg21
(lp79
NaS'@@funklet_shape'
p80
asg41
(lp81
S'BJones'
p82
aS'@@@Jsequence_KJones'
p83
asS'tdeg_Bimag'
p84
(lp85
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p86
aS'@@tdeg_Bimag'
p87
asg43
(lp88
g82
aS'@@@Jsequence'
p89
asg35
(lp90
F1.0
aS'@@c00_default'
p91
asS'fdeg_Bimag'
p92
(lp93
I3
aI4
aI5
aI6
aS'@fdeg_Breal'
p94
aS'@@fdeg_Bimag'
p95
asg37
(lp96
I00
aS'@@uvplane_effect'
p97
asg36
(lp98
(lp99
I0
aI1
aI2
aI3
aI4
aa(lp100
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp101
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp102
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p103
aS'@@stations'
p104
asg39
(lp105
NaS'@@tfdeg'
p106
asS'tdeg_Breal'
p107
(lp108
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p109
asS'use_previous'
p110
(lp111
I01
aI00
aS'@@use_previous'
p112
asg38
(lp113
NaS'@@subtile_size'
p114
asg40
(lp115
NaS'test'
p116
aS'@@parmtable'
p117
asg42
(lp118
g82
aS'@@@Jsequence_simul'
p119
assS'qual'
p120
S''
p121
sS'protected'
p122
I00
sS'datetime_defined'
p123
S'2006-03-30 09:55'
p124
sS'version'
p125
S'16dec2005'
p126
sS'target_module'
p127
S'MG_JEN_Joneset'
p128
sS'editable'
p129
(dp130
g7
I00
sg110
I00
sg14
I00
sg12
I00
ssS'inarg_specific'
p131
S'** Specific description of inarg record for: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-03-30 09:55'
p132
sS'mutable'
p133
(dp134
g37
I00
sg40
I00
sg1
I00
sg36
I00
ssS'last_edited'
p135
g124
sS'order'
p136
(lp137
g22
ag36
ag1
ag43
ag42
ag41
ag40
ag37
ag107
ag84
ag18
ag92
ag13
ag11
ag110
ag14
ag12
ag7
ag9
ag16
ag15
ag35
ag39
ag21
ag38
ag19
asS'help'
p138
(dp139
g7
S'if True, do NOT use any MeqParm table values when solvable'
p140
sg1
S'polarisation representation'
p141
sg9
S'plot_color'
p142
sg11
S'sub-tile size (None=entire tile)'
p143
sg12
S'if True, save the update result even if not converged'
p144
sg13
g143
sg14
S'if True, save the result of every iteration (slow!)'
p145
sg15
S'size of plotted symbol'
p146
sg16
S'plot_style'
p147
sg18
S'degree of freq polynomial'
p148
sg19
S'correlations to be used for solving'
p149
sg21
S'shape [time,freq] of default funklet'
p150
sg41
S'list membership indication (used in JEN_inargGui)'
p151
sg84
S'degree of time polynomial'
p152
sg43
g151
sg35
S'default value of c[0,0] coefficient'
p153
sg92
g148
sg37
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p154
sg36
S'the (subset of) stations to be used'
p155
sg39
S'(time,freq) polynomial degree'
p156
sg107
g152
sg110
S'if True, start with the previous solution'
p157
sg38
S'size (time-slots) of a domain sub-tile'
p158
sg40
S'name of the MeqParm table to be used'
p159
sg42
g151
sssg41
g82
sg84
I0
sg43
g82
sg35
F1.0
sg92
g94
sg37
g97
sg40
g117
sg36
g104
sg107
I0
sg110
I01
sg38
Nsg39
Nsg42
g82
ssg1
S'@@polrep'
p160
sg36
S'@@stations'
p161
sS'./MG_JEN_Joneset.DJones_WSRT()'
p162
(dp163
g7
I00
sg1
S'@@polrep'
p164
sg9
g10
sS'fdeg_Dell'
p165
S'@fdeg_Dang'
p166
sS'coupled_XY_Dell'
p167
I01
sg12
I00
sg40
S'@@parmtable'
p168
sS'subtile_size_Dang'
p169
Nsg14
I01
sg15
I10
sg16
g17
sg19
g20
sg21
Nsg22
(dp170
g24
S'MG_JEN_Joneset::DJones_WSRT()'
p171
sg26
g162
sg27
(dp172
g29
S'  2: ...../MG_JEN_Joneset.DJones_WSRT() (qual=None): .modify(tdeg_Dell):   @tdeg_Dang  ->  0'
p173
sg31
S'  2: ...../MG_JEN_Joneset.DJones_WSRT() (qual=None): .modify(subtile_size_Dell):   @subtile_size_Dang  ->  None'
p174
ssg33
(dp175
g16
I01
sg1
I01
sg35
I01
sg36
I01
sg9
I01
sg21
I01
sg19
I01
sg37
I01
sg38
I01
sg39
I01
sg40
I01
sg41
I01
sg42
I01
sg43
I01
sg15
I01
ssg44
S'MG_JEN_JonesetDJones_WSRT'
p176
sg46
g47
sg48
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p177
sg50
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-30 09:55'
p178
sg52
S'DJones_WSRT'
p179
sg54
(dp180
g7
(lp181
I01
aI00
aS'@@reset_funklet'
p182
asg1
(lp183
g2
ag59
ag164
asg9
(lp184
g10
aS'@@color'
p185
asg165
(lp186
I0
aI1
aI2
aI3
ag166
aS'@@fdeg_Dell'
p187
asg167
(lp188
I01
aI00
aS'@@coupled_XY_Dell'
p189
asg12
(lp190
I01
aI00
aS'@@save_all'
p191
asg40
(lp192
Nag116
ag168
asg169
(lp193
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dang'
p194
asg14
(lp195
I01
aI00
aS'@@auto_save'
p196
asg15
(lp197
I10
aS'@@size'
p198
asg16
(lp199
g17
aS'@@style'
p200
asg19
(lp201
g20
aS'@@condeq_corrs'
p202
asg21
(lp203
NaS'@@funklet_shape'
p204
asg41
(lp205
S'DJones_WSRT'
p206
aS'@@@Jsequence_KJones'
p207
asS'subtile_size_Dell'
p208
(lp209
S'@subtile_size_Dang'
p210
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dell'
p211
asg43
(lp212
g206
aS'@@@Jsequence'
p213
asS'fdeg_Dang'
p214
(lp215
I0
aI1
aI2
aI3
aS'@@fdeg_Dang'
p216
asg35
(lp217
F1.0
aS'@@c00_default'
p218
asg37
(lp219
I00
aS'@@uvplane_effect'
p220
asS'tdeg_Dell'
p221
(lp222
I0
aI1
aI2
aI3
aS'@tdeg_Dang'
p223
aS'@@tdeg_Dell'
p224
asS'coupled_XY_Dang'
p225
(lp226
I01
aI00
aS'@@coupled_XY_Dang'
p227
asS'tdeg_Dang'
p228
(lp229
I0
aI1
aI2
aI3
aS'@@tdeg_Dang'
p230
asg36
(lp231
(lp232
I0
aI1
aI2
aI3
aI4
aa(lp233
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp234
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp235
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p236
asg110
(lp237
I01
aI00
aS'@@use_previous'
p238
asg38
(lp239
NaS'@@subtile_size'
p240
asg39
(lp241
NaS'@@tfdeg'
p242
asg42
(lp243
g206
aS'@@@Jsequence_simul'
p244
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p245
sg125
g126
sg127
S'MG_JEN_Joneset'
p246
sg129
(dp247
g7
I00
sg167
I00
sg110
I00
sg225
I00
sg12
I00
sg14
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-03-30 09:55'
p248
sg133
(dp249
g37
I00
sg40
I00
sg1
I00
sg36
I00
ssg135
g245
sg136
(lp250
g22
ag36
ag1
ag43
ag42
ag41
ag225
ag167
ag40
ag37
ag228
ag221
ag214
ag165
ag169
ag208
ag110
ag14
ag12
ag7
ag9
ag16
ag15
ag35
ag39
ag21
ag38
ag19
asg138
(dp251
g7
g140
sg1
g141
sg9
g142
sg165
S'degree of freq polynomial'
p252
sg167
S'if True, XDell = -YDell per station'
p253
sg12
g144
sg40
g159
sg169
S'sub-tile size (None=entire tile)'
p254
sg14
g145
sg15
g146
sg16
g147
sg19
g149
sg21
g150
sg41
g151
sg208
g254
sg43
g151
sg214
g252
sg35
g153
sg37
g154
sg221
S'degree of time polynomial'
p255
sg225
S'if True, XDang = YDang per station'
p256
sg228
g255
sg36
g155
sg110
g157
sg38
g158
sg39
g156
sg42
g151
sssg41
g206
sg208
Nsg43
g206
sg214
I0
sg35
F1.0
sg37
g220
sg221
I0
sg225
I01
sg228
I0
sg36
g236
sg110
I01
sg38
Nsg39
Nsg42
g206
ssS'./MG_JEN_Joneset.FJones()'
p257
(dp258
g7
I00
sg1
S'@@polrep'
p259
sg9
g10
sg12
I00
sg39
Nsg14
I01
sg15
I10
sg16
g17
sg19
g20
sg21
Nsg22
(dp260
g24
S'MG_JEN_Joneset::FJones()'
p261
sg26
g257
sg27
(dp262
g31
S'  2: ...../MG_JEN_Joneset.FJones() (qual=None): .modify(subtile_size_RM):   1  ->  None'
p263
ssg33
(dp264
g16
I01
sg1
I01
sg35
I01
sg36
I01
sg9
I01
sg21
I01
sg19
I01
sg37
I01
sg38
I01
sg39
I01
sg40
I01
sg41
I01
sg42
I01
sg43
I01
sg15
I01
ssg44
S'MG_JEN_JonesetFJones'
p265
sg46
g47
sg48
S'defines diagonal FJones Faraday rotation matrices'
p266
sg50
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-30 09:55'
p267
sg52
S'FJones'
p268
sg54
(dp269
g7
(lp270
I01
aI00
aS'@@reset_funklet'
p271
asg1
(lp272
g2
ag59
ag259
asg9
(lp273
g10
aS'@@color'
p274
asg12
(lp275
I01
aI00
aS'@@save_all'
p276
asg39
(lp277
NaS'@@tfdeg'
p278
asg14
(lp279
I01
aI00
aS'@@auto_save'
p280
asg15
(lp281
I10
aS'@@size'
p282
asg16
(lp283
g17
aS'@@style'
p284
asg19
(lp285
g20
aS'@@condeq_corrs'
p286
asg21
(lp287
NaS'@@funklet_shape'
p288
asg41
(lp289
S'FJones'
p290
aS'@@@Jsequence_KJones'
p291
asg43
(lp292
g290
aS'@@@Jsequence'
p293
asg35
(lp294
F1.0
aS'@@c00_default'
p295
asg37
(lp296
I00
aS'@@uvplane_effect'
p297
asg36
(lp298
(lp299
I0
aI1
aI2
aI3
aI4
aa(lp300
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp301
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp302
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p303
asS'tdeg_RM'
p304
(lp305
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p306
asg110
(lp307
I01
aI00
aS'@@use_previous'
p308
asS'fdeg_RM'
p309
(lp310
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p311
asg38
(lp312
NaS'@@subtile_size'
p313
asg40
(lp314
Nag116
aS'@@parmtable'
p315
asS'subtile_size_RM'
p316
(lp317
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p318
asg42
(lp319
g290
aS'@@@Jsequence_simul'
p320
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p321
sg125
g126
sg127
S'MG_JEN_Joneset'
p322
sg129
(dp323
g7
I00
sg110
I00
sg14
I00
sg12
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-03-30 09:55'
p324
sg133
(dp325
g37
I00
sg40
I00
sg1
I00
sg36
I00
ssg135
g321
sg136
(lp326
g22
ag36
ag1
ag43
ag42
ag41
ag40
ag37
ag304
ag309
ag316
ag110
ag14
ag12
ag7
ag9
ag16
ag15
ag35
ag39
ag21
ag38
ag19
asg138
(dp327
g7
g140
sg1
g141
sg9
g142
sg12
g144
sg39
g156
sg14
g145
sg15
g146
sg16
g147
sg19
g149
sg21
g150
sg41
g151
sg43
g151
sg35
g153
sg37
g154
sg36
g155
sg304
S'degree of time polynomial'
p328
sg110
g157
sg309
S'degree of freq polynomial'
p329
sg38
g158
sg40
g159
sg316
S'sub-tile size (None=entire tile)'
p330
sg42
g151
sssg41
g290
sg43
g290
sg35
F1.0
sg37
g297
sg36
g303
sg304
I0
sg110
I01
sg309
I2
sg38
Nsg40
g315
sg316
Nsg42
g290
ssg37
S'@@uvplane_effect'
p331
sg40
S'@@parmtable'
p332
sg22
(dp333
g24
S'MG_JEN_Cohset::Jones()'
p334
sg26
g3
sg33
(dp335
g1
I01
sg36
I01
sg37
I01
sg40
I01
sg41
I01
sg42
I01
sg43
I01
ssg44
S'MG_JEN_CohsetJones'
p336
sg46
g47
sg50
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-30 09:55'
p337
sg52
S'Jones'
p338
sg54
(dp339
g1
(lp340
g2
ag59
ag160
asg36
(lp341
(lp342
I0
aI1
aI2
aI3
aI4
aa(lp343
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp344
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp345
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
ag161
asg37
(lp346
I00
ag331
asg40
(lp347
Nag116
ag332
asg41
(lp348
NaS'@@@Jsequence_KJones'
p349
asg42
(lp350
NaS'@@@Jsequence_simul'
p351
asS'Jsequence'
p352
(lp353
(lp354
S'GJones'
p355
aa(lp356
g82
aa(lp357
g290
aa(lp358
S'KJones'
p359
aa(lp360
g206
aa(lp361
g355
ag206
aa(lp362
S'JJones'
p363
aa(lp364
aS'@@Jsequence'
p365
asg43
(lp366
NaS'@@@Jsequence'
p367
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p368
sg125
S'25dec2005'
p369
sg127
S'MG_JEN_Cohset'
p370
sg131
S'** Specific description of inarg record for: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-03-30 09:55'
p371
sg27
(dp372
g29
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p373
sg31
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p374
sS'3'
p375
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p376
sS'2'
p377
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p378
sS'5'
p379
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p380
sS'4'
p381
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p382
sS'6'
p383
S"  1: .../MG_JEN_Cohset.Jones() (qual=None): .modify(Jsequence):   []  ->  ['GJones']"
p384
ssg135
g368
sg133
(dp385
g37
I00
sg40
I00
sg1
I00
sg36
I00
ssg136
(lp386
g22
ag36
ag1
ag43
ag42
ag41
ag40
ag37
ag352
aS'./MG_JEN_Joneset.GJones()'
p387
ag257
ag5
aS'./MG_JEN_Joneset.KJones()'
p388
ag162
aS'./MG_JEN_Joneset.JJones()'
p389
asg138
(dp390
g1
g141
sg36
g155
sg37
g154
sg40
g159
sg41
g151
sg42
g151
sg352
S'sequence of Jones matrices to be used'
p391
sg43
g151
ssg48
S'Make a Joneset by creating and multiplying a sequence of one ore more Jonesets'
p392
ssg388
(dp393
g1
S'@@polrep'
p394
sg36
S'@@stations'
p395
sg22
(dp396
g24
S'MG_JEN_Joneset::KJones()'
p397
sg26
g388
sg33
(dp398
g41
I01
sg42
I01
sg36
I01
sg1
I01
sg43
I01
ssg44
S'MG_JEN_JonesetKJones'
p399
sg46
g47
sg48
S'defines diagonal KJones matrices for DFT Fourier kernel'
p400
sg50
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-30 09:55'
p401
sg52
S'KJones'
p402
sg54
(dp403
g41
(lp404
g359
aS'@@@Jsequence_KJones'
p405
asg42
(lp406
g359
aS'@@@Jsequence_simul'
p407
asg36
(lp408
(lp409
I0
aI1
aI2
aI3
aI4
aa(lp410
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp411
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp412
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
ag395
asg1
(lp413
g2
ag59
ag394
asg43
(lp414
g359
aS'@@@Jsequence'
p415
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p416
sg125
S'12dec2005'
p417
sg127
S'MG_JEN_Joneset'
p418
sg131
S'** Specific description of inarg record for: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-03-30 09:55'
p419
sg133
(dp420
g1
I00
sg36
I00
ssg135
g416
sg136
(lp421
g22
ag36
ag1
ag43
ag42
ag41
asg138
(dp422
g41
g151
sg42
g151
sg36
g155
sg1
g141
sg43
g151
sssg41
g359
sg42
g359
sg43
g359
ssg389
(dp423
g7
I00
sg1
S'@@polrep'
p424
sS'tdeg_Jreal'
p425
I0
sg9
g10
sg12
I00
sS'all4_always'
p426
Nsg40
S'@@parmtable'
p427
sS'subtile_size_Jreal'
p428
Nsg14
I01
sg15
I10
sg16
g17
sS'tdeg_Jimag'
p429
I0
sg19
g20
sg21
Nsg22
(dp430
g24
S'MG_JEN_Joneset::JJones()'
p431
sg26
g389
sg27
(dp432
g29
S'  2: ...../MG_JEN_Joneset.JJones() (qual=None): .modify(tdeg_Jimag):   @tdeg_Jreal  ->  0'
p433
sg31
S'  2: ...../MG_JEN_Joneset.JJones() (qual=None): .modify(subtile_size_Jimag):   @subtile_size_Jreal  ->  None'
p434
ssg33
(dp435
g16
I01
sg1
I01
sg35
I01
sg36
I01
sg9
I01
sg21
I01
sg19
I01
sg37
I01
sg38
I01
sg39
I01
sg40
I01
sg41
I01
sg42
I01
sg43
I01
sg15
I01
ssg44
S'MG_JEN_JonesetJJones'
p436
sg46
g47
sg48
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p437
sg50
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-30 09:55'
p438
sg52
S'JJones'
p439
sg54
(dp440
g7
(lp441
I01
aI00
aS'@@reset_funklet'
p442
asg1
(lp443
g2
ag59
ag424
asg425
(lp444
I0
aI1
aI2
aI3
aS'@@tdeg_Jreal'
p445
asg9
(lp446
g10
aS'@@color'
p447
asg12
(lp448
I01
aI00
aS'@@save_all'
p449
asg426
(lp450
Na(lp451
I14
aa(lp452
I1
aaS'WSRT/WHAT'
p453
aS'@@all4_always'
p454
asg40
(lp455
Nag116
ag427
asg428
(lp456
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jreal'
p457
asg14
(lp458
I01
aI00
aS'@@auto_save'
p459
asg15
(lp460
I10
aS'@@size'
p461
asg16
(lp462
g17
aS'@@style'
p463
asg429
(lp464
I0
aI1
aI2
aI3
aS'@tdeg_Jreal'
p465
aS'@@tdeg_Jimag'
p466
asg19
(lp467
g20
aS'@@condeq_corrs'
p468
asg21
(lp469
NaS'@@funklet_shape'
p470
asg41
(lp471
g363
aS'@@@Jsequence_KJones'
p472
asS'fdeg_Jreal'
p473
(lp474
I0
aI1
aI2
aI3
aS'@@fdeg_Jreal'
p475
asg35
(lp476
F1.0
aS'@@c00_default'
p477
asg37
(lp478
I00
aS'@@uvplane_effect'
p479
asS'fdeg_Jimag'
p480
(lp481
I0
aI1
aI2
aI3
aS'@fdeg_Jreal'
p482
aS'@@fdeg_Jimag'
p483
asS'subtile_size_Jimag'
p484
(lp485
S'@subtile_size_Jreal'
p486
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Jimag'
p487
asg36
(lp488
(lp489
I0
aI1
aI2
aI3
aI4
aa(lp490
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp491
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp492
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p493
asS'diagonal_only'
p494
(lp495
I01
aI00
aS'@@diagonal_only'
p496
asg110
(lp497
I01
aI00
aS'@@use_previous'
p498
asg38
(lp499
NaS'@@subtile_size'
p500
asg39
(lp501
NaS'@@tfdeg'
p502
asg42
(lp503
g363
aS'@@@Jsequence_simul'
p504
asg43
(lp505
g363
aS'@@@Jsequence'
p506
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p507
sg125
S'14feb2006'
p508
sg127
S'MG_JEN_Joneset'
p509
sg129
(dp510
g7
I00
sg110
I00
sg494
I00
sg14
I00
sg12
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-03-30 09:55'
p511
sg133
(dp512
g37
I00
sg40
I00
sg1
I00
sg36
I00
ssg135
g507
sg136
(lp513
g22
ag36
ag1
ag43
ag42
ag41
ag494
ag426
ag40
ag37
ag425
ag429
ag473
ag480
ag428
ag484
ag110
ag14
ag12
ag7
ag9
ag16
ag15
ag35
ag39
ag21
ag38
ag19
asg138
(dp514
g7
g140
sg1
g141
sg425
S'degree of time polynomial'
p515
sg9
g142
sg12
g144
sg426
S'stations for which all 4 elements will always be solved for'
p516
sg40
g159
sg428
S'sub-tile size (None=entire tile)'
p517
sg14
g145
sg15
g146
sg16
g147
sg429
g515
sg19
g149
sg21
g150
sg41
g151
sg473
S'degree of freq polynomial'
p518
sg35
g153
sg37
g154
sg480
g518
sg484
g517
sg36
g155
sg494
S'if True, solve for diagonal (11,22) elements only'
p519
sg110
g157
sg38
g158
sg39
g156
sg42
g151
sg43
g151
sssg41
g363
sg473
I0
sg35
F1.0
sg37
g479
sg480
g482
sg484
Nsg36
g493
sg494
I00
sg110
I01
sg38
Nsg39
Nsg42
g363
sg43
g363
ssg41
Nsg42
Nsg352
(lp520
g355
asg387
(dp521
g7
I00
sg1
S'@@polrep'
p522
sS'fdeg_Ggain'
p523
I0
sg9
g10
sg12
I00
sg40
S'@@parmtable'
p524
sg14
I01
sg15
I10
sg16
g17
sS'subtile_size_Ggain'
p525
Nsg19
g20
sg21
Nsg22
(dp526
g24
S'MG_JEN_Joneset::GJones()'
p527
sg26
g387
sg27
(dp528
g29
S'  2: ...../MG_JEN_Joneset.GJones() (qual=None): .modify(subtile_size_Gphase):   @subtile_size_Ggain  ->  None'
p529
sg31
S'  2: ...../MG_JEN_Joneset.GJones() (qual=None): .modify(subtile_size_Ggain):   1  ->  None'
p530
sg377
S'  2: ...../MG_JEN_Joneset.GJones() (qual=None): .modify(tdeg_Gphase):   @tdeg_Ggain  ->  0'
p531
ssg33
(dp532
g16
I01
sg1
I01
sg35
I01
sg36
I01
sg9
I01
sg43
I01
sg21
I01
sg19
I01
sg37
I01
sg38
I01
sg39
I01
sg40
I01
sg41
I01
sg42
I01
sS'Gpolar'
p533
I01
sg15
I01
ssg44
S'MG_JEN_JonesetGJones'
p534
sg46
g47
sg48
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p535
sg50
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-30 09:55'
p536
sg52
S'GJones'
p537
sg54
(dp538
g7
(lp539
I01
aI00
aS'@@reset_funklet'
p540
asg1
(lp541
g2
ag59
ag522
asg523
(lp542
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p543
asg9
(lp544
g10
aS'@@color'
p545
asg12
(lp546
I01
aI00
aS'@@save_all'
p547
asg40
(lp548
Nag116
ag524
asg14
(lp549
I01
aI00
aS'@@auto_save'
p550
asg15
(lp551
I10
aS'@@size'
p552
asg16
(lp553
g17
aS'@@style'
p554
asg525
(lp555
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p556
asg19
(lp557
g20
aS'@@condeq_corrs'
p558
asg21
(lp559
NaS'@@funklet_shape'
p560
asg41
(lp561
g355
aS'@@@Jsequence_KJones'
p562
asg43
(lp563
g355
aS'@@@Jsequence'
p564
asg35
(lp565
F1.0
aS'@@c00_default'
p566
asS'tdeg_Gphase'
p567
(lp568
I0
aI1
aI2
aI3
aS'@tdeg_Ggain'
p569
aS'@@tdeg_Gphase'
p570
asS'tdeg_Ggain'
p571
(lp572
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p573
asS'fdeg_Gphase'
p574
(lp575
I0
aI1
aI2
aI3
aS'@fdeg_Ggain'
p576
aS'@@fdeg_Gphase'
p577
asS'subtile_size_Gphase'
p578
(lp579
S'@subtile_size_Ggain'
p580
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p581
asg533
(lp582
I01
aI00
aS'@@Gpolar'
p583
asg37
(lp584
I00
aS'@@uvplane_effect'
p585
asg36
(lp586
(lp587
I0
aI1
aI2
aI3
aI4
aa(lp588
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp589
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp590
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p591
asg110
(lp592
I01
aI00
aS'@@use_previous'
p593
asg38
(lp594
NaS'@@subtile_size'
p595
asg39
(lp596
NaS'@@tfdeg'
p597
asg42
(lp598
g355
aS'@@@Jsequence_simul'
p599
assg120
g121
sg122
I00
sg123
S'2006-03-30 09:55'
p600
sg125
S'15dec2005'
p601
sg127
S'MG_JEN_Joneset'
p602
sg129
(dp603
g7
I00
sg110
I00
sg533
I00
sg14
I00
sg12
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-03-30 09:55'
p604
sg133
(dp605
g37
I00
sg40
I00
sg1
I00
sg36
I00
ssg135
g600
sg136
(lp606
g22
ag36
ag1
ag43
ag42
ag41
ag533
ag40
ag37
ag571
ag567
ag523
ag574
ag525
ag578
ag110
ag14
ag12
ag7
ag9
ag16
ag15
ag35
ag39
ag21
ag38
ag19
asg138
(dp607
g7
g140
sg1
g141
sg523
S'degree of freq polynomial'
p608
sg9
g142
sg12
g144
sg40
g159
sg14
g145
sg15
g146
sg16
g147
sg525
S'sub-tile size (None=entire tile)'
p609
sg19
g149
sg21
g150
sg41
g151
sg43
g151
sg35
g153
sg567
S'degree of time polynomial'
p610
sg571
g610
sg574
g608
sg578
g609
sg533
S'obsolete, kept only for upward compatibility'
p611
sg37
g154
sg36
g155
sg110
g157
sg38
g158
sg39
g156
sg42
g151
sssg41
g355
sg43
g355
sg35
F1.0
sg567
I0
sg571
I0
sg574
g576
sg578
Nsg533
I01
sg37
g585
sg36
g591
sg110
I01
sg38
Nsg39
Nsg42
g355
ssg43
NssS'_JEN_inarg_separator_record:_1'
p612
(dp613
S'txt'
p614
S'operations on input uv-data'
p615
ssS'./MG_JEN_Sixpack.get_Sixpack()'
p616
(dp617
S'./MG_JEN_Sixpack.newstar_source()'
p618
(dp619
S'f0'
p620
F1000000.0
sg7
I00
sS'major'
p621
F0.0
sS'unsolvable'
p622
I00
sg9
g10
sg12
I00
sS'shape'
p623
S'point'
p624
sg40
NsS'Upct'
p625
Nsg14
I01
sg15
I10
sg16
g17
sS'I0'
p626
F1.0
sS'SI'
p627
Nsg19
g20
sS'Vpct'
p628
Nsg21
NsS'pa'
p629
F0.0
sS'RA'
p630
F1.4950000000000001
sS'RM'
p631
NsS'minor'
p632
F0.0
sg22
(dp633
g24
S'MG_JEN_Sixpack::newstar_source()'
p634
sg26
g618
sg33
(dp635
g620
I01
sg621
I01
sg622
I01
sS'name'
p636
I01
sg35
I01
sg9
I01
sg38
I01
sg623
I01
sS'fsr_trace'
p637
I01
sS'punit'
p638
I00
sg21
I01
sg629
I01
sg19
I01
sg39
I01
sg16
I01
sg632
I01
sg15
I01
ssg44
S'MG_JEN_Sixpacknewstar_source'
p639
sS'callback'
p640
(dp641
g638
I01
ssg46
g47
sg48
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p642
sg50
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-30 09:55'
p643
sg52
S'newstar_source'
p644
sg54
(dp645
g620
(lp646
F1000000.0
aS'@@f0'
p647
asg7
(lp648
I01
aI00
aS'@@reset_funklet'
p649
asg621
(lp650
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p651
asg622
(lp652
I01
aI00
aS'@@unsolvable'
p653
asg9
(lp654
g10
aS'@@color'
p655
asg12
(lp656
I01
aI00
aS'@@save_all'
p657
asg623
(lp658
g624
aS'ell.gauss'
p659
aS'@@shape'
p660
asg40
(lp661
NaS'@@parmtable'
p662
asg625
(lp663
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p664
asg14
(lp665
I01
aI00
aS'@@auto_save'
p666
asg15
(lp667
I10
aS'@@size'
p668
asg16
(lp669
g17
aS'@@style'
p670
asg626
(lp671
F1.0
aF10.0
aS'@@I0'
p672
asg627
(lp673
NaF-0.69999999999999996
a(lp674
F0.44700000000000001
aF-0.184
aaS'@@SI'
p675
asg19
(lp676
g20
aS'@@condeq_corrs'
p677
asg628
(lp678
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p679
asg21
(lp680
NaS'@@funklet_shape'
p681
asg629
(lp682
F0.0
aF1.0
aF-0.5
aS'@@pa'
p683
asg630
(lp684
F0.0
aF0.5
aF1.0
aF1.4950000000000001
aF4.3570000000000002
aS'@@RA'
p685
asg631
(lp686
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p687
asg632
(lp688
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p689
asg35
(lp690
F1.0
aS'@@c00_default'
p691
asS'Qpct'
p692
(lp693
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p694
asg638
(lp695
S'unpol'
p696
aS'unpol2'
p697
aS'unpol10'
p698
aS'QUV'
p699
aS'QU'
p700
aS'Qonly'
p701
aS'Uonly'
p702
aS'Vonly'
p703
aS'3c147'
p704
aS'3c286'
p705
aS'3c48'
p706
aS'3c295'
p707
aS'D1'
p708
aS'RMtest'
p709
aS'SItest'
p710
aS'@@punit'
p711
asS'Dec'
p712
(lp713
F0.5
aF1.0
aF0.87
aF1.0920000000000001
aS'@@Dec'
p714
asg636
(lp715
NaS'@@name'
p716
asg637
(lp717
I01
aI00
aS'@@fsr_trace'
p718
asg110
(lp719
I01
aI00
aS'@@use_previous'
p720
asg38
(lp721
NaS'@@subtile_size'
p722
asg39
(lp723
NaS'@@tfdeg'
p724
assg120
g121
sg125
S'10feb2006'
p725
sg123
S'2006-03-30 09:55'
p726
sg127
S'MG_JEN_Sixpack'
p727
sg129
(dp728
g7
I00
sg622
I00
sg637
I00
sg110
I00
sg12
I00
sg14
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-03-30 09:55'
p729
sg122
I00
sg135
g726
sg136
(lp730
g22
ag638
ag636
ag40
ag622
ag626
ag692
ag625
ag628
ag631
ag627
ag620
ag630
ag712
ag637
ag623
ag621
ag632
ag629
ag110
ag14
ag12
ag7
ag9
ag16
ag15
ag35
ag39
ag21
ag38
ag19
asg138
(dp731
g620
S'reference freq (Hz): I=I0 @ f=f0'
p732
sg7
g140
sg621
S'major axis (arcsec)'
p733
sg622
S'if True, do NOT store solvegroup/parmgroup info'
p734
sg9
g142
sg12
g144
sg623
S'source shape'
p735
sg40
S'name of the MeqParm table (AIPS++)'
p736
sg625
S'Stokes U (percentage of I)'
p737
sg14
g145
sg15
g146
sg16
g147
sg626
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p738
sg627
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p739
sg19
g149
sg628
S'Stokes V (percentage of I)'
p740
sg21
g150
sg629
S'position angle (rad)'
p741
sg630
S'Right Ascension (rad, J2000)'
p742
sg631
S'Intrinsic Rotation Measure (rad/m2)'
p743
sg632
S'minor axis (arcsec)'
p744
sg35
g153
sg692
S'Stokes Q (percentage of I)'
p745
sg638
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n- D1:      cps in D1.MS \n'
p746
sg712
S'Declination (rad, J2000)'
p747
sg637
S'If True, attach to forest state record'
p748
sg110
g157
sg38
g158
sg39
g156
sssS'slave'
p749
I01
sg35
F1.0
sg692
Nsg638
g696
sg712
F0.87
sg636
Nsg637
I01
sg110
I01
sg38
Nsg39
Nssg22
(dp750
g24
S'MG_JEN_Sixpack::get_Sixpack()'
p751
sg26
g616
sg33
(dp752
S'punit_from_LSM'
p753
I00
ssg44
S'MG_JEN_Sixpackget_Sixpack'
p754
sS'browse'
p755
(dp756
g753
S'*.lsm'
p757
ssg46
g47
sg50
S'MG_JEN_Sixpack::get_Sixpack()  version=22mar2006  defined=2006-03-30 09:55'
p758
sg52
S'get_Sixpack'
p759
sg54
(dp760
g753
(lp761
NaS'@@punit_from_LSM'
p762
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p763
sg125
S'22mar2006'
p764
sg127
S'MG_JEN_Sixpack'
p765
sg131
S'** Specific description of inarg record for: MG_JEN_Sixpack::get_Sixpack()  version=22mar2006  defined=2006-03-30 09:55'
p766
sg27
(dp767
g31
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p768
ssg135
g763
sg136
(lp769
g22
ag753
ag618
asg138
(dp770
g753
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p771
ssg48
S'Get a Sixpack, either from a LSM or a Newstar source'
p772
ssg753
NssS'ms_name'
p773
S'D1.MS'
p774
sg40
Nsg22
(dp775
g26
S'./MG_JEN_cps.'
p776
sg138
(dp777
g1
g141
sS'master_reqseq'
p778
S'if True, use a master reqseq for solver(s)'
p779
sg36
g155
sS'insert_flagger'
p780
S'if True, insert a flagger'
p781
sS'redun'
p782
S'if True, redundant spacing calibration'
p783
sS'insert_solver'
p784
S'if True, insert a solver'
p785
sg773
S'name of the (AIPS++) Measurement Set'
p786
sS'chain_solvers'
p787
S'if True, chain the solvers (recommended)'
p788
sS'num_cells'
p789
S'if defined, ModRes argument [ntime,nfreq]'
p790
sg40
g159
sg41
g151
sg42
g151
sS'tile_size'
p791
S'(inputrec) size (in time-slots) of the input data-tile'
p792
sg37
g154
sg43
g151
ssS'reference'
p793
I00
sg46
g47
sg127
S'MG_JEN_cps'
p794
sg33
(dp795
g1
I00
sg778
I01
sg36
I00
sS'last_changed'
p796
I01
sg782
I00
sg37
I00
sg787
I01
sg789
I00
sg41
I01
sg42
I01
sg43
I01
ssg755
(dp797
g773
S'*.MS'
p798
ssg125
g601
sg48
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p799
sg129
(dp800
g778
I00
sg780
I00
sg782
I00
sg784
I00
sg796
I00
ssg50
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p801
sg54
(dp802
g1
(lp803
g2
ag59
aS'@@polrep'
p804
asg778
(lp805
I01
aI00
aS'@@master_reqseq'
p806
asg36
(lp807
(lp808
I0
aI1
aI2
aI3
aI4
aa(lp809
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp810
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp811
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
aS'@@stations'
p812
asg780
(lp813
I01
aI00
aS'@@insert_flagger'
p814
asg796
(lp815
S'd30jan2006'
p816
aS'@@last_changed'
p817
asg784
(lp818
I01
aI00
aS'@@insert_solver'
p819
asg782
(lp820
I01
aI00
aS'@@redun'
p821
asg773
(lp822
g774
aS'@@ms_name'
p823
asg787
(lp824
I01
aS'@@chain_solvers'
p825
asg789
(lp826
Na(lp827
I5
aI2
aa(lp828
I2
aI2
aa(lp829
I3
aI3
aaS'@@num_cells'
p830
asg40
(lp831
Nag116
aS'@@parmtable'
p832
asg41
(lp833
NaS'@@@Jsequence_KJones'
p834
asg42
(lp835
NaS'@@@Jsequence_simul'
p836
asg791
(lp837
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p838
asg37
(lp839
I00
aS'@@uvplane_effect'
p840
asg43
(lp841
NaS'@@@Jsequence'
p842
assg120
Nsg135
S'2006-03-30 09:55'
p843
sS'HISTORY'
p844
(dp845
g29
S'2006-03-30 09:55: Derived from: MG_JEN_cps_GJones.inarg'
p846
sg31
S'2006-03-30 09:55: Derived from: MG_JEN_cps.inarg'
p847
ssg24
S'MG_JEN_cps'
p848
sg131
S'Predefined inarg record for solving for GJones on a Central Point Source'
p849
sS'save_file'
p850
S'MG_JEN_cps_GJones_protected.inarg'
p851
sS'file_filter'
p852
S'MG_JEN_cps*.inarg'
p853
sg52
g121
sg122
I01
sg123
g843
sg27
(dp854
S'11'
p855
S".modify():   ** OK ** (['solvegroup', 'Jsequence'])"
p856
sS'10'
p857
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p858
sS'13'
p859
S".modify():   ** OK ** (['tile_size', 'num_iter', 'epsilon'])"
p860
sS'12'
p861
S'  0: ./MG_JEN_cps. (qual=None): .modify(tile_size):   10  ->  1'
p862
sS'14'
p863
S".modify():   ** OK ** (['subtile_size_', 'tdeg_'])"
p864
sg29
S".modify():   ** OK ** (['uvplane_effect'])"
p865
sg31
S'  0: ./MG_JEN_cps. (qual=None): .modify(uvplane_effect):   False  ->  True'
p866
sg375
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p867
sg377
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p868
sg379
S'** JEN_inarg.separator(): : insert a solver'
p869
sg381
S'** JEN_inarg.separator(): : operations on input uv-data'
p870
sS'7'
p871
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p872
sg383
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.get_Sixpack()'
p873
sS'9'
p874
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p875
sS'8'
p876
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict_cps()'
p877
ssg136
(lp878
g22
aS'script_name'
p879
ag784
ag780
ag796
ag773
ag791
ag36
ag1
ag43
ag42
ag41
ag40
ag37
ag787
ag778
ag782
ag789
aS'./MG_JEN_exec.stream_control()'
p880
aS'./MG_JEN_Cohset.make_spigots()'
p881
ag612
aS'_JEN_inarg_separator_record:_2'
p882
ag616
ag3
aS'./MG_JEN_Cohset.predict_cps()'
p883
aS'./MG_JEN_Cohset.insert_solver()'
p884
aS'./MG_JEN_Cohset.make_sinks()'
p885
assg885
(dp886
S'fullDomainMux'
p887
I01
sS'output_col'
p888
S'PREDICT'
p889
sS'visu'
p890
I01
sS'flag'
p891
I00
sg22
(dp892
g24
S'MG_JEN_Cohset::make_sinks()'
p893
sg26
g885
sg135
S'2006-03-30 09:55'
p894
sg131
S'** Specific description of inarg record for: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-30 09:55'
p895
sg44
S'MG_JEN_Cohsetmake_sinks'
p896
sg46
g47
sg50
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-03-30 09:55'
p897
sg52
S'make_sinks'
p898
sg54
(dp899
g891
(lp900
I01
aI00
aS'@@flag'
p901
asg890
(lp902
I01
aI00
aS'@@visu'
p903
asg887
(lp904
I01
aI00
aS'@@fullDomainMux'
p905
asg888
(lp906
g889
aS'RESIDUALS'
p907
aS'DATA'
p908
aS'@@output_col'
p909
asS'visu_array_config'
p910
(lp911
I01
aI00
aS'@@visu_array_config'
p912
assg120
Nsg125
g369
sg123
g894
sg127
S'MG_JEN_Cohset'
p913
sg129
(dp914
g891
I00
sg890
I00
sg887
I00
sg910
I00
ssg122
I00
sg136
(lp915
g22
ag888
ag910
ag890
ag891
ag887
asg138
(dp916
g891
S'if True, insert a flagger for the output uv-data'
p917
sg890
S'if True, visualise the output uv-data'
p918
sg887
S'if True, attach an extra VisDataMux'
p919
sg888
S'name of the logical (VisTile) output column'
p920
sg910
S'if True, visualise the array config (from MS)'
p921
ssg48
S'Make sink nodes in the given Cohset object'
p922
ssg910
I01
ssg791
I1
sg881
(dp923
g891
I00
sg890
I01
sg22
(dp924
g24
S'MG_JEN_Cohset::make_spigots()'
p925
sg26
g881
sg135
S'2006-03-30 09:55'
p926
sg33
(dp927
S'input_col'
p928
I01
ssg44
S'MG_JEN_Cohsetmake_spigots'
p929
sg46
g47
sg50
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-30 09:55'
p930
sg52
S'make_spigots'
p931
sg54
(dp932
g891
(lp933
I01
aI00
aS'@@flag'
p934
asS'MS_corr_index'
p935
(lp936
(lp937
I0
aI1
aI2
aI3
aa(lp938
I0
aI-1
aI-1
aI1
aa(lp939
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p940
asg928
(lp941
g908
ag889
ag907
aS'@@input_col'
p942
asg890
(lp943
I01
aI00
aS'@@visu'
p944
assg120
Nsg125
g369
sg123
g926
sg127
S'MG_JEN_Cohset'
p945
sg129
(dp946
g891
I00
sg890
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-03-30 09:55'
p947
sg122
I00
sg136
(lp948
g22
ag928
ag935
ag890
ag891
asg138
(dp949
g891
S'if True, insert a flagger for the input uv-data'
p950
sg935
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p951
sg928
S'name of the logical (VisTile) input column'
p952
sg890
S'if True, visualise the input uv-data'
p953
ssg48
S'Make spigot nodes in the given Cohset object'
p954
ssg928
g908
sg935
(lp955
I0
aI1
aI2
aI3
assg43
Nsg41
Nsg780
I00
sg796
g816
sg37
I01
sg883
(dp956
g1
S'@@polrep'
p957
sg36
S'@@stations'
p958
sg22
(dp959
g24
S'MG_JEN_Cohset::predict_cps()'
p960
sg26
g883
sg33
(dp961
g41
I01
sg42
I01
sg43
I01
sg1
I01
sg36
I01
ssg44
S'MG_JEN_Cohsetpredict_cps'
p962
sg46
g47
sg50
S'MG_JEN_Cohset::predict_cps()  version=20mar2006  defined=2006-03-30 09:55'
p963
sg52
S'predict_cps'
p964
sg54
(dp965
g41
(lp966
NaS'@@@Jsequence_KJones'
p967
asg42
(lp968
NaS'@@@Jsequence_simul'
p969
asg43
(lp970
NaS'@@@Jsequence'
p971
asg1
(lp972
g2
ag59
ag957
asg36
(lp973
(lp974
I0
aI1
aI2
aI3
aI4
aa(lp975
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp976
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp977
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag103
ag958
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p978
sg125
S'20mar2006'
p979
sg127
S'MG_JEN_Cohset'
p980
sg131
S'** Specific description of inarg record for: MG_JEN_Cohset::predict_cps()  version=20mar2006  defined=2006-03-30 09:55'
p981
sg133
(dp982
g1
I00
sg36
I00
ssg135
g978
sg136
(lp983
g22
ag36
ag1
ag43
ag42
ag41
asg138
(dp984
g41
g151
sg42
g151
sg43
g151
sg1
g141
sg36
g155
ssg48
S'Obsolete (upward compatibility) version of .predict_cps()'
p985
ssg41
Nsg42
Nsg43
Nssg879
g848
sg789
Nsg778
I00
sg36
g808
sg880
(dp986
S'channel_start_index'
p987
I10
sS'data_column_name'
p988
g908
sS'predict_column'
p989
S'CORRECTED_DATA'
p990
sg773
S'@@ms_name'
p991
sg22
(dp992
g24
S'MG_JEN_exec::stream_control()'
p993
sg26
g880
sg33
(dp994
g773
I01
sg791
I01
ssg44
S'MG_JEN_execstream_control'
p995
sg755
(dp996
g773
g798
ssg46
g47
sg50
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p997
sg52
S'stream_control'
p998
sg54
(dp999
g987
(lp1000
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p1001
asg988
(lp1002
g908
ag990
aS'@@data_column_name'
p1003
asg989
(lp1004
g908
ag990
aS'MODEL_DATA'
p1005
aS'@@predict_column'
p1006
asg773
(lp1007
g774
ag991
asg791
(lp1008
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p1009
asS'channel_increment'
p1010
(lp1011
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p1012
asS'channel_end_index'
p1013
(lp1014
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p1015
asS'write_flags'
p1016
(lp1017
I01
aI00
aS'@@write_flags'
p1018
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p1019
sg125
S'20jan2006'
p1020
sg127
S'MG_JEN_exec'
p1021
sg129
(dp1022
g1016
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p1023
sg133
(dp1024
g773
I00
sg791
I00
ssg135
g1019
sg136
(lp1025
g22
ag773
ag791
ag988
ag987
ag1013
ag1010
ag1016
ag989
asg138
(dp1026
g987
S'(inputrec.sel) index of first selected freq channel'
p1027
sg988
S'(inputrec) MS input column'
p1028
sg989
S'MS output column to be associated with the VisTile predict-column'
p1029
sg773
g786
sg791
g792
sg1010
S'(inputrec.sel) take every nth channel (1=all)'
p1030
sg1013
S'(inputrec.sel) index of last selected freq channel'
p1031
sg1016
S'(outputrec) if True, write flags to MS'
p1032
ssg48
S'** Description of script: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-03-30 09:55'
p1033
ssg791
g1009
sg1010
I1
sg1013
I50
sg1016
I00
ssg782
I00
sg784
I01
sg882
(dp1034
g614
S'insert a solver'
p1035
ssg787
I01
sg42
Nsg884
(dp1036
S'correct_after'
p1037
I01
sg778
S'@@master_reqseq'
p1038
sS'condeq_unop'
p1039
Nsg890
I01
sg782
S'@@redun'
p1040
sS'solver_subtree'
p1041
NsS'subtract_after'
p1042
I00
sg787
S'@@chain_solvers'
p1043
sg22
(dp1044
g24
S'MG_JEN_Cohset::insert_solver()'
p1045
sg26
g884
sg33
(dp1046
g778
I01
sg782
I01
sg1041
I01
sg787
I01
sS'flag_residuals'
p1047
I01
sg789
I01
ssg44
S'MG_JEN_Cohsetinsert_solver'
p1048
sg46
g47
sg50
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-30 09:55'
p1049
sg52
S'insert_solver'
p1050
sg54
(dp1051
g1037
(lp1052
I01
aI00
aS'@@correct_after'
p1053
asg778
(lp1054
I01
aI00
ag1038
asg1039
(lp1055
NaS'Abs'
p1056
aS'Arg'
p1057
aS'@@condeq_unop'
p1058
asg890
(lp1059
I01
aI00
aS'@@visu'
p1060
asg782
(lp1061
I01
aI00
ag1040
asg1041
(lp1062
NaS'@@solver_subtree'
p1063
asg1042
(lp1064
I01
aI00
aS'@@subtract_after'
p1065
asg787
(lp1066
I01
ag1043
asg1047
(lp1067
I01
aI00
aS'@@flag_residuals'
p1068
asg789
(lp1069
Na(lp1070
I5
aI2
aa(lp1071
I2
aI2
aa(lp1072
I3
aI3
aaS'@@num_cells'
p1073
assg120
Nsg122
I00
sg123
S'2006-03-30 09:55'
p1074
sg125
g369
sg127
S'MG_JEN_Cohset'
p1075
sg129
(dp1076
g1037
I00
sg778
I00
sg890
I00
sg782
I00
sg1042
I00
sg1047
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-03-30 09:55'
p1077
sg27
(dp1078
g31
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p1079
ssg135
g1074
sg133
(dp1080
g782
I00
sg787
I00
sg778
I00
sg789
I00
ssg136
(lp1081
g22
ag1041
ag782
ag789
ag787
ag778
ag1039
ag890
ag1042
ag1037
ag1047
aS'./MG_JEN_Cohset.solver_subtree()'
p1082
asg138
(dp1083
g1037
S'if True, correct measured with predicted.Joneset'
p1084
sg778
g779
sg1039
S'Optional unary operation on Condeq inputs'
p1085
sg890
S'if True, include full visualisation'
p1086
sg782
g783
sg1041
S'solver subtree qualifier(s)'
p1087
sg1042
S'if True, subtract predicted from measured'
p1088
sg787
g788
sg1047
S'if True, flag the residuals'
p1089
sg789
g790
ssg48
S'insert one or more solver subtrees in the data stream'
p1090
ssg789
g1073
sg1082
(dp1091
S'rmin'
p1092
NsS'setBalanced'
p1093
I00
sg890
I01
sS'epsilon'
p1094
F0.0001
sS'rmax'
p1095
NsS'derivative_eps'
p1096
F1e-08
sS'usesvd'
p1097
I01
sS'debug_level'
p1098
I10
sS'solvegroup'
p1099
(lp1100
g355
asg22
(dp1101
g24
S'MG_JEN_Cohset::solver_subtree()'
p1102
sg26
g1082
sg27
(dp1103
g31
S"  2: ...../MG_JEN_Cohset.solver_subtree() (qual=None): .modify(solvegroup):   []  ->  ['GJones']"
p1104
ssg33
(dp1105
g1098
I01
sg1096
I01
sg1093
I01
sS'epsval'
p1106
I01
sg789
I00
ssg44
S'MG_JEN_Cohsetsolver_subtree'
p1107
sg46
g47
sg48
S'Make a solver-subtree for the given Condeq Cohset'
p1108
sg50
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-30 09:55'
p1109
sg52
S'solver_subtree'
p1110
sg54
(dp1111
g1092
(lp1112
NaI100
aI200
aI500
aS'@@rmin'
p1113
asg890
(lp1114
I01
aI00
aS'@@visu'
p1115
asg1094
(lp1116
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p1117
asS'colin_factor'
p1118
(lp1119
F1e-08
aF0.0
aS'@@colin_factor'
p1120
asg1095
(lp1121
NaI500
aI1000
aI2000
aS'@@rmax'
p1122
asg1096
(lp1123
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@derivative_eps'
p1124
asg1097
(lp1125
I01
aI00
aS'@@usesvd'
p1126
asg1098
(lp1127
I10
aS'@@debug_level'
p1128
asg1099
(lp1129
(lp1130
a(lp1131
g355
aa(lp1132
S'Ggain'
p1133
aa(lp1134
S'Gphase'
p1135
aa(lp1136
S'Gpol1'
p1137
aa(lp1138
S'Gpol2'
p1139
aa(lp1140
g363
aa(lp1141
g363
aS'stokesU'
p1142
aa(lp1143
g363
aS'stokesQ'
p1144
aa(lp1145
g363
aS'stokesV'
p1146
aa(lp1147
S'stokesQU'
p1148
ag363
aa(lp1149
S'stokesQUV'
p1150
ag363
aa(lp1151
g355
aS'stokesI'
p1152
aa(lp1153
g1152
aa(lp1154
S'stokesIQU'
p1155
aa(lp1156
S'stokesIQUV'
p1157
aa(lp1158
S'stokesIV'
p1159
aa(lp1160
g1148
aa(lp1161
g1150
aa(lp1162
g355
aS'DJones'
p1163
aa(lp1164
g1163
aa(lp1165
S'Dang'
p1166
aa(lp1167
S'Dell'
p1168
aa(lp1169
S'Dreal'
p1170
aa(lp1171
S'Dimag'
p1172
aa(lp1173
g355
ag1163
ag290
aa(lp1174
g290
aa(lp1175
g355
ag82
aa(lp1176
g82
aa(lp1177
S'Breal'
p1178
aa(lp1179
S'Bimag'
p1180
aa(lp1181
S'Bpol1'
p1182
aa(lp1183
S'Bpol2'
p1184
aaS'@@solvegroup'
p1185
asg1106
(lp1186
F1e-08
aF0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsval'
p1187
asg789
(lp1188
Na(lp1189
I5
aI2
aa(lp1190
I2
aI2
aa(lp1191
I3
aI3
aaS'@@num_cells'
p1192
asg1093
(lp1193
I01
aI00
aS'@@setBalanced'
p1194
asS'num_iter'
p1195
(lp1196
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1197
asS'condition'
p1198
(lp1199
NaS'Gphase_X_sum=0.0'
p1200
aS'Gphase_Y_sum=0.0'
p1201
a(lp1202
g1200
ag1201
aa(lp1203
S'Gphase_X_first=0.0'
p1204
aS'Gphase_Y_first=0.0'
p1205
aa(lp1206
S'Gphase_X_last=0.0'
p1207
aS'Gphase_Y_last=0.0'
p1208
aaS'Dang_sum=0.0'
p1209
a(lp1210
S'Bimag_X_sum=0.0'
p1211
aS'Bimag_Y_sum=0.0'
p1212
aa(lp1213
S'Breal_X_product=1.0'
p1214
aS'Breal_Y_product=1.0'
p1215
aaS'@@condition'
p1216
asS'history'
p1217
(lp1218
I01
aI00
aS'@@history'
p1219
assg120
Nsg125
S'20dec2005'
p1220
sg123
S'2006-03-30 09:55'
p1221
sg127
S'MG_JEN_Cohset'
p1222
sg129
(dp1223
g1097
I00
sg1093
I00
sg890
I00
sg1217
I00
ssg131
S'** Specific description of inarg record for: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-03-30 09:55'
p1224
sg122
I00
sg135
g1221
sg136
(lp1225
g22
ag1099
ag1198
ag1092
ag1095
ag789
ag1195
ag1094
ag1106
ag1096
ag1118
ag1097
ag1093
ag1098
ag890
ag1217
asg138
(dp1226
g1092
S'if specified, only use baselines>=rmin'
p1227
sg890
S'if True, include visualisation'
p1228
sg1094
S'iteration control criterion...'
p1229
sg1118
S'colinearity factor'
p1230
sg1095
S'if specified, only use baselines<=rmax'
p1231
sg1096
S'NEW: also iteration control...'
p1232
sg1097
S'if True, use Singular Value Decomposition (SVD)'
p1233
sg1098
S'solver debug_level'
p1234
sg1099
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [JJones,stokesU]:     actually solves for U!\n- [JJones,stokesQ]:     -> zero Q(?), but better freq sol(?)\n- [JJones,stokesV]:     -> punit V(?)...\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p1235
sg1106
S'NEW: WNB version of epsilon....'
p1236
sg789
g790
sg1093
S'NEW: if True, add (..) to diagonal, otherwise multiply (1+lambda)'
p1237
sg1195
S'max number of iterations (now also in fitter)'
p1238
sg1198
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p1239
sg1217
S'if True, include history collection of metrics'
p1240
sssg789
Nsg1106
F1e-08
sg1217
I01
sg1195
I5
sg1198
Nsg1118
F0.0
ssg1047
I00
ss.