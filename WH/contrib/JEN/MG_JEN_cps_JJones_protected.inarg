(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stations'
p7
S'@@stations'
p8
sg1
S'@@polrep'
p9
sS'_JEN_inarg_CTRL_record:'
p10
(dp11
S'target_definition'
p12
S'MG_JEN_Joneset::BJones()'
p13
sS'localscope'
p14
g5
sS'last_edited'
p15
S'2006-02-26 14:20'
p16
sS'hide'
p17
(dp18
S'@Jsequence'
p19
I01
sg1
I01
sS'stddev'
p20
I00
sg7
I01
ssS'barescope'
p21
S'MG_JEN_JonesetBJones'
p22
sS'generic'
p23
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p24
sS'target_dir'
p25
S'.'
p26
sS'oneliner'
p27
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p28
sS'target_function'
p29
S'BJones'
p30
sS'choice'
p31
(dp32
g19
(lp33
S'BJones'
p34
aS'@@@Jsequence'
p35
asg1
(lp36
g2
aS'circular'
p37
ag9
asg20
(lp38
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p39
asg7
(lp40
(lp41
I0
aag8
assS'specific'
p42
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p43
sS'qual'
p44
NsS'version'
p45
S'16dec2005'
p46
sS'datetime_defined'
p47
g16
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'mutable'
p50
(dp51
g1
I00
sg7
I00
ssS'protected'
p52
I00
sS'order'
p53
(lp54
g10
ag7
ag1
ag19
ag20
asS'help'
p55
(dp56
g19
S'list membership indication (used in JEN_inargGui)'
p57
sg1
S'polarisation representation'
p58
sg20
S'scatter in default c00 funklet values'
p59
sg7
S'list of station names/numbers'
p60
ssS'description'
p61
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p62
ssg20
F1.1000000000000001
sg19
g34
ssg1
S'@@polrep'
p63
sg7
S'@@stations'
p64
sS'./MG_JEN_Joneset.DJones_WSRT()'
p65
(dp66
g1
S'@@polrep'
p67
sg7
S'@@stations'
p68
sS'coupled_XY_Dell'
p69
I01
sg10
(dp70
g12
S'MG_JEN_Joneset::DJones_WSRT()'
p71
sg14
g65
sg15
S'2006-02-26 14:20'
p72
sg17
(dp73
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetDJones_WSRT'
p74
sg23
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p75
sg25
g26
sg27
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p76
sg29
S'DJones_WSRT'
p77
sg31
(dp78
g1
(lp79
g2
ag37
ag67
asg7
(lp80
(lp81
I0
aag68
asg69
(lp82
I01
aI00
aS'@@coupled_XY_Dell'
p83
asg20
(lp84
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p85
asS'coupled_XY_Dang'
p86
(lp87
I01
aI00
aS'@@coupled_XY_Dang'
p88
asg19
(lp89
S'DJones_WSRT'
p90
aS'@@@Jsequence'
p91
assg42
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p92
sg44
Nsg45
g46
sg47
g72
sg48
S'MG_JEN_Joneset'
p93
sS'editable'
p94
(dp95
g86
I00
sg69
I00
ssg50
(dp96
g1
I00
sg7
I00
ssg52
I00
sg53
(lp97
g10
ag7
ag1
ag19
ag86
ag69
ag20
asg55
(dp98
g1
g58
sg7
g60
sg69
S'if True, XDell = -YDell per station'
p99
sg20
g59
sg86
S'if True, XDang = YDang per station'
p100
sg19
g57
ssg61
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p101
ssg20
F1.1000000000000001
sg86
I01
sg19
g90
ssS'ft_coeff_scale'
p102
F0.0
sS'simul'
p103
S'@@simul'
p104
sS'uvplane_effect'
p105
S'@@uvplane_effect'
p106
sS'parmtable'
p107
S'@@parmtable'
p108
sg10
(dp109
g14
g3
sg55
(dp110
g1
g58
sg7
g60
sg102
S'scale of polc_ft non-c00 coeff'
p111
sg103
S'if True, use simulated (Leafset) Jones parameter values'
p112
sg105
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p113
sg107
S'name of the MeqParm table to be used'
p114
sS'Jsequence'
p115
S'sequence of Jones matrices to be used'
p116
sg19
g57
ssg25
g26
sg48
S'MG_JEN_Cohset'
p117
sS'JEN_inargGUI_ident'
p118
(dp119
g115
I55
ssg17
(dp120
g1
I01
sg7
I01
sg102
I01
sg103
I01
sg105
I01
sg107
I01
sg19
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p121
sg45
S'25dec2005'
p122
sg50
(dp123
g105
I00
sg7
I00
sg107
I00
sg1
I00
sg103
I00
ssg61
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p124
sg94
(dp125
g103
I00
ssg27
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p126
sg31
(dp127
g1
(lp128
g2
ag37
ag63
asg7
(lp129
(lp130
I0
aag64
asg102
(lp131
F0.0
aS'@@ft_coeff_scale'
p132
asg103
(lp133
I01
aI00
ag104
asg105
(lp134
I00
ag106
asg107
(lp135
NaS'test'
p136
ag108
asg115
(lp137
(lp138
S'GJones'
p139
aa(lp140
g34
aa(lp141
S'FJones'
p142
aa(lp143
S'KJones'
p144
aa(lp145
g90
aa(lp146
g139
ag90
aa(lp147
S'JJones'
p148
aa(lp149
aS'@@Jsequence'
p150
asg19
(lp151
NaS'@@@Jsequence'
p152
assg44
Nsg15
S'2006-02-26 14:20'
p153
sg12
S'MG_JEN_Cohset::Jones()'
p154
sg21
S'MG_JEN_CohsetJones'
p155
sg29
S'Jones'
p156
sg42
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p157
sg52
I00
sg47
g153
sS'MESSAGE'
p158
(dp159
S'1'
p160
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p161
sS'0'
p162
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p163
sS'3'
p164
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p165
sS'2'
p166
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p167
sS'5'
p168
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p169
sS'4'
p170
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p171
sS'6'
p172
S".modify( Jsequence ): []  ->  ['JJones']"
p173
ssg53
(lp174
g10
ag7
ag1
ag19
ag107
ag105
ag102
ag103
ag115
aS'./MG_JEN_Joneset.GJones()'
p175
aS'./MG_JEN_Joneset.FJones()'
p176
ag5
aS'./MG_JEN_Joneset.KJones()'
p177
ag65
aS'./MG_JEN_Joneset.JJones()'
p178
assg177
(dp179
g7
S'@@stations'
p180
sg103
g104
sg1
S'@@polrep'
p181
sg10
(dp182
g12
S'MG_JEN_Joneset::KJones()'
p183
sg14
g177
sg15
S'2006-02-26 14:20'
p184
sg17
(dp185
g19
I01
sg1
I01
sg7
I01
ssg21
S'MG_JEN_JonesetKJones'
p186
sg23
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p187
sg25
g26
sg27
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p188
sg29
S'KJones'
p189
sg31
(dp190
g19
(lp191
g144
aS'@@@Jsequence'
p192
asg1
(lp193
g2
ag37
ag181
asg7
(lp194
(lp195
I0
aag180
assg42
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p196
sg44
Nsg45
S'12dec2005'
p197
sg47
g184
sg48
S'MG_JEN_Joneset'
p198
sg50
(dp199
g1
I00
sg7
I00
ssg52
I00
sg53
(lp200
g10
ag7
ag1
ag19
asg55
(dp201
g19
g57
sg1
g58
sg7
g60
ssg61
S'defines diagonal KJones matrices for DFT Fourier kernel'
p202
ssg19
g144
ssg178
(dp203
g7
S'@@stations'
p204
sg1
S'@@polrep'
p205
sg10
(dp206
g12
S'MG_JEN_Joneset::JJones()'
p207
sg14
g178
sg15
S'2006-02-26 14:20'
p208
sg17
(dp209
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetJJones'
p210
sg23
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p211
sg25
g26
sg27
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p212
sg29
S'JJones'
p213
sg31
(dp214
g19
(lp215
g148
aS'@@@Jsequence'
p216
asg1
(lp217
g2
ag37
ag205
asg20
(lp218
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p219
asg7
(lp220
(lp221
I0
aag204
assg42
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p222
sg44
Nsg45
S'14feb2006'
p223
sg118
(dp224
g20
I59
ssg47
g208
sg48
S'MG_JEN_Joneset'
p225
sg50
(dp226
g1
I00
sg7
I00
ssg52
I00
sg53
(lp227
g10
ag7
ag1
ag19
ag20
asg55
(dp228
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p229
ssg20
F1.1000000000000001
sg19
g148
ssg175
(dp230
g1
S'@@polrep'
p231
sg7
S'@@stations'
p232
sg10
(dp233
g12
S'MG_JEN_Joneset::GJones()'
p234
sg14
g175
sg15
S'2006-02-26 14:20'
p235
sg17
(dp236
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetGJones'
p237
sg23
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p238
sg25
g26
sg27
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p239
sg29
S'GJones'
p240
sg31
(dp241
g19
(lp242
g139
aS'@@@Jsequence'
p243
asS'Gpolar'
p244
(lp245
I01
aI00
aS'@@Gpolar'
p246
asg1
(lp247
g2
ag37
ag231
asg20
(lp248
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p249
asg7
(lp250
(lp251
I0
aag232
assg42
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p252
sg44
Nsg45
S'15dec2005'
p253
sg47
g235
sg48
S'MG_JEN_Joneset'
p254
sg94
(dp255
g244
I00
ssg50
(dp256
g1
I00
sg7
I00
ssg52
I00
sg53
(lp257
g10
ag7
ag1
ag19
ag244
ag20
asg55
(dp258
g19
g57
sg244
S'if True, use MeqPolar, otherwise MeqToComplex'
p259
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p260
ssg20
F1.1000000000000001
sg244
I00
sg19
g139
ssg115
(lp261
g148
asg176
(dp262
g7
S'@@stations'
p263
sg1
S'@@polrep'
p264
sg10
(dp265
g12
S'MG_JEN_Joneset::FJones()'
p266
sg14
g176
sg15
S'2006-02-26 14:20'
p267
sg17
(dp268
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetFJones'
p269
sg23
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p270
sg25
g26
sg27
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p271
sg29
S'FJones'
p272
sg31
(dp273
g19
(lp274
g142
aS'@@@Jsequence'
p275
asg1
(lp276
g2
ag37
ag264
asg20
(lp277
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p278
asg7
(lp279
(lp280
I0
aag263
assg42
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p281
sg44
Nsg45
g46
sg47
g267
sg48
S'MG_JEN_Joneset'
p282
sg50
(dp283
g1
I00
sg7
I00
ssg52
I00
sg53
(lp284
g10
ag7
ag1
ag19
ag20
asg55
(dp285
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'defines diagonal FJones Faraday rotation matrices'
p286
ssg20
F1.1000000000000001
sg19
g142
ssg19
NssS'./MG_JEN_Cohset.predict()'
p287
(dp288
g1
S'@@polrep'
p289
sg10
(dp290
g12
S'MG_JEN_Cohset::predict()'
p291
sg14
g287
sg118
(dp292
sg17
(dp293
g1
I01
sg7
I01
ssg21
S'MG_JEN_Cohsetpredict'
p294
sg23
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p295
sg25
g26
sg61
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p296
sg27
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p297
sg29
S'predict'
p298
sg31
(dp299
g1
(lp300
g2
ag37
ag289
asg7
(lp301
(lp302
I0
aI1
aI2
aI3
aI4
aa(lp303
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp304
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp305
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p306
aS'@@stations'
p307
assg42
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p308
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p309
sg48
S'MG_JEN_Cohset'
p310
sg50
(dp311
g1
I00
sg7
I00
ssg52
I00
sg15
g309
sg53
(lp312
g10
ag7
ag1
asg55
(dp313
g1
S'polarisation representation'
p314
sg7
S'the (subset of) stations to be used'
p315
sssg7
g307
ssS'script_name'
p316
S'MG_JEN_cps'
p317
sS'redun'
p318
I00
sS'ms_name'
p319
S'D1.MS'
p320
sg107
Nsg10
(dp321
g14
S'./MG_JEN_cps.'
p322
sg55
(dp323
g1
g58
sS'master_reqseq'
p324
S'if True, use a master reqseq for solver(s)'
p325
sg7
g60
sS'insert_flagger'
p326
S'if True, insert a flagger'
p327
sg318
S'if True, redundant spacing calibration'
p328
sS'insert_solver'
p329
S'if True, insert a solver'
p330
sg102
g111
sg319
S'name of the (AIPS++) Measurement Set'
p331
sS'chain_solvers'
p332
S'if True, chain the solvers (recommended)'
p333
sS'num_cells'
p334
S'if defined, ModRes argument [ntime,nfreq]'
p335
sg107
g114
sS'tile_size'
p336
S'(inputrec) size (in time-slots) of the input data-tile'
p337
sg103
g112
sg105
g113
sg19
g57
ssS'reference'
p338
I00
sg25
g26
sg48
S'MG_JEN_cps'
p339
sg118
(dp340
g1
I7
sg7
I6
sg326
I2
sg318
I15
sg329
I1
sg103
I12
sg319
I4
sg107
I9
sg316
I0
sg334
I16
sg336
I5
sg105
I10
ssg17
(dp341
g324
I01
sg318
I00
sS'last_changed'
p342
I01
sg102
I01
sg105
I00
sg332
I01
sg334
I00
sg19
I01
ssg23
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p343
sg45
g253
sg61
g343
sg94
(dp344
g324
I00
sg318
I00
sg326
I00
sg342
I00
sg329
I00
sg103
I00
ssg27
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p345
sg31
(dp346
g1
(lp347
g2
ag37
aS'@@polrep'
p348
asg324
(lp349
I01
aI00
aS'@@master_reqseq'
p350
asg7
(lp351
(lp352
I0
aaS'@@stations'
p353
asg326
(lp354
I01
aI00
aS'@@insert_flagger'
p355
asg318
(lp356
I01
aI00
aS'@@redun'
p357
asg329
(lp358
I01
aI00
aS'@@insert_solver'
p359
asg342
(lp360
S'd30jan2006'
p361
aS'@@last_changed'
p362
asg319
(lp363
g320
aS'@@ms_name'
p364
asg332
(lp365
I01
aS'@@chain_solvers'
p366
asg334
(lp367
Na(lp368
I5
aI2
aa(lp369
I2
aI2
aa(lp370
I3
aI3
aaS'@@num_cells'
p371
asg107
(lp372
Nag136
aS'@@parmtable'
p373
asg336
(lp374
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p375
asg103
(lp376
I01
aI00
aS'@@simul'
p377
asg102
(lp378
F0.0
aS'@@ft_coeff_scale'
p379
asg105
(lp380
I00
aS'@@uvplane_effect'
p381
asg19
(lp382
NaS'@@@Jsequence'
p383
assg15
S'2006-02-26 14:20'
p384
sS'HISTORY'
p385
(dp386
g160
S'2006-02-26 14:20: Derived from: MG_JEN_cps_JJones.inarg'
p387
sg162
S'2006-02-26 14:20: Derived from: MG_JEN_cps.inarg'
p388
ssg12
g317
sS'save_file'
p389
S'MG_JEN_cps_JJones_protected.inarg'
p390
sS'file_filter'
p391
S'MG_JEN_cps*.inarg'
p392
sg29
S''
p393
sg42
S'<specific>'
p394
sS'browse'
p395
(dp396
g319
S'*.MS'
p397
ssg52
I01
sg47
g384
sg158
(dp398
S'11'
p399
S".modify(): found ={'Jsequence': 1, 'solvegroup': 1}"
p400
sS'10'
p401
S'.modify(): stripped off: _JEN_inarg_option'
p402
sS'13'
p403
S".modify(): found ={'I0': 1, 'Qpct': 1, 'Vpct': 1, 'SI': 1, 'RM': 1, 'Upct': 1, 'punit': 1}"
p404
sS'12'
p405
S'.modify(): stripped off: _JEN_inarg_option'
p406
sg160
S'.modify( uvplane_effect ): False  ->  True'
p407
sg162
S'.modify(): stripped off: _JEN_inarg_option'
p408
sg164
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p409
sg166
S".modify(): found ={'uvplane_effect': 1}"
p410
sg168
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p411
sg170
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p412
sS'7'
p413
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p414
sg172
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p415
sS'9'
p416
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p417
sS'8'
p418
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p419
ssg53
(lp420
g10
ag316
ag329
ag326
ag342
ag319
ag336
ag7
ag1
ag19
ag107
ag105
ag102
ag103
ag332
ag324
ag318
ag334
aS'./MG_JEN_exec.stream_control()'
p421
aS'./MG_JEN_Cohset.make_spigots()'
p422
aS'./MG_JEN_Sixpack.newstar_source()'
p423
ag3
ag287
aS'./MG_JEN_Cohset.insert_solver()'
p424
aS'./MG_JEN_Cohset.make_sinks()'
p425
assg425
(dp426
S'fullDomainMux'
p427
I01
sS'output_col'
p428
S'PREDICT'
p429
sS'visu'
p430
I01
sS'flag'
p431
I00
sg10
(dp432
g12
S'MG_JEN_Cohset::make_sinks()'
p433
sg14
g425
sg118
(dp434
g431
I87
sg430
I86
sg427
I88
sg428
I84
sS'visu_array_config'
p435
I85
ssg21
S'MG_JEN_Cohsetmake_sinks'
p436
sg23
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p437
sg25
g26
sg61
S'Make sink nodes in the given Cohset object'
p438
sg27
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p439
sg29
S'make_sinks'
p440
sg31
(dp441
g431
(lp442
I01
aI00
aS'@@flag'
p443
asg435
(lp444
I01
aI00
aS'@@visu_array_config'
p445
asg428
(lp446
g429
aS'RESIDUALS'
p447
aS'DATA'
p448
aS'@@output_col'
p449
asg427
(lp450
I01
aI00
aS'@@fullDomainMux'
p451
asg430
(lp452
I01
aI00
aS'@@visu'
p453
assg42
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p454
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p455
sg48
S'MG_JEN_Cohset'
p456
sg94
(dp457
g431
I00
sg435
I00
sg427
I00
sg430
I00
ssg52
I00
sg15
g455
sg53
(lp458
g10
ag428
ag435
ag430
ag431
ag427
asg55
(dp459
g431
S'if True, insert a flagger for the output uv-data'
p460
sg435
S'if True, visualise the array config (from MS)'
p461
sg428
S'name of the logical (VisTile) output column'
p462
sg427
S'if True, attach an extra VisDataMux'
p463
sg430
S'if True, visualise the output uv-data'
p464
sssg435
I01
ssg336
I10
sg422
(dp465
S'MS_corr_index'
p466
(lp467
I0
aI1
aI2
aI3
asg431
I00
sg10
(dp468
g12
S'MG_JEN_Cohset::make_spigots()'
p469
sg14
g422
sg118
(dp470
g431
I28
sg466
I26
sg430
I27
ssg17
(dp471
S'input_col'
p472
I01
ssg21
S'MG_JEN_Cohsetmake_spigots'
p473
sg23
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p474
sg25
g26
sg61
S'Make spigot nodes in the given Cohset object'
p475
sg27
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p476
sg29
S'make_spigots'
p477
sg31
(dp478
g431
(lp479
I01
aI00
aS'@@flag'
p480
asg466
(lp481
g467
a(lp482
I0
aI-1
aI-1
aI1
aa(lp483
I0
aI-1
aI-1
aI3
aaS'@@'
p484
aS'@@MS_corr_index'
p485
asg472
(lp486
g448
ag429
ag447
aS'@@input_col'
p487
asg430
(lp488
I01
aI00
aS'@@visu'
p489
assg42
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p490
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p491
sg48
S'MG_JEN_Cohset'
p492
sg94
(dp493
g431
I00
sg430
I00
ssg52
I00
sg15
g491
sg53
(lp494
g10
ag472
ag466
ag430
ag431
asg55
(dp495
g431
S'if True, insert a flagger for the input uv-data'
p496
sg466
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p497
sg472
S'name of the logical (VisTile) input column'
p498
sg430
S'if True, visualise the input uv-data'
p499
sssg472
g448
sg430
I01
ssg19
Nsg326
I00
sg342
g361
sg105
I01
sg334
Nsg423
(dp500
S'f0'
p501
F1000000.0
sS'major'
p502
F0.0
sS'unsolvable'
p503
I00
sS'from_LSM'
p504
NsS'name'
p505
NsS'I0'
p506
F1.0
sS'SI'
p507
NsS'Qpct'
p508
I10
sS'punit'
p509
S'QUV'
p510
sS'fsr_trace'
p511
I01
sS'shape'
p512
S'point'
p513
sS'pa'
p514
F0.0
sS'RA'
p515
F4.3570000000000002
sg107
NsS'RM'
p516
NsS'Upct'
p517
I-10
sS'Dec'
p518
F1.0920000000000001
sS'Vpct'
p519
I2
sS'minor'
p520
F0.0
sg10
(dp521
g14
g423
sg55
(dp522
g501
S'reference freq (Hz): I=I0 @ f=f0'
p523
sg502
S'major axis (arcsec)'
p524
sg503
S'if True, do NOT store solvegroup/parmgroup info'
p525
sg504
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p526
sg506
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p527
sg507
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p528
sg508
S'Stokes Q (percentage of I)'
p529
sg509
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p530
sg512
S'source shape'
p531
sg514
S'position angle (rad)'
p532
sg511
S'If True, attach to forest state record'
p533
sg107
S'name of the MeqParm table (AIPS++)'
p534
sg516
S'Intrinsic Rotation Measure (rad/m2)'
p535
sg517
S'Stokes U (percentage of I)'
p536
sg518
S'Declination (rad, J2000)'
p537
sg519
S'Stokes V (percentage of I)'
p538
sg520
S'minor axis (arcsec)'
p539
sg515
S'Right Ascension (rad, J2000)'
p540
ssg25
g26
sg48
S'MG_JEN_Sixpack'
p541
sg118
(dp542
g518
I42
sg504
I30
sg506
I34
sg508
I35
sg509
I29
sg507
I39
sg107
I32
sg515
I41
sg516
I38
sg517
I36
sg519
I37
ssg17
(dp543
g501
I01
sg502
I01
sg503
I01
sg504
I00
sg511
I01
sg509
I00
sg512
I01
sg514
I01
sg520
I01
sg505
I01
ssg23
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p544
sg45
S'10feb2006'
p545
sg395
(dp546
g504
S'*.lsm'
p547
ssg61
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p548
sg94
(dp549
g503
I00
sg511
I00
ssg27
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p550
sg31
(dp551
g501
(lp552
F1000000.0
aS'@@f0'
p553
asg502
(lp554
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p555
asg503
(lp556
I01
aI00
aS'@@unsolvable'
p557
asg504
(lp558
NaS'@@from_LSM'
p559
asg506
(lp560
F1.0
aF10.0
aS'@@I0'
p561
asg507
(lp562
NaF-0.69999999999999996
a(lp563
F0.44700000000000001
aF-0.184
aaS'@@SI'
p564
asg508
(lp565
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p566
asg509
(lp567
S'unpol'
p568
aS'unpol2'
p569
aS'unpol10'
p570
ag510
aS'QU'
p571
aS'Qonly'
p572
aS'Uonly'
p573
aS'Vonly'
p574
aS'3c147'
p575
aS'3c286'
p576
aS'3c48'
p577
aS'3c295'
p578
aS'RMtest'
p579
aS'SItest'
p580
aS'@@punit'
p581
asg511
(lp582
I01
aI00
aS'@@fsr_trace'
p583
asg512
(lp584
g513
aS'ell.gauss'
p585
aS'@@shape'
p586
asg514
(lp587
F0.0
aF1.0
aF-0.5
aS'@@pa'
p588
asg515
(lp589
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p590
asg107
(lp591
NaS'@@parmtable'
p592
asg516
(lp593
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p594
asg517
(lp595
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p596
asg518
(lp597
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p598
asg519
(lp599
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p600
asg520
(lp601
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p602
asg505
(lp603
NaS'@@name'
p604
assg44
Nsg15
S'2006-02-26 14:20'
p605
sg12
S'MG_JEN_Sixpack::newstar_source()'
p606
sg21
S'MG_JEN_Sixpacknewstar_source'
p607
sg29
S'newstar_source'
p608
sg42
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p609
sS'callback'
p610
(dp611
g509
I01
ssg52
I00
sg47
g605
sg158
(dp612
g160
S'.modify( Vpct ): None  ->  2'
p613
sg162
S'.modify( Qpct ): None  ->  10'
p614
sg164
S'.modify( punit ): unpol  ->  QUV'
p615
sg166
S'.modify( Upct ): None  ->  -10'
p616
ssg53
(lp617
g10
ag509
ag504
ag505
ag107
ag503
ag506
ag508
ag517
ag519
ag516
ag507
ag501
ag515
ag518
ag511
ag512
ag502
ag520
ag514
asssg324
I00
sg7
g352
sg421
(dp618
S'channel_start_index'
p619
I10
sS'data_column_name'
p620
g448
sS'predict_column'
p621
S'CORRECTED_DATA'
p622
sg319
S'@@ms_name'
p623
sg10
(dp624
g14
g421
sg55
(dp625
g619
S'(inputrec.sel) index of first selected freq channel'
p626
sg620
S'(inputrec) MS input column'
p627
sg621
S'MS output column to be associated with the VisTile predict-column'
p628
sg319
g331
sg336
g337
sS'channel_increment'
p629
S'(inputrec.sel) take every nth channel (1=all)'
p630
sS'channel_end_index'
p631
S'(inputrec.sel) index of last selected freq channel'
p632
sS'write_flags'
p633
S'(outputrec) if True, write flags to MS'
p634
ssg25
g26
sg48
S'MG_JEN_exec'
p635
sg118
(dp636
g619
I20
sg620
I19
sg621
I24
sg633
I23
sg631
I21
sg629
I22
ssg17
(dp637
g319
I01
sg336
I01
ssg23
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p638
sg45
S'20jan2006'
p639
sg50
(dp640
g319
I00
sg336
I00
ssg61
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p641
sg94
(dp642
g633
I00
ssg27
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p643
sg31
(dp644
g619
(lp645
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p646
asg620
(lp647
g448
ag622
aS'@@data_column_name'
p648
asg621
(lp649
g448
ag622
aS'MODEL_DATA'
p650
aS'@@predict_column'
p651
asg319
(lp652
g320
ag623
asg336
(lp653
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p654
asg629
(lp655
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p656
asg631
(lp657
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p658
asg633
(lp659
I01
aI00
aS'@@write_flags'
p660
assg44
Nsg15
S'2006-02-26 14:20'
p661
sg12
S'MG_JEN_exec::stream_control()'
p662
sg21
S'MG_JEN_execstream_control'
p663
sg29
S'stream_control'
p664
sg42
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p665
sg395
(dp666
g319
g397
ssg52
I00
sg47
g661
sg53
(lp667
g10
ag319
ag336
ag620
ag619
ag631
ag629
ag633
ag621
assg336
g654
sg629
I1
sg631
I50
sg633
I00
ssg102
F0.0
sg329
I01
sg103
I00
sg332
I01
sg424
(dp668
S'correct_after'
p669
I01
sg324
S'@@master_reqseq'
p670
sS'condeq_unop'
p671
Nsg430
I01
sg318
S'@@redun'
p672
sS'solver_subtree'
p673
NsS'subtract_after'
p674
I00
sg332
S'@@chain_solvers'
p675
sg10
(dp676
g14
g424
sg55
(dp677
g669
S'if True, correct measured with predicted.Joneset'
p678
sg324
g325
sg671
S'Optional unary operation on Condeq inputs'
p679
sg430
S'if True, include full visualisation'
p680
sg318
g328
sg673
S'solver subtree qualifier(s)'
p681
sg674
S'if True, subtract predicted from measured'
p682
sg332
g333
sS'flag_residuals'
p683
S'if True, flag the residuals'
p684
sg334
g335
ssg25
g26
sg48
S'MG_JEN_Cohset'
p685
sg118
(dp686
g674
I69
sg669
I70
sg671
I67
sg430
I68
ssg17
(dp687
g324
I01
sg318
I01
sg673
I01
sg332
I01
sg683
I01
sg334
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p688
sg45
g122
sg50
(dp689
g334
I00
sg332
I00
sg318
I00
sg324
I00
ssg61
S'insert one or more solver subtrees in the data stream'
p690
sg94
(dp691
g669
I00
sg324
I00
sg430
I00
sg318
I00
sg674
I00
sg683
I00
ssg27
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p692
sg31
(dp693
g669
(lp694
I01
aI00
aS'@@correct_after'
p695
asg324
(lp696
I01
aI00
ag670
asg671
(lp697
NaS'Abs'
p698
aS'Arg'
p699
aS'@@condeq_unop'
p700
asg430
(lp701
I01
aI00
aS'@@visu'
p702
asg318
(lp703
I01
aI00
ag672
asg673
(lp704
NaS'@@solver_subtree'
p705
asg674
(lp706
I01
aI00
aS'@@subtract_after'
p707
asg332
(lp708
I01
ag675
asg683
(lp709
I01
aI00
aS'@@flag_residuals'
p710
asg334
(lp711
Na(lp712
I5
aI2
aa(lp713
I2
aI2
aa(lp714
I3
aI3
aaS'@@num_cells'
p715
assg44
Nsg15
S'2006-02-26 14:20'
p716
sg12
S'MG_JEN_Cohset::insert_solver()'
p717
sg21
S'MG_JEN_Cohsetinsert_solver'
p718
sg29
S'insert_solver'
p719
sg42
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p720
sg52
I00
sg47
g716
sg158
(dp721
g162
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p722
ssg53
(lp723
g10
ag673
ag318
ag334
ag332
ag324
ag671
ag430
ag674
ag669
ag683
aS'./MG_JEN_Cohset.solver_subtree()'
p724
assg334
g715
sg724
(dp725
S'rmin'
p726
Nsg430
I01
sS'epsilon'
p727
F0.0001
sS'rmax'
p728
NsS'usesvd'
p729
I01
sS'debug_level'
p730
I10
sS'solvegroup'
p731
(lp732
g148
asg10
(dp733
g14
g724
sg55
(dp734
g726
S'if specified, only use baselines>=rmin'
p735
sg430
S'if True, include visualisation'
p736
sg727
S'iteration control criterion'
p737
sg728
S'if specified, only use baselines<=rmax'
p738
sg729
S'if True, use Singular Value Decomposition (SVD)'
p739
sg730
S'solver debug_level'
p740
sg731
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p741
sg334
g335
sS'history'
p742
S'if True, include history collection of metrics'
p743
sS'num_iter'
p744
S'max number of iterations'
p745
sS'condition'
p746
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p747
sS'colin_factor'
p748
S'colinearity factor'
p749
ssg25
g26
sg48
S'MG_JEN_Cohset'
p750
sg118
(dp751
g726
I74
sg430
I82
sg727
I78
sg728
I75
sg729
I80
sg731
I72
sg334
I76
sg742
I83
sg744
I77
sg746
I73
sg748
I79
ssg17
(dp752
g730
I01
sg334
I00
ssg23
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p753
sg45
S'20dec2005'
p754
sg61
S'Make a solver-subtree for the given Condeq Cohset'
p755
sg94
(dp756
g729
I00
sg742
I00
sg430
I00
ssg27
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p757
sg31
(dp758
g726
(lp759
NaI100
aI200
aI500
aS'@@rmin'
p760
asg430
(lp761
I01
aI00
aS'@@visu'
p762
asg727
(lp763
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p764
asg728
(lp765
NaI500
aI1000
aI2000
aS'@@rmax'
p766
asg729
(lp767
I01
aI00
aS'@@usesvd'
p768
asg730
(lp769
I10
aS'@@debug_level'
p770
asg731
(lp771
(lp772
a(lp773
g139
aa(lp774
S'Ggain'
p775
aa(lp776
S'Gphase'
p777
aa(lp778
S'Gpol1'
p779
aa(lp780
S'Gpol2'
p781
aa(lp782
g148
aa(lp783
g139
aS'stokesI'
p784
aa(lp785
g784
aa(lp786
S'stokesIQU'
p787
aa(lp788
S'stokesIQUV'
p789
aa(lp790
g139
aS'DJones'
p791
aa(lp792
g791
aa(lp793
S'Dang'
p794
aa(lp795
S'Dell'
p796
aa(lp797
S'Dreal'
p798
aa(lp799
S'Dimag'
p800
aa(lp801
g139
ag791
ag142
aa(lp802
g142
aa(lp803
g139
ag34
aa(lp804
g34
aa(lp805
S'Breal'
p806
aa(lp807
S'Bimag'
p808
aa(lp809
S'Bpol1'
p810
aa(lp811
S'Bpol2'
p812
aaS'@@solvegroup'
p813
asg334
(lp814
Na(lp815
I5
aI2
aa(lp816
I2
aI2
aa(lp817
I3
aI3
aaS'@@num_cells'
p818
asg742
(lp819
I01
aI00
aS'@@history'
p820
asg744
(lp821
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p822
asg746
(lp823
NaS'Gphase_X_sum=0.0'
p824
aS'Gphase_Y_sum=0.0'
p825
a(lp826
g824
ag825
aa(lp827
S'Gphase_X_first=0.0'
p828
aS'Gphase_Y_first=0.0'
p829
aa(lp830
S'Gphase_X_last=0.0'
p831
aS'Gphase_Y_last=0.0'
p832
aaS'Dang_sum=0.0'
p833
a(lp834
S'Bimag_X_sum=0.0'
p835
aS'Bimag_Y_sum=0.0'
p836
aa(lp837
S'Breal_X_product=1.0'
p838
aS'Breal_Y_product=1.0'
p839
aaS'@@condition'
p840
asg748
(lp841
F1e-08
aF0.0
aS'@@colin_factor'
p842
assg44
Nsg15
S'2006-02-26 14:20'
p843
sg12
S'MG_JEN_Cohset::solver_subtree()'
p844
sg21
S'MG_JEN_Cohsetsolver_subtree'
p845
sg29
S'solver_subtree'
p846
sg42
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p847
sg52
I00
sg47
g843
sg158
(dp848
g162
S".modify( solvegroup ): []  ->  ['JJones']"
p849
ssg53
(lp850
g10
ag731
ag746
ag726
ag728
ag334
ag744
ag727
ag748
ag729
ag730
ag430
ag742
assg334
Nsg742
I01
sg744
I20
sg746
Nsg748
F1e-08
ssg683
I00
ss.