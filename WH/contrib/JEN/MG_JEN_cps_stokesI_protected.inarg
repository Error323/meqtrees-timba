(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stations'
p7
S'@@stations'
p8
sg1
S'@@polrep'
p9
sS'_JEN_inarg_CTRL_record:'
p10
(dp11
S'target_definition'
p12
S'MG_JEN_Joneset::BJones()'
p13
sS'localscope'
p14
g5
sS'last_edited'
p15
S'2006-02-26 14:20'
p16
sS'hide'
p17
(dp18
S'@Jsequence'
p19
I01
sg1
I01
sS'stddev'
p20
I00
sg7
I01
ssS'barescope'
p21
S'MG_JEN_JonesetBJones'
p22
sS'generic'
p23
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p24
sS'target_dir'
p25
S'.'
p26
sS'oneliner'
p27
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p28
sS'target_function'
p29
S'BJones'
p30
sS'choice'
p31
(dp32
g19
(lp33
S'BJones'
p34
aS'@@@Jsequence'
p35
asg1
(lp36
g2
aS'circular'
p37
ag9
asg20
(lp38
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p39
asg7
(lp40
(lp41
I0
aag8
assS'specific'
p42
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p43
sS'qual'
p44
NsS'version'
p45
S'16dec2005'
p46
sS'datetime_defined'
p47
g16
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'mutable'
p50
(dp51
g1
I00
sg7
I00
ssS'protected'
p52
I00
sS'order'
p53
(lp54
g10
ag7
ag1
ag19
ag20
asS'help'
p55
(dp56
g19
S'list membership indication (used in JEN_inargGui)'
p57
sg1
S'polarisation representation'
p58
sg20
S'scatter in default c00 funklet values'
p59
sg7
S'list of station names/numbers'
p60
ssS'description'
p61
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p62
ssg20
F1.1000000000000001
sg19
g34
ssg1
S'@@polrep'
p63
sg7
S'@@stations'
p64
sS'./MG_JEN_Joneset.DJones_WSRT()'
p65
(dp66
g1
S'@@polrep'
p67
sg7
S'@@stations'
p68
sS'coupled_XY_Dell'
p69
I01
sg10
(dp70
g12
S'MG_JEN_Joneset::DJones_WSRT()'
p71
sg14
g65
sg15
S'2006-02-26 14:20'
p72
sg17
(dp73
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetDJones_WSRT'
p74
sg23
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p75
sg25
g26
sg27
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p76
sg29
S'DJones_WSRT'
p77
sg31
(dp78
g1
(lp79
g2
ag37
ag67
asg7
(lp80
(lp81
I0
aag68
asg69
(lp82
I01
aI00
aS'@@coupled_XY_Dell'
p83
asg20
(lp84
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p85
asS'coupled_XY_Dang'
p86
(lp87
I01
aI00
aS'@@coupled_XY_Dang'
p88
asg19
(lp89
S'DJones_WSRT'
p90
aS'@@@Jsequence'
p91
assg42
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p92
sg44
Nsg45
g46
sg47
g72
sg48
S'MG_JEN_Joneset'
p93
sS'editable'
p94
(dp95
g86
I00
sg69
I00
ssg50
(dp96
g1
I00
sg7
I00
ssg52
I00
sg53
(lp97
g10
ag7
ag1
ag19
ag86
ag69
ag20
asg55
(dp98
g1
g58
sg7
g60
sg69
S'if True, XDell = -YDell per station'
p99
sg20
g59
sg86
S'if True, XDang = YDang per station'
p100
sg19
g57
ssg61
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p101
ssg20
F1.1000000000000001
sg86
I01
sg19
g90
ssS'ft_coeff_scale'
p102
F0.0
sS'simul'
p103
S'@@simul'
p104
sS'uvplane_effect'
p105
S'@@uvplane_effect'
p106
sS'parmtable'
p107
S'@@parmtable'
p108
sg10
(dp109
g14
g3
sg55
(dp110
g1
g58
sg7
g60
sg102
S'scale of polc_ft non-c00 coeff'
p111
sg103
S'if True, use simulated (Leafset) Jones parameter values'
p112
sg105
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p113
sg107
S'name of the MeqParm table to be used'
p114
sS'Jsequence'
p115
S'sequence of Jones matrices to be used'
p116
sg19
g57
ssg25
g26
sg48
S'MG_JEN_Cohset'
p117
sS'JEN_inargGUI_ident'
p118
(dp119
g115
I55
ssg17
(dp120
g1
I01
sg7
I01
sg102
I01
sg103
I01
sg105
I01
sg107
I01
sg19
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p121
sg45
S'25dec2005'
p122
sg50
(dp123
g105
I00
sg7
I00
sg107
I00
sg1
I00
sg103
I00
ssg61
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p124
sg94
(dp125
g103
I00
ssg27
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p126
sg31
(dp127
g1
(lp128
g2
ag37
ag63
asg7
(lp129
(lp130
I0
aag64
asg102
(lp131
F0.0
aS'@@ft_coeff_scale'
p132
asg103
(lp133
I01
aI00
ag104
asg105
(lp134
I00
ag106
asg107
(lp135
NaS'test'
p136
ag108
asg115
(lp137
(lp138
S'GJones'
p139
aa(lp140
g34
aa(lp141
S'FJones'
p142
aa(lp143
S'KJones'
p144
aa(lp145
g90
aa(lp146
g139
ag90
aa(lp147
S'JJones'
p148
aa(lp149
aS'@@Jsequence'
p150
asg19
(lp151
NaS'@@@Jsequence'
p152
assg44
Nsg15
S'2006-02-26 14:20'
p153
sg12
S'MG_JEN_Cohset::Jones()'
p154
sg21
S'MG_JEN_CohsetJones'
p155
sg29
S'Jones'
p156
sg42
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p157
sg52
I00
sg47
g153
sS'MESSAGE'
p158
(dp159
S'1'
p160
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p161
sS'0'
p162
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p163
sS'3'
p164
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p165
sS'2'
p166
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p167
sS'5'
p168
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p169
sS'4'
p170
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p171
ssg53
(lp172
g10
ag7
ag1
ag19
ag107
ag105
ag102
ag103
ag115
aS'./MG_JEN_Joneset.GJones()'
p173
aS'./MG_JEN_Joneset.FJones()'
p174
ag5
aS'./MG_JEN_Joneset.KJones()'
p175
ag65
aS'./MG_JEN_Joneset.JJones()'
p176
assg175
(dp177
g7
S'@@stations'
p178
sg103
g104
sg1
S'@@polrep'
p179
sg10
(dp180
g12
S'MG_JEN_Joneset::KJones()'
p181
sg14
g175
sg15
S'2006-02-26 14:20'
p182
sg17
(dp183
g19
I01
sg1
I01
sg7
I01
ssg21
S'MG_JEN_JonesetKJones'
p184
sg23
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p185
sg25
g26
sg27
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p186
sg29
S'KJones'
p187
sg31
(dp188
g19
(lp189
g144
aS'@@@Jsequence'
p190
asg1
(lp191
g2
ag37
ag179
asg7
(lp192
(lp193
I0
aag178
assg42
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p194
sg44
Nsg45
S'12dec2005'
p195
sg47
g182
sg48
S'MG_JEN_Joneset'
p196
sg50
(dp197
g1
I00
sg7
I00
ssg52
I00
sg53
(lp198
g10
ag7
ag1
ag19
asg55
(dp199
g19
g57
sg1
g58
sg7
g60
ssg61
S'defines diagonal KJones matrices for DFT Fourier kernel'
p200
ssg19
g144
ssg176
(dp201
g7
S'@@stations'
p202
sg1
S'@@polrep'
p203
sg10
(dp204
g12
S'MG_JEN_Joneset::JJones()'
p205
sg14
g176
sg15
S'2006-02-26 14:20'
p206
sg17
(dp207
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetJJones'
p208
sg23
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p209
sg25
g26
sg27
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p210
sg29
S'JJones'
p211
sg31
(dp212
g19
(lp213
g148
aS'@@@Jsequence'
p214
asg1
(lp215
g2
ag37
ag203
asg20
(lp216
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p217
asg7
(lp218
(lp219
I0
aag202
assg42
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p220
sg44
Nsg45
S'14feb2006'
p221
sg47
g206
sg48
S'MG_JEN_Joneset'
p222
sg50
(dp223
g1
I00
sg7
I00
ssg52
I00
sg53
(lp224
g10
ag7
ag1
ag19
ag20
asg55
(dp225
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p226
ssg20
F1.1000000000000001
sg19
g148
ssg173
(dp227
g1
S'@@polrep'
p228
sg7
S'@@stations'
p229
sg10
(dp230
g12
S'MG_JEN_Joneset::GJones()'
p231
sg14
g173
sg15
S'2006-02-26 14:20'
p232
sg17
(dp233
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetGJones'
p234
sg23
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p235
sg25
g26
sg27
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p236
sg29
S'GJones'
p237
sg31
(dp238
g19
(lp239
g139
aS'@@@Jsequence'
p240
asS'Gpolar'
p241
(lp242
I01
aI00
aS'@@Gpolar'
p243
asg1
(lp244
g2
ag37
ag228
asg20
(lp245
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p246
asg7
(lp247
(lp248
I0
aag229
assg42
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p249
sg44
Nsg45
S'15dec2005'
p250
sg47
g232
sg48
S'MG_JEN_Joneset'
p251
sg94
(dp252
g241
I00
ssg50
(dp253
g1
I00
sg7
I00
ssg52
I00
sg53
(lp254
g10
ag7
ag1
ag19
ag241
ag20
asg55
(dp255
g19
g57
sg241
S'if True, use MeqPolar, otherwise MeqToComplex'
p256
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p257
ssg20
F1.1000000000000001
sg241
I00
sg19
g139
ssg115
(lp258
sg174
(dp259
g7
S'@@stations'
p260
sg1
S'@@polrep'
p261
sg10
(dp262
g12
S'MG_JEN_Joneset::FJones()'
p263
sg14
g174
sg15
S'2006-02-26 14:20'
p264
sg17
(dp265
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetFJones'
p266
sg23
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p267
sg25
g26
sg27
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p268
sg29
S'FJones'
p269
sg31
(dp270
g19
(lp271
g142
aS'@@@Jsequence'
p272
asg1
(lp273
g2
ag37
ag261
asg20
(lp274
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p275
asg7
(lp276
(lp277
I0
aag260
assg42
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p278
sg44
Nsg45
g46
sg47
g264
sg48
S'MG_JEN_Joneset'
p279
sg50
(dp280
g1
I00
sg7
I00
ssg52
I00
sg53
(lp281
g10
ag7
ag1
ag19
ag20
asg55
(dp282
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'defines diagonal FJones Faraday rotation matrices'
p283
ssg20
F1.1000000000000001
sg19
g142
ssg19
NssS'./MG_JEN_Cohset.predict()'
p284
(dp285
g1
S'@@polrep'
p286
sg10
(dp287
g12
S'MG_JEN_Cohset::predict()'
p288
sg14
g284
sg118
(dp289
sg17
(dp290
g1
I01
sg7
I01
ssg21
S'MG_JEN_Cohsetpredict'
p291
sg23
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p292
sg25
g26
sg61
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p293
sg27
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p294
sg29
S'predict'
p295
sg31
(dp296
g1
(lp297
g2
ag37
ag286
asg7
(lp298
(lp299
I0
aI1
aI2
aI3
aI4
aa(lp300
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp301
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp302
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p303
aS'@@stations'
p304
assg42
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p305
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p306
sg48
S'MG_JEN_Cohset'
p307
sg50
(dp308
g1
I00
sg7
I00
ssg52
I00
sg15
g306
sg53
(lp309
g10
ag7
ag1
asg55
(dp310
g1
S'polarisation representation'
p311
sg7
S'the (subset of) stations to be used'
p312
sssg7
g304
ssS'script_name'
p313
S'MG_JEN_cps'
p314
sS'redun'
p315
I00
sS'ms_name'
p316
S'D1.MS'
p317
sg107
Nsg10
(dp318
g14
S'./MG_JEN_cps.'
p319
sg55
(dp320
g1
g58
sS'master_reqseq'
p321
S'if True, use a master reqseq for solver(s)'
p322
sg7
g60
sS'insert_flagger'
p323
S'if True, insert a flagger'
p324
sg315
S'if True, redundant spacing calibration'
p325
sS'insert_solver'
p326
S'if True, insert a solver'
p327
sg102
g111
sg316
S'name of the (AIPS++) Measurement Set'
p328
sS'chain_solvers'
p329
S'if True, chain the solvers (recommended)'
p330
sS'num_cells'
p331
S'if defined, ModRes argument [ntime,nfreq]'
p332
sg107
g114
sS'tile_size'
p333
S'(inputrec) size (in time-slots) of the input data-tile'
p334
sg103
g112
sg105
g113
sg19
g57
ssS'reference'
p335
I00
sg25
g26
sg48
S'MG_JEN_cps'
p336
sg118
(dp337
g1
I7
sg7
I6
sg323
I2
sg315
I15
sg326
I1
sg103
I12
sg316
I4
sg107
I9
sg313
I0
sg331
I16
sg333
I5
sg105
I10
ssg17
(dp338
g321
I01
sg315
I00
sS'last_changed'
p339
I01
sg102
I01
sg105
I00
sg329
I01
sg331
I00
sg19
I01
ssg23
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p340
sg45
g250
sg61
g340
sg94
(dp341
g321
I00
sg315
I00
sg323
I00
sg339
I00
sg326
I00
sg103
I00
ssg27
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p342
sg31
(dp343
g1
(lp344
g2
ag37
aS'@@polrep'
p345
asg321
(lp346
I01
aI00
aS'@@master_reqseq'
p347
asg7
(lp348
(lp349
I0
aaS'@@stations'
p350
asg323
(lp351
I01
aI00
aS'@@insert_flagger'
p352
asg315
(lp353
I01
aI00
aS'@@redun'
p354
asg326
(lp355
I01
aI00
aS'@@insert_solver'
p356
asg339
(lp357
S'd30jan2006'
p358
aS'@@last_changed'
p359
asg316
(lp360
g317
aS'@@ms_name'
p361
asg329
(lp362
I01
aS'@@chain_solvers'
p363
asg331
(lp364
Na(lp365
I5
aI2
aa(lp366
I2
aI2
aa(lp367
I3
aI3
aaS'@@num_cells'
p368
asg107
(lp369
Nag136
aS'@@parmtable'
p370
asg333
(lp371
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p372
asg103
(lp373
I01
aI00
aS'@@simul'
p374
asg102
(lp375
F0.0
aS'@@ft_coeff_scale'
p376
asg105
(lp377
I00
aS'@@uvplane_effect'
p378
asg19
(lp379
NaS'@@@Jsequence'
p380
assg15
S'2006-02-26 14:20'
p381
sS'HISTORY'
p382
(dp383
g160
S'2006-02-26 14:20: Derived from: MG_JEN_cps_stokesI.inarg'
p384
sg162
S'2006-02-26 14:20: Derived from: MG_JEN_cps.inarg'
p385
ssg12
g314
sS'save_file'
p386
S'MG_JEN_cps_stokesI_protected.inarg'
p387
sS'file_filter'
p388
S'MG_JEN_cps*.inarg'
p389
sg29
S''
p390
sg42
S'<specific>'
p391
sS'browse'
p392
(dp393
g316
S'*.MS'
p394
ssg52
I01
sg47
g381
sg158
(dp395
S'11'
p396
S".modify(): found ={'data_column_name': 1, 'solvegroup': 1}"
p397
sS'10'
p398
S'.modify(): stripped off: _JEN_inarg_option'
p399
sg160
S'.modify( uvplane_effect ): False  ->  True'
p400
sg162
S'.modify(): stripped off: _JEN_inarg_option'
p401
sg164
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p402
sg166
S".modify(): found ={'uvplane_effect': 1}"
p403
sg168
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p404
sg170
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p405
sS'7'
p406
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p407
sS'6'
p408
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p409
sS'9'
p410
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p411
sS'8'
p412
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p413
ssg53
(lp414
g10
ag313
ag326
ag323
ag339
ag316
ag333
ag7
ag1
ag19
ag107
ag105
ag102
ag103
ag329
ag321
ag315
ag331
aS'./MG_JEN_exec.stream_control()'
p415
aS'./MG_JEN_Cohset.make_spigots()'
p416
aS'./MG_JEN_Sixpack.newstar_source()'
p417
ag3
ag284
aS'./MG_JEN_Cohset.insert_solver()'
p418
aS'./MG_JEN_Cohset.make_sinks()'
p419
assg419
(dp420
S'fullDomainMux'
p421
I01
sS'output_col'
p422
S'PREDICT'
p423
sS'visu'
p424
I01
sS'flag'
p425
I00
sg10
(dp426
g12
S'MG_JEN_Cohset::make_sinks()'
p427
sg14
g419
sg118
(dp428
g425
I83
sg424
I82
sg421
I84
sg422
I80
sS'visu_array_config'
p429
I81
ssg21
S'MG_JEN_Cohsetmake_sinks'
p430
sg23
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p431
sg25
g26
sg61
S'Make sink nodes in the given Cohset object'
p432
sg27
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p433
sg29
S'make_sinks'
p434
sg31
(dp435
g425
(lp436
I01
aI00
aS'@@flag'
p437
asg429
(lp438
I01
aI00
aS'@@visu_array_config'
p439
asg422
(lp440
g423
aS'RESIDUALS'
p441
aS'DATA'
p442
aS'@@output_col'
p443
asg421
(lp444
I01
aI00
aS'@@fullDomainMux'
p445
asg424
(lp446
I01
aI00
aS'@@visu'
p447
assg42
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p448
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p449
sg48
S'MG_JEN_Cohset'
p450
sg94
(dp451
g425
I00
sg429
I00
sg421
I00
sg424
I00
ssg52
I00
sg15
g449
sg53
(lp452
g10
ag422
ag429
ag424
ag425
ag421
asg55
(dp453
g425
S'if True, insert a flagger for the output uv-data'
p454
sg429
S'if True, visualise the array config (from MS)'
p455
sg422
S'name of the logical (VisTile) output column'
p456
sg421
S'if True, attach an extra VisDataMux'
p457
sg424
S'if True, visualise the output uv-data'
p458
sssg429
I01
ssg333
I10
sg416
(dp459
S'MS_corr_index'
p460
(lp461
I0
aI1
aI2
aI3
asg425
I00
sg10
(dp462
g12
S'MG_JEN_Cohset::make_spigots()'
p463
sg14
g416
sg118
(dp464
g425
I28
sg460
I26
sg424
I27
ssg17
(dp465
S'input_col'
p466
I01
ssg21
S'MG_JEN_Cohsetmake_spigots'
p467
sg23
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p468
sg25
g26
sg61
S'Make spigot nodes in the given Cohset object'
p469
sg27
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p470
sg29
S'make_spigots'
p471
sg31
(dp472
g425
(lp473
I01
aI00
aS'@@flag'
p474
asg460
(lp475
g461
a(lp476
I0
aI-1
aI-1
aI1
aa(lp477
I0
aI-1
aI-1
aI3
aaS'@@'
p478
aS'@@MS_corr_index'
p479
asg466
(lp480
g442
ag423
ag441
aS'@@input_col'
p481
asg424
(lp482
I01
aI00
aS'@@visu'
p483
assg42
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p484
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p485
sg48
S'MG_JEN_Cohset'
p486
sg94
(dp487
g425
I00
sg424
I00
ssg52
I00
sg15
g485
sg53
(lp488
g10
ag466
ag460
ag424
ag425
asg55
(dp489
g425
S'if True, insert a flagger for the input uv-data'
p490
sg460
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p491
sg466
S'name of the logical (VisTile) input column'
p492
sg424
S'if True, visualise the input uv-data'
p493
sssg466
g442
sg424
I01
ssg19
Nsg323
I00
sg339
g358
sg105
I01
sg331
Nsg417
(dp494
S'f0'
p495
F1000000.0
sS'major'
p496
F0.0
sS'unsolvable'
p497
I00
sS'from_LSM'
p498
NsS'name'
p499
NsS'I0'
p500
F1.0
sS'SI'
p501
NsS'Qpct'
p502
NsS'punit'
p503
S'unpol'
p504
sS'fsr_trace'
p505
I01
sS'shape'
p506
S'point'
p507
sS'pa'
p508
F0.0
sS'RA'
p509
F4.3570000000000002
sg107
NsS'RM'
p510
NsS'Upct'
p511
NsS'Dec'
p512
F1.0920000000000001
sS'Vpct'
p513
NsS'minor'
p514
F0.0
sg10
(dp515
g14
g417
sg55
(dp516
g495
S'reference freq (Hz): I=I0 @ f=f0'
p517
sg496
S'major axis (arcsec)'
p518
sg497
S'if True, do NOT store solvegroup/parmgroup info'
p519
sg498
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p520
sg500
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p521
sg501
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p522
sg502
S'Stokes Q (percentage of I)'
p523
sg503
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p524
sg506
S'source shape'
p525
sg508
S'position angle (rad)'
p526
sg505
S'If True, attach to forest state record'
p527
sg107
S'name of the MeqParm table (AIPS++)'
p528
sg510
S'Intrinsic Rotation Measure (rad/m2)'
p529
sg511
S'Stokes U (percentage of I)'
p530
sg512
S'Declination (rad, J2000)'
p531
sg513
S'Stokes V (percentage of I)'
p532
sg514
S'minor axis (arcsec)'
p533
sg509
S'Right Ascension (rad, J2000)'
p534
ssg25
g26
sg48
S'MG_JEN_Sixpack'
p535
sg118
(dp536
g512
I42
sg498
I30
sg500
I34
sg502
I35
sg503
I29
sg501
I39
sg107
I32
sg509
I41
sg510
I38
sg511
I36
sg513
I37
ssg17
(dp537
g495
I01
sg496
I01
sg497
I01
sg498
I00
sg505
I01
sg503
I00
sg506
I01
sg508
I01
sg514
I01
sg499
I01
ssg23
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p538
sg45
S'10feb2006'
p539
sg392
(dp540
g498
S'*.lsm'
p541
ssg61
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p542
sg94
(dp543
g497
I00
sg505
I00
ssg27
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p544
sg31
(dp545
g495
(lp546
F1000000.0
aS'@@f0'
p547
asg496
(lp548
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p549
asg497
(lp550
I01
aI00
aS'@@unsolvable'
p551
asg498
(lp552
NaS'@@from_LSM'
p553
asg500
(lp554
F1.0
aF10.0
aS'@@I0'
p555
asg501
(lp556
NaF-0.69999999999999996
a(lp557
F0.44700000000000001
aF-0.184
aaS'@@SI'
p558
asg502
(lp559
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p560
asg503
(lp561
g504
aS'unpol2'
p562
aS'unpol10'
p563
aS'QUV'
p564
aS'QU'
p565
aS'Qonly'
p566
aS'Uonly'
p567
aS'Vonly'
p568
aS'3c147'
p569
aS'3c286'
p570
aS'3c48'
p571
aS'3c295'
p572
aS'RMtest'
p573
aS'SItest'
p574
aS'@@punit'
p575
asg505
(lp576
I01
aI00
aS'@@fsr_trace'
p577
asg506
(lp578
g507
aS'ell.gauss'
p579
aS'@@shape'
p580
asg508
(lp581
F0.0
aF1.0
aF-0.5
aS'@@pa'
p582
asg509
(lp583
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p584
asg107
(lp585
NaS'@@parmtable'
p586
asg510
(lp587
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p588
asg511
(lp589
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p590
asg512
(lp591
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p592
asg513
(lp593
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p594
asg514
(lp595
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p596
asg499
(lp597
NaS'@@name'
p598
assg44
Nsg15
S'2006-02-26 14:20'
p599
sg12
S'MG_JEN_Sixpack::newstar_source()'
p600
sg21
S'MG_JEN_Sixpacknewstar_source'
p601
sg29
S'newstar_source'
p602
sg42
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p603
sS'callback'
p604
(dp605
g503
I01
ssg52
I00
sg47
g599
sg53
(lp606
g10
ag503
ag498
ag499
ag107
ag497
ag500
ag502
ag511
ag513
ag510
ag501
ag495
ag509
ag512
ag505
ag506
ag496
ag514
ag508
asssg321
I00
sg7
g349
sg415
(dp607
S'channel_start_index'
p608
I10
sS'data_column_name'
p609
S'CORRECTED_DATA'
p610
sS'predict_column'
p611
g610
sg316
S'@@ms_name'
p612
sg10
(dp613
g14
g415
sg55
(dp614
g608
S'(inputrec.sel) index of first selected freq channel'
p615
sg609
S'(inputrec) MS input column'
p616
sg611
S'MS output column to be associated with the VisTile predict-column'
p617
sg316
g328
sg333
g334
sS'channel_increment'
p618
S'(inputrec.sel) take every nth channel (1=all)'
p619
sS'channel_end_index'
p620
S'(inputrec.sel) index of last selected freq channel'
p621
sS'write_flags'
p622
S'(outputrec) if True, write flags to MS'
p623
ssg25
g26
sg48
S'MG_JEN_exec'
p624
sg118
(dp625
g608
I20
sg609
I19
sg611
I24
sg622
I23
sg620
I21
sg618
I22
ssg17
(dp626
g316
I01
sg333
I01
ssg23
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p627
sg45
S'20jan2006'
p628
sg50
(dp629
g316
I00
sg333
I00
ssg61
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p630
sg94
(dp631
g622
I00
ssg27
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p632
sg31
(dp633
g608
(lp634
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p635
asg609
(lp636
g442
ag610
aS'@@data_column_name'
p637
asg611
(lp638
g442
ag610
aS'MODEL_DATA'
p639
aS'@@predict_column'
p640
asg316
(lp641
g317
ag612
asg333
(lp642
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p643
asg618
(lp644
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p645
asg620
(lp646
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p647
asg622
(lp648
I01
aI00
aS'@@write_flags'
p649
assg44
Nsg15
S'2006-02-26 14:20'
p650
sg12
S'MG_JEN_exec::stream_control()'
p651
sg21
S'MG_JEN_execstream_control'
p652
sg29
S'stream_control'
p653
sg42
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p654
sg392
(dp655
g316
g394
ssg52
I00
sg47
g650
sg158
(dp656
g162
S'.modify( data_column_name ): DATA  ->  CORRECTED_DATA'
p657
ssg53
(lp658
g10
ag316
ag333
ag609
ag608
ag620
ag618
ag622
ag611
assg333
g643
sg618
I1
sg620
I50
sg622
I00
ssg102
F0.0
sg326
I01
sg103
I00
sg329
I01
sg418
(dp659
S'correct_after'
p660
I01
sg321
S'@@master_reqseq'
p661
sS'condeq_unop'
p662
Nsg424
I01
sg315
S'@@redun'
p663
sS'solver_subtree'
p664
NsS'subtract_after'
p665
I00
sg329
S'@@chain_solvers'
p666
sg10
(dp667
g14
g418
sg55
(dp668
g660
S'if True, correct measured with predicted.Joneset'
p669
sg321
g322
sg662
S'Optional unary operation on Condeq inputs'
p670
sg424
S'if True, include full visualisation'
p671
sg315
g325
sg664
S'solver subtree qualifier(s)'
p672
sg665
S'if True, subtract predicted from measured'
p673
sg329
g330
sS'flag_residuals'
p674
S'if True, flag the residuals'
p675
sg331
g332
ssg25
g26
sg48
S'MG_JEN_Cohset'
p676
sg118
(dp677
g665
I65
sg660
I66
sg662
I63
sg424
I64
ssg17
(dp678
g321
I01
sg315
I01
sg664
I01
sg329
I01
sg674
I01
sg331
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p679
sg45
g122
sg50
(dp680
g331
I00
sg329
I00
sg315
I00
sg321
I00
ssg61
S'insert one or more solver subtrees in the data stream'
p681
sg94
(dp682
g660
I00
sg321
I00
sg424
I00
sg315
I00
sg665
I00
sg674
I00
ssg27
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p683
sg31
(dp684
g660
(lp685
I01
aI00
aS'@@correct_after'
p686
asg321
(lp687
I01
aI00
ag661
asg662
(lp688
NaS'Abs'
p689
aS'Arg'
p690
aS'@@condeq_unop'
p691
asg424
(lp692
I01
aI00
aS'@@visu'
p693
asg315
(lp694
I01
aI00
ag663
asg664
(lp695
NaS'@@solver_subtree'
p696
asg665
(lp697
I01
aI00
aS'@@subtract_after'
p698
asg329
(lp699
I01
ag666
asg674
(lp700
I01
aI00
aS'@@flag_residuals'
p701
asg331
(lp702
Na(lp703
I5
aI2
aa(lp704
I2
aI2
aa(lp705
I3
aI3
aaS'@@num_cells'
p706
assg44
Nsg15
S'2006-02-26 14:20'
p707
sg12
S'MG_JEN_Cohset::insert_solver()'
p708
sg21
S'MG_JEN_Cohsetinsert_solver'
p709
sg29
S'insert_solver'
p710
sg42
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p711
sg52
I00
sg47
g707
sg158
(dp712
g162
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p713
ssg53
(lp714
g10
ag664
ag315
ag331
ag329
ag321
ag662
ag424
ag665
ag660
ag674
aS'./MG_JEN_Cohset.solver_subtree()'
p715
assg331
g706
sg715
(dp716
S'rmin'
p717
Nsg424
I01
sS'epsilon'
p718
F0.0001
sS'rmax'
p719
NsS'usesvd'
p720
I01
sS'debug_level'
p721
I10
sS'solvegroup'
p722
(lp723
S'stokesI'
p724
asg10
(dp725
g14
g715
sg55
(dp726
g717
S'if specified, only use baselines>=rmin'
p727
sg424
S'if True, include visualisation'
p728
sg718
S'iteration control criterion'
p729
sg719
S'if specified, only use baselines<=rmax'
p730
sg720
S'if True, use Singular Value Decomposition (SVD)'
p731
sg721
S'solver debug_level'
p732
sg722
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p733
sg331
g332
sS'history'
p734
S'if True, include history collection of metrics'
p735
sS'num_iter'
p736
S'max number of iterations'
p737
sS'condition'
p738
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p739
sS'colin_factor'
p740
S'colinearity factor'
p741
ssg25
g26
sg48
S'MG_JEN_Cohset'
p742
sg118
(dp743
g717
I70
sg424
I78
sg718
I74
sg719
I71
sg720
I76
sg722
I68
sg331
I72
sg734
I79
sg736
I73
sg738
I69
sg740
I75
ssg17
(dp744
g721
I01
sg331
I00
ssg23
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p745
sg45
S'20dec2005'
p746
sg61
S'Make a solver-subtree for the given Condeq Cohset'
p747
sg94
(dp748
g720
I00
sg734
I00
sg424
I00
ssg27
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p749
sg31
(dp750
g717
(lp751
NaI100
aI200
aI500
aS'@@rmin'
p752
asg424
(lp753
I01
aI00
aS'@@visu'
p754
asg718
(lp755
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p756
asg719
(lp757
NaI500
aI1000
aI2000
aS'@@rmax'
p758
asg720
(lp759
I01
aI00
aS'@@usesvd'
p760
asg721
(lp761
I10
aS'@@debug_level'
p762
asg722
(lp763
(lp764
a(lp765
g139
aa(lp766
S'Ggain'
p767
aa(lp768
S'Gphase'
p769
aa(lp770
S'Gpol1'
p771
aa(lp772
S'Gpol2'
p773
aa(lp774
g148
aa(lp775
g139
ag724
aa(lp776
g724
aa(lp777
S'stokesIQU'
p778
aa(lp779
S'stokesIQUV'
p780
aa(lp781
g139
aS'DJones'
p782
aa(lp783
g782
aa(lp784
S'Dang'
p785
aa(lp786
S'Dell'
p787
aa(lp788
S'Dreal'
p789
aa(lp790
S'Dimag'
p791
aa(lp792
g139
ag782
ag142
aa(lp793
g142
aa(lp794
g139
ag34
aa(lp795
g34
aa(lp796
S'Breal'
p797
aa(lp798
S'Bimag'
p799
aa(lp800
S'Bpol1'
p801
aa(lp802
S'Bpol2'
p803
aaS'@@solvegroup'
p804
asg331
(lp805
Na(lp806
I5
aI2
aa(lp807
I2
aI2
aa(lp808
I3
aI3
aaS'@@num_cells'
p809
asg734
(lp810
I01
aI00
aS'@@history'
p811
asg736
(lp812
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p813
asg738
(lp814
NaS'Gphase_X_sum=0.0'
p815
aS'Gphase_Y_sum=0.0'
p816
a(lp817
g815
ag816
aa(lp818
S'Gphase_X_first=0.0'
p819
aS'Gphase_Y_first=0.0'
p820
aa(lp821
S'Gphase_X_last=0.0'
p822
aS'Gphase_Y_last=0.0'
p823
aaS'Dang_sum=0.0'
p824
a(lp825
S'Bimag_X_sum=0.0'
p826
aS'Bimag_Y_sum=0.0'
p827
aa(lp828
S'Breal_X_product=1.0'
p829
aS'Breal_Y_product=1.0'
p830
aaS'@@condition'
p831
asg740
(lp832
F1e-08
aF0.0
aS'@@colin_factor'
p833
assg44
Nsg15
S'2006-02-26 14:20'
p834
sg12
S'MG_JEN_Cohset::solver_subtree()'
p835
sg21
S'MG_JEN_Cohsetsolver_subtree'
p836
sg29
S'solver_subtree'
p837
sg42
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p838
sg52
I00
sg47
g834
sg158
(dp839
g162
S".modify( solvegroup ): []  ->  ['stokesI']"
p840
ssg53
(lp841
g10
ag722
ag738
ag717
ag719
ag331
ag736
ag718
ag740
ag720
ag721
ag424
ag734
assg331
Nsg734
I01
sg736
I20
sg738
Nsg740
F1e-08
ssg674
I00
ss.