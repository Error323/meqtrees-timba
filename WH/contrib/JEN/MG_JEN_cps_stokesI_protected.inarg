(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'unop'
p7
S'Cos'
p8
sg1
S'@@polrep'
p9
sS'ampl'
p10
I1
sS'stations'
p11
S'@@stations'
p12
sS'T_sec'
p13
F100.0
sS'_JEN_inarg_CTRL_record:'
p14
(dp15
S'target_definition'
p16
S'MG_JEN_Joneset::BJones()'
p17
sS'localscope'
p18
g5
sS'last_edited'
p19
S'2006-02-28 01:05'
p20
sS'hide'
p21
(dp22
S'@Jsequence'
p23
I01
sg1
I01
sS'stddev'
p24
I00
sg11
I01
ssS'barescope'
p25
S'MG_JEN_JonesetBJones'
p26
sS'generic'
p27
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 01:05'
p28
sS'target_dir'
p29
S'.'
p30
sS'oneliner'
p31
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 01:05'
p32
sS'target_function'
p33
S'BJones'
p34
sS'choice'
p35
(dp36
g7
(lp37
g8
aS'Sin'
p38
a(lp39
g8
ag38
aaNaS'@@unop'
p40
asg1
(lp41
g2
aS'circular'
p42
ag9
asg10
(lp43
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p44
asg13
(lp45
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p46
asg11
(lp47
(lp48
I0
aI1
aI2
aI3
aI4
aa(lp49
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp50
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp51
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p52
ag12
asg24
(lp53
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p54
asg23
(lp55
S'BJones'
p56
aS'@@@Jsequence'
p57
assS'specific'
p58
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 01:05'
p59
sS'qual'
p60
NsS'version'
p61
S'16dec2005'
p62
sS'JEN_inargGUI_ident'
p63
(dp64
g7
I74
sg24
I75
sg10
I72
sg13
I73
ssS'datetime_defined'
p65
g20
sS'target_module'
p66
S'MG_JEN_Joneset'
p67
sS'mutable'
p68
(dp69
g1
I00
sg11
I00
ssS'protected'
p70
I00
sS'order'
p71
(lp72
g14
ag11
ag1
ag23
ag10
ag13
ag7
ag24
asS'help'
p73
(dp74
g7
S'time-variability function(s)'
p75
sg1
S'polarisation representation'
p76
sg10
S'amplitude of the time-variation'
p77
sg13
S'period (s) of the time-variation'
p78
sg11
S'the (subset of) stations to be used'
p79
sg24
S'scatter in default c00 funklet values'
p80
sg23
S'list membership indication (used in JEN_inargGui)'
p81
ssS'description'
p82
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p83
ssg24
F1.1000000000000001
sg23
g56
ssg1
S'@@polrep'
p84
sg11
S'@@stations'
p85
sS'./MG_JEN_Joneset.DJones_WSRT()'
p86
(dp87
g7
g8
sg1
S'@@polrep'
p88
sg10
I1
sg11
S'@@stations'
p89
sS'coupled_XY_Dell'
p90
I01
sg13
F100.0
sg24
F1.1000000000000001
sS'coupled_XY_Dang'
p91
I01
sg23
S'DJones_WSRT'
p92
sg14
(dp93
g18
g86
sg73
(dp94
g7
g75
sg1
g76
sg10
g77
sg11
g79
sg90
S'if True, XDell = -YDell per station'
p95
sg13
g78
sg24
g80
sg91
S'if True, XDang = YDang per station'
p96
sg23
g81
ssg29
g30
sg66
S'MG_JEN_Joneset'
p97
sg63
(dp98
g7
I87
sg10
I85
sg13
I86
sg90
I84
sg24
I88
sg91
I83
ssg21
(dp99
g23
I01
sg1
I01
sg24
I00
sg11
I01
ssg27
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 01:05'
p100
sg61
g62
sg68
(dp101
g1
I00
sg11
I00
ssg82
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p102
sS'editable'
p103
(dp104
g91
I00
sg90
I00
ssg31
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 01:05'
p105
sg35
(dp106
g7
(lp107
g8
ag38
a(lp108
g8
ag38
aaNaS'@@unop'
p109
asg1
(lp110
g2
ag42
ag88
asg10
(lp111
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p112
asg11
(lp113
(lp114
I0
aI1
aI2
aI3
aI4
aa(lp115
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp116
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp117
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag89
asg90
(lp118
I01
aI00
aS'@@coupled_XY_Dell'
p119
asg13
(lp120
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p121
asg24
(lp122
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p123
asg91
(lp124
I01
aI00
aS'@@coupled_XY_Dang'
p125
asg23
(lp126
g92
aS'@@@Jsequence'
p127
assg60
Nsg19
S'2006-02-28 01:05'
p128
sg16
S'MG_JEN_Joneset::DJones_WSRT()'
p129
sg25
S'MG_JEN_JonesetDJones_WSRT'
p130
sg33
S'DJones_WSRT'
p131
sg58
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 01:05'
p132
sg70
I00
sg65
g128
sg71
(lp133
g14
ag11
ag1
ag23
ag91
ag90
ag10
ag13
ag7
ag24
asssS'./MG_JEN_Joneset.FJones()'
p134
(dp135
g7
g8
sg1
S'@@polrep'
p136
sg10
I1
sg11
S'@@stations'
p137
sg13
F100.0
sg14
(dp138
g16
S'MG_JEN_Joneset::FJones()'
p139
sg18
g134
sg19
S'2006-02-28 01:05'
p140
sg21
(dp141
g23
I01
sg1
I01
sg24
I00
sg11
I01
ssg25
S'MG_JEN_JonesetFJones'
p142
sg27
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 01:05'
p143
sg29
g30
sg31
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 01:05'
p144
sg33
S'FJones'
p145
sg35
(dp146
g7
(lp147
g8
ag38
a(lp148
g8
ag38
aaNaS'@@unop'
p149
asg1
(lp150
g2
ag42
ag136
asg10
(lp151
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p152
asg13
(lp153
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p154
asg11
(lp155
(lp156
I0
aI1
aI2
aI3
aI4
aa(lp157
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp158
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp159
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag137
asg24
(lp160
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p161
asg23
(lp162
S'FJones'
p163
aS'@@@Jsequence'
p164
assg58
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 01:05'
p165
sg60
Nsg61
g62
sg63
(dp166
g7
I67
sg24
I68
sg10
I65
sg13
I66
ssg65
g140
sg66
S'MG_JEN_Joneset'
p167
sg68
(dp168
g1
I00
sg11
I00
ssg70
I00
sg71
(lp169
g14
ag11
ag1
ag23
ag10
ag13
ag7
ag24
asg73
(dp170
g7
g75
sg1
g76
sg10
g77
sg13
g78
sg11
g79
sg24
g80
sg23
g81
ssg82
S'defines diagonal FJones Faraday rotation matrices'
p171
ssg24
F1.1000000000000001
sg23
g163
ssS'simul'
p172
S'@@simul'
p173
sS'uvplane_effect'
p174
S'@@uvplane_effect'
p175
sS'parmtable'
p176
S'@@parmtable'
p177
sg14
(dp178
g18
g3
sg73
(dp179
g1
g76
sg11
g79
sg172
S'if True, use simulated (Leafset) Jones parameter values'
p180
sg174
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p181
sg176
S'name of the MeqParm table to be used'
p182
sS'Jsequence'
p183
S'sequence of Jones matrices to be used'
p184
sg23
g81
ssg29
g30
sg66
S'MG_JEN_Cohset'
p185
sg63
(dp186
g183
I53
ssg21
(dp187
g1
I01
sg11
I01
sg172
I01
sg174
I01
sg176
I01
sg23
I01
ssg27
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 01:05'
p188
sg61
S'25dec2005'
p189
sg68
(dp190
g174
I00
sg11
I00
sg176
I00
sg1
I00
sg172
I00
ssg82
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p191
sg103
(dp192
g172
I00
ssg31
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 01:05'
p193
sg35
(dp194
g1
(lp195
g2
ag42
ag84
asg11
(lp196
(lp197
I0
aI1
aI2
aI3
aI4
aa(lp198
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp199
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp200
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag85
asg172
(lp201
I01
aI00
ag173
asg174
(lp202
I00
ag175
asg176
(lp203
NaS'test'
p204
ag177
asg183
(lp205
(lp206
S'GJones'
p207
aa(lp208
g56
aa(lp209
g163
aa(lp210
S'KJones'
p211
aa(lp212
g92
aa(lp213
g207
ag92
aa(lp214
S'JJones'
p215
aa(lp216
aS'@@Jsequence'
p217
asg23
(lp218
NaS'@@@Jsequence'
p219
assg60
Nsg19
S'2006-02-28 01:05'
p220
sg16
S'MG_JEN_Cohset::Jones()'
p221
sg25
S'MG_JEN_CohsetJones'
p222
sg33
S'Jones'
p223
sg58
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 01:05'
p224
sg70
I00
sg65
g220
sS'MESSAGE'
p225
(dp226
S'1'
p227
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p228
sS'0'
p229
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p230
sS'3'
p231
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p232
sS'2'
p233
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p234
sS'5'
p235
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p236
sS'4'
p237
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p238
ssg71
(lp239
g14
ag11
ag1
ag23
ag176
ag174
ag172
ag183
aS'./MG_JEN_Joneset.GJones()'
p240
ag134
ag5
aS'./MG_JEN_Joneset.KJones()'
p241
ag86
aS'./MG_JEN_Joneset.JJones()'
p242
assg241
(dp243
g11
S'@@stations'
p244
sg172
g173
sg1
S'@@polrep'
p245
sg14
(dp246
g16
S'MG_JEN_Joneset::KJones()'
p247
sg18
g241
sg19
S'2006-02-28 01:05'
p248
sg21
(dp249
g23
I01
sg1
I01
sg11
I01
ssg25
S'MG_JEN_JonesetKJones'
p250
sg27
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 01:05'
p251
sg29
g30
sg31
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 01:05'
p252
sg33
S'KJones'
p253
sg35
(dp254
g23
(lp255
g211
aS'@@@Jsequence'
p256
asg1
(lp257
g2
ag42
ag245
asg11
(lp258
(lp259
I0
aI1
aI2
aI3
aI4
aa(lp260
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp261
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp262
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag244
assg58
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 01:05'
p263
sg60
Nsg61
S'12dec2005'
p264
sg63
(dp265
g172
I79
ssg65
g248
sg66
S'MG_JEN_Joneset'
p266
sg68
(dp267
g1
I00
sg11
I00
ssg70
I00
sg71
(lp268
g14
ag11
ag1
ag23
ag172
asg73
(dp269
g23
g81
sg1
g76
sg11
g79
ssg82
S'defines diagonal KJones matrices for DFT Fourier kernel'
p270
ssg23
g211
ssg242
(dp271
g7
g8
sg1
S'@@polrep'
p272
sg10
I1
sg11
S'@@stations'
p273
sg13
F100.0
sg14
(dp274
g16
S'MG_JEN_Joneset::JJones()'
p275
sg18
g242
sg19
S'2006-02-28 01:05'
p276
sg21
(dp277
g23
I01
sg1
I01
sg24
I00
sg11
I01
ssg25
S'MG_JEN_JonesetJJones'
p278
sg27
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 01:05'
p279
sg29
g30
sg31
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 01:05'
p280
sg33
S'JJones'
p281
sg35
(dp282
g7
(lp283
g8
ag38
a(lp284
g8
ag38
aaNaS'@@unop'
p285
asg1
(lp286
g2
ag42
ag272
asg10
(lp287
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p288
asg13
(lp289
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p290
asg11
(lp291
(lp292
I0
aI1
aI2
aI3
aI4
aa(lp293
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp294
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp295
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag273
asg24
(lp296
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p297
asg23
(lp298
g215
aS'@@@Jsequence'
p299
assg58
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 01:05'
p300
sg60
Nsg61
S'14feb2006'
p301
sg63
(dp302
g7
I94
sg24
I95
sg10
I92
sg13
I93
ssg65
g276
sg66
S'MG_JEN_Joneset'
p303
sg68
(dp304
g1
I00
sg11
I00
ssg70
I00
sg71
(lp305
g14
ag11
ag1
ag23
ag10
ag13
ag7
ag24
asg73
(dp306
g7
g75
sg1
g76
sg10
g77
sg13
g78
sg11
g79
sg24
g80
sg23
g81
ssg82
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p307
ssg24
F1.1000000000000001
sg23
g215
ssg240
(dp308
g7
g8
sg1
S'@@polrep'
p309
sg10
I1
sg11
S'@@stations'
p310
sg13
F100.0
sg14
(dp311
g18
g240
sg73
(dp312
g7
g75
sg1
g76
sg10
g77
sg13
g78
sg11
g79
sg24
g80
sS'Gpolar'
p313
S'if True, use MeqPolar, otherwise MeqToComplex'
p314
sg23
g81
ssg29
g30
sg66
S'MG_JEN_Joneset'
p315
sg63
(dp316
g7
I60
sg313
I57
sg24
I61
sg10
I58
sg13
I59
ssg21
(dp317
g23
I01
sg1
I01
sg24
I00
sg11
I01
ssg27
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 01:05'
p318
sg61
S'15dec2005'
p319
sg68
(dp320
g1
I00
sg11
I00
ssg82
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p321
sg103
(dp322
g313
I00
ssg31
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 01:05'
p323
sg35
(dp324
g7
(lp325
g8
ag38
a(lp326
g8
ag38
aaNaS'@@unop'
p327
asg1
(lp328
g2
ag42
ag309
asg10
(lp329
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p330
asg13
(lp331
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p332
asg11
(lp333
(lp334
I0
aI1
aI2
aI3
aI4
aa(lp335
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp336
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp337
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag310
asg24
(lp338
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p339
asg313
(lp340
I01
aI00
aS'@@Gpolar'
p341
asg23
(lp342
g207
aS'@@@Jsequence'
p343
assg60
Nsg19
S'2006-02-28 01:05'
p344
sg16
S'MG_JEN_Joneset::GJones()'
p345
sg25
S'MG_JEN_JonesetGJones'
p346
sg33
S'GJones'
p347
sg58
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 01:05'
p348
sg70
I00
sg65
g344
sg71
(lp349
g14
ag11
ag1
ag23
ag313
ag10
ag13
ag7
ag24
assg24
F1.1000000000000001
sg313
I00
sg23
g207
ssg183
(lp350
sg23
NssS'script_name'
p351
S'MG_JEN_cps'
p352
sS'ms_name'
p353
S'D1.MS'
p354
sg176
NsS'./MG_JEN_Cohset.predict()'
p355
(dp356
g11
S'@@stations'
p357
sg1
S'@@polrep'
p358
sg14
(dp359
g16
S'MG_JEN_Cohset::predict()'
p360
sg18
g355
sg63
(dp361
sg21
(dp362
g11
I01
sg1
I01
sg23
I01
ssg25
S'MG_JEN_Cohsetpredict'
p363
sg27
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 01:05'
p364
sg29
g30
sg82
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p365
sg31
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 01:05'
p366
sg33
S'predict'
p367
sg35
(dp368
g11
(lp369
(lp370
I0
aI1
aI2
aI3
aI4
aa(lp371
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp372
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp373
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag357
asg1
(lp374
g2
ag42
ag358
asg23
(lp375
NaS'@@@Jsequence'
p376
assg58
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 01:05'
p377
sg60
Nsg61
g189
sg65
S'2006-02-28 01:05'
p378
sg66
S'MG_JEN_Cohset'
p379
sg68
(dp380
g1
I00
sg11
I00
ssg70
I00
sg19
g378
sg71
(lp381
g14
ag11
ag1
ag23
asg73
(dp382
g11
g79
sg1
g76
sg23
g81
sssg23
NssS'./MG_JEN_Cohset.make_sinks()'
p383
(dp384
S'fullDomainMux'
p385
I01
sS'output_col'
p386
S'PREDICT'
p387
sS'visu'
p388
I01
sS'flag'
p389
I00
sg14
(dp390
g16
S'MG_JEN_Cohset::make_sinks()'
p391
sg18
g383
sg63
(dp392
g389
I124
sg388
I123
sg385
I125
sg386
I121
sS'visu_array_config'
p393
I122
ssg25
S'MG_JEN_Cohsetmake_sinks'
p394
sg27
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 01:05'
p395
sg29
g30
sg82
S'Make sink nodes in the given Cohset object'
p396
sg31
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 01:05'
p397
sg33
S'make_sinks'
p398
sg35
(dp399
g389
(lp400
I01
aI00
aS'@@flag'
p401
asg393
(lp402
I01
aI00
aS'@@visu_array_config'
p403
asg386
(lp404
g387
aS'RESIDUALS'
p405
aS'DATA'
p406
aS'@@output_col'
p407
asg385
(lp408
I01
aI00
aS'@@fullDomainMux'
p409
asg388
(lp410
I01
aI00
aS'@@visu'
p411
assg58
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 01:05'
p412
sg60
Nsg61
g189
sg65
S'2006-02-28 01:05'
p413
sg66
S'MG_JEN_Cohset'
p414
sg103
(dp415
g389
I00
sg393
I00
sg385
I00
sg388
I00
ssg70
I00
sg19
g413
sg71
(lp416
g14
ag386
ag393
ag388
ag389
ag385
asg73
(dp417
g389
S'if True, insert a flagger for the output uv-data'
p418
sg393
S'if True, visualise the array config (from MS)'
p419
sg386
S'name of the logical (VisTile) output column'
p420
sg385
S'if True, attach an extra VisDataMux'
p421
sg388
S'if True, visualise the output uv-data'
p422
sssg393
I01
ssS'tile_size'
p423
I10
sS'./MG_JEN_Cohset.make_spigots()'
p424
(dp425
S'MS_corr_index'
p426
(lp427
I0
aI1
aI2
aI3
asg389
I00
sg14
(dp428
g16
S'MG_JEN_Cohset::make_spigots()'
p429
sg18
g424
sg63
(dp430
g389
I27
sg426
I25
sg388
I26
ssg21
(dp431
S'input_col'
p432
I01
ssg25
S'MG_JEN_Cohsetmake_spigots'
p433
sg27
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 01:05'
p434
sg29
g30
sg82
S'Make spigot nodes in the given Cohset object'
p435
sg31
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 01:05'
p436
sg33
S'make_spigots'
p437
sg35
(dp438
g389
(lp439
I01
aI00
aS'@@flag'
p440
asg426
(lp441
(lp442
I0
aI1
aI2
aI3
aa(lp443
I0
aI-1
aI-1
aI1
aa(lp444
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p445
asg432
(lp446
g406
ag387
ag405
aS'@@input_col'
p447
asg388
(lp448
I01
aI00
aS'@@visu'
p449
assg58
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 01:05'
p450
sg60
Nsg61
g189
sg65
S'2006-02-28 01:05'
p451
sg66
S'MG_JEN_Cohset'
p452
sg103
(dp453
g389
I00
sg388
I00
ssg70
I00
sg19
g451
sg71
(lp454
g14
ag432
ag426
ag388
ag389
asg73
(dp455
g389
S'if True, insert a flagger for the input uv-data'
p456
sg426
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p457
sg432
S'name of the logical (VisTile) input column'
p458
sg388
S'if True, visualise the input uv-data'
p459
sssg432
g406
sg388
I01
ssg14
(dp460
g18
S'./MG_JEN_cps.'
p461
sg73
(dp462
g1
g76
sS'master_reqseq'
p463
S'if True, use a master reqseq for solver(s)'
p464
sg11
g79
sS'insert_flagger'
p465
S'if True, insert a flagger'
p466
sS'redun'
p467
S'if True, redundant spacing calibration'
p468
sS'insert_solver'
p469
S'if True, insert a solver'
p470
sg172
g180
sg353
S'name of the (AIPS++) Measurement Set'
p471
sS'chain_solvers'
p472
S'if True, chain the solvers (recommended)'
p473
sS'num_cells'
p474
S'if defined, ModRes argument [ntime,nfreq]'
p475
sg176
g182
sg423
S'(inputrec) size (in time-slots) of the input data-tile'
p476
sg174
g181
sg23
g81
ssS'reference'
p477
I00
sg29
g30
sg66
S'MG_JEN_cps'
p478
sg63
(dp479
g1
I7
sg11
I6
sg465
I2
sg467
I14
sg469
I1
sg172
I11
sg353
I4
sg176
I9
sg351
I0
sg474
I15
sg423
I5
sg174
I10
ssg21
(dp480
g1
I00
sg463
I01
sg11
I00
sS'last_changed'
p481
I01
sg467
I00
sg174
I00
sg472
I01
sg474
I00
sg23
I01
ssg27
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p482
sg61
g319
sg82
g482
sg103
(dp483
g463
I00
sg467
I00
sg465
I00
sg481
I00
sg469
I00
sg172
I00
ssg31
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p484
sg35
(dp485
g1
(lp486
g2
ag42
aS'@@polrep'
p487
asg463
(lp488
I01
aI00
aS'@@master_reqseq'
p489
asg11
(lp490
(lp491
I0
aI1
aI2
aI3
aI4
aa(lp492
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp493
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp494
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
aS'@@stations'
p495
asg465
(lp496
I01
aI00
aS'@@insert_flagger'
p497
asg467
(lp498
I01
aI00
aS'@@redun'
p499
asg469
(lp500
I01
aI00
aS'@@insert_solver'
p501
asg481
(lp502
S'd30jan2006'
p503
aS'@@last_changed'
p504
asg353
(lp505
g354
aS'@@ms_name'
p506
asg472
(lp507
I01
aS'@@chain_solvers'
p508
asg474
(lp509
Na(lp510
I5
aI2
aa(lp511
I2
aI2
aa(lp512
I3
aI3
aaS'@@num_cells'
p513
asg176
(lp514
Nag204
aS'@@parmtable'
p515
asg423
(lp516
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p517
asg172
(lp518
I01
aI00
aS'@@simul'
p519
asg174
(lp520
I00
aS'@@uvplane_effect'
p521
asg23
(lp522
NaS'@@@Jsequence'
p523
assg19
S'2006-02-28 01:05'
p524
sS'HISTORY'
p525
(dp526
g227
S'2006-02-28 01:05: Derived from: MG_JEN_cps_stokesI.inarg'
p527
sg229
S'2006-02-28 01:05: Derived from: MG_JEN_cps.inarg'
p528
ssg16
g352
sS'save_file'
p529
S'MG_JEN_cps_stokesI_protected.inarg'
p530
sS'file_filter'
p531
S'MG_JEN_cps*.inarg'
p532
sg33
S''
p533
sg58
S'<specific>'
p534
sS'browse'
p535
(dp536
g353
S'*.MS'
p537
ssg70
I01
sg65
g524
sg225
(dp538
S'11'
p539
S".modify(): found ={'data_column_name': 1, 'solvegroup': 1}"
p540
sS'10'
p541
S'.modify(): stripped off: _JEN_inarg_option'
p542
sg227
S'.modify( uvplane_effect ): False  ->  True'
p543
sg229
S'.modify(): stripped off: _JEN_inarg_option'
p544
sg231
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p545
sg233
S".modify(): found ={'uvplane_effect': 1}"
p546
sg235
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p547
sg237
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p548
sS'7'
p549
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p550
sS'6'
p551
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p552
sS'9'
p553
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p554
sS'8'
p555
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p556
ssg71
(lp557
g14
ag351
ag469
ag465
ag481
ag353
ag423
ag11
ag1
ag23
ag176
ag174
ag172
ag472
ag463
ag467
ag474
aS'./MG_JEN_exec.stream_control()'
p558
ag424
aS'./MG_JEN_Sixpack.newstar_source()'
p559
ag3
ag355
aS'./MG_JEN_Cohset.insert_solver()'
p560
ag383
assg465
I00
sg481
g503
sg174
I01
sg474
Nsg559
(dp561
S'f0'
p562
F1000000.0
sS'major'
p563
F0.0
sS'unsolvable'
p564
I00
sS'from_LSM'
p565
NsS'name'
p566
NsS'I0'
p567
F1.0
sS'SI'
p568
NsS'Qpct'
p569
NsS'punit'
p570
S'unpol'
p571
sS'fsr_trace'
p572
I01
sS'shape'
p573
S'point'
p574
sS'pa'
p575
F0.0
sS'RA'
p576
F4.3570000000000002
sg176
NsS'RM'
p577
NsS'Upct'
p578
NsS'Dec'
p579
F1.0920000000000001
sS'Vpct'
p580
NsS'minor'
p581
F0.0
sg14
(dp582
g18
g559
sg73
(dp583
g562
S'reference freq (Hz): I=I0 @ f=f0'
p584
sg563
S'major axis (arcsec)'
p585
sg564
S'if True, do NOT store solvegroup/parmgroup info'
p586
sg565
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p587
sg567
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p588
sg568
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p589
sg569
S'Stokes Q (percentage of I)'
p590
sg570
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p591
sg573
S'source shape'
p592
sg575
S'position angle (rad)'
p593
sg572
S'If True, attach to forest state record'
p594
sg176
S'name of the MeqParm table (AIPS++)'
p595
sg577
S'Intrinsic Rotation Measure (rad/m2)'
p596
sg578
S'Stokes U (percentage of I)'
p597
sg579
S'Declination (rad, J2000)'
p598
sg580
S'Stokes V (percentage of I)'
p599
sg581
S'minor axis (arcsec)'
p600
sg576
S'Right Ascension (rad, J2000)'
p601
ssg29
g30
sg66
S'MG_JEN_Sixpack'
p602
sg63
(dp603
g579
I41
sg565
I29
sg567
I33
sg569
I34
sg570
I28
sg568
I38
sg176
I31
sg576
I40
sg577
I37
sg578
I35
sg580
I36
ssg21
(dp604
g562
I01
sg563
I01
sg564
I01
sg565
I00
sg572
I01
sg570
I00
sg573
I01
sg575
I01
sg581
I01
sg566
I01
ssg27
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 01:05'
p605
sg61
S'10feb2006'
p606
sg535
(dp607
g565
S'*.lsm'
p608
ssg82
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p609
sg103
(dp610
g564
I00
sg572
I00
ssg31
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 01:05'
p611
sg35
(dp612
g562
(lp613
F1000000.0
aS'@@f0'
p614
asg563
(lp615
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p616
asg564
(lp617
I01
aI00
aS'@@unsolvable'
p618
asg565
(lp619
NaS'@@from_LSM'
p620
asg567
(lp621
F1.0
aF10.0
aS'@@I0'
p622
asg568
(lp623
NaF-0.69999999999999996
a(lp624
F0.44700000000000001
aF-0.184
aaS'@@SI'
p625
asg569
(lp626
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p627
asg570
(lp628
g571
aS'unpol2'
p629
aS'unpol10'
p630
aS'QUV'
p631
aS'QU'
p632
aS'Qonly'
p633
aS'Uonly'
p634
aS'Vonly'
p635
aS'3c147'
p636
aS'3c286'
p637
aS'3c48'
p638
aS'3c295'
p639
aS'RMtest'
p640
aS'SItest'
p641
aS'@@punit'
p642
asg572
(lp643
I01
aI00
aS'@@fsr_trace'
p644
asg573
(lp645
g574
aS'ell.gauss'
p646
aS'@@shape'
p647
asg575
(lp648
F0.0
aF1.0
aF-0.5
aS'@@pa'
p649
asg576
(lp650
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p651
asg176
(lp652
NaS'@@parmtable'
p653
asg577
(lp654
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p655
asg578
(lp656
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p657
asg579
(lp658
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p659
asg580
(lp660
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p661
asg581
(lp662
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p663
asg566
(lp664
NaS'@@name'
p665
assg60
Nsg19
S'2006-02-28 01:05'
p666
sg16
S'MG_JEN_Sixpack::newstar_source()'
p667
sg25
S'MG_JEN_Sixpacknewstar_source'
p668
sg33
S'newstar_source'
p669
sg58
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 01:05'
p670
sS'callback'
p671
(dp672
g570
I01
ssg70
I00
sg65
g666
sg71
(lp673
g14
ag570
ag565
ag566
ag176
ag564
ag567
ag569
ag578
ag580
ag577
ag568
ag562
ag576
ag579
ag572
ag573
ag563
ag581
ag575
asssg463
I00
sg11
g491
sg558
(dp674
S'channel_start_index'
p675
I10
sS'data_column_name'
p676
S'CORRECTED_DATA'
p677
sS'predict_column'
p678
g677
sg353
S'@@ms_name'
p679
sg14
(dp680
g18
g558
sg73
(dp681
g675
S'(inputrec.sel) index of first selected freq channel'
p682
sg676
S'(inputrec) MS input column'
p683
sg678
S'MS output column to be associated with the VisTile predict-column'
p684
sg353
g471
sg423
g476
sS'channel_increment'
p685
S'(inputrec.sel) take every nth channel (1=all)'
p686
sS'channel_end_index'
p687
S'(inputrec.sel) index of last selected freq channel'
p688
sS'write_flags'
p689
S'(outputrec) if True, write flags to MS'
p690
ssg29
g30
sg66
S'MG_JEN_exec'
p691
sg63
(dp692
g675
I19
sg676
I18
sg678
I23
sg689
I22
sg687
I20
sg685
I21
ssg21
(dp693
g353
I01
sg423
I01
ssg27
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 01:05'
p694
sg61
S'20jan2006'
p695
sg68
(dp696
g353
I00
sg423
I00
ssg82
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 01:05'
p697
sg103
(dp698
g689
I00
ssg31
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 01:05'
p699
sg35
(dp700
g675
(lp701
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p702
asg676
(lp703
g406
ag677
aS'@@data_column_name'
p704
asg678
(lp705
g406
ag677
aS'MODEL_DATA'
p706
aS'@@predict_column'
p707
asg353
(lp708
g354
ag679
asg423
(lp709
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p710
asg685
(lp711
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p712
asg687
(lp713
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p714
asg689
(lp715
I01
aI00
aS'@@write_flags'
p716
assg60
Nsg19
S'2006-02-28 01:05'
p717
sg16
S'MG_JEN_exec::stream_control()'
p718
sg25
S'MG_JEN_execstream_control'
p719
sg33
S'stream_control'
p720
sg58
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 01:05'
p721
sg535
(dp722
g353
g537
ssg70
I00
sg65
g717
sg225
(dp723
g229
S'.modify( data_column_name ): DATA  ->  CORRECTED_DATA'
p724
ssg71
(lp725
g14
ag353
ag423
ag676
ag675
ag687
ag685
ag689
ag678
assg423
g710
sg685
I1
sg687
I50
sg689
I00
ssg467
I00
sg469
I01
sg172
I00
sg472
I01
sg23
Nsg560
(dp726
S'correct_after'
p727
I01
sg463
S'@@master_reqseq'
p728
sS'condeq_unop'
p729
Nsg388
I01
sg467
S'@@redun'
p730
sS'solver_subtree'
p731
NsS'subtract_after'
p732
I00
sg472
S'@@chain_solvers'
p733
sg14
(dp734
g18
g560
sg73
(dp735
g727
S'if True, correct measured with predicted.Joneset'
p736
sg463
g464
sg729
S'Optional unary operation on Condeq inputs'
p737
sg388
S'if True, include full visualisation'
p738
sg467
g468
sg731
S'solver subtree qualifier(s)'
p739
sg732
S'if True, subtract predicted from measured'
p740
sg472
g473
sS'flag_residuals'
p741
S'if True, flag the residuals'
p742
sg474
g475
ssg29
g30
sg66
S'MG_JEN_Cohset'
p743
sg63
(dp744
g732
I106
sg727
I107
sg729
I104
sg388
I105
ssg21
(dp745
g463
I01
sg467
I01
sg731
I01
sg472
I01
sg741
I01
sg474
I01
ssg27
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 01:05'
p746
sg61
g189
sg68
(dp747
g474
I00
sg472
I00
sg467
I00
sg463
I00
ssg82
S'insert one or more solver subtrees in the data stream'
p748
sg103
(dp749
g727
I00
sg463
I00
sg388
I00
sg467
I00
sg732
I00
sg741
I00
ssg31
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 01:05'
p750
sg35
(dp751
g727
(lp752
I01
aI00
aS'@@correct_after'
p753
asg463
(lp754
I01
aI00
ag728
asg729
(lp755
NaS'Abs'
p756
aS'Arg'
p757
aS'@@condeq_unop'
p758
asg388
(lp759
I01
aI00
aS'@@visu'
p760
asg467
(lp761
I01
aI00
ag730
asg731
(lp762
NaS'@@solver_subtree'
p763
asg732
(lp764
I01
aI00
aS'@@subtract_after'
p765
asg472
(lp766
I01
ag733
asg741
(lp767
I01
aI00
aS'@@flag_residuals'
p768
asg474
(lp769
Na(lp770
I5
aI2
aa(lp771
I2
aI2
aa(lp772
I3
aI3
aaS'@@num_cells'
p773
assg60
Nsg19
S'2006-02-28 01:05'
p774
sg16
S'MG_JEN_Cohset::insert_solver()'
p775
sg25
S'MG_JEN_Cohsetinsert_solver'
p776
sg33
S'insert_solver'
p777
sg58
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 01:05'
p778
sg70
I00
sg65
g774
sg225
(dp779
g229
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p780
ssg71
(lp781
g14
ag731
ag467
ag474
ag472
ag463
ag729
ag388
ag732
ag727
ag741
aS'./MG_JEN_Cohset.solver_subtree()'
p782
assg474
g773
sg782
(dp783
S'rmin'
p784
Nsg388
I01
sS'epsilon'
p785
F0.0001
sS'rmax'
p786
NsS'usesvd'
p787
I01
sS'debug_level'
p788
I10
sS'solvegroup'
p789
(lp790
S'stokesI'
p791
asg14
(dp792
g18
g782
sg73
(dp793
g784
S'if specified, only use baselines>=rmin'
p794
sg388
S'if True, include visualisation'
p795
sg785
S'iteration control criterion'
p796
sg786
S'if specified, only use baselines<=rmax'
p797
sg787
S'if True, use Singular Value Decomposition (SVD)'
p798
sg788
S'solver debug_level'
p799
sg789
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p800
sg474
g475
sS'history'
p801
S'if True, include history collection of metrics'
p802
sS'num_iter'
p803
S'max number of iterations'
p804
sS'condition'
p805
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p806
sS'colin_factor'
p807
S'colinearity factor'
p808
ssg29
g30
sg66
S'MG_JEN_Cohset'
p809
sg63
(dp810
g784
I111
sg388
I119
sg785
I115
sg786
I112
sg787
I117
sg789
I109
sg474
I113
sg801
I120
sg803
I114
sg805
I110
sg807
I116
ssg21
(dp811
g788
I01
sg474
I00
ssg27
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 01:05'
p812
sg61
S'20dec2005'
p813
sg82
S'Make a solver-subtree for the given Condeq Cohset'
p814
sg103
(dp815
g787
I00
sg801
I00
sg388
I00
ssg31
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 01:05'
p816
sg35
(dp817
g784
(lp818
NaI100
aI200
aI500
aS'@@rmin'
p819
asg388
(lp820
I01
aI00
aS'@@visu'
p821
asg785
(lp822
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p823
asg786
(lp824
NaI500
aI1000
aI2000
aS'@@rmax'
p825
asg787
(lp826
I01
aI00
aS'@@usesvd'
p827
asg788
(lp828
I10
aS'@@debug_level'
p829
asg789
(lp830
(lp831
a(lp832
g207
aa(lp833
S'Ggain'
p834
aa(lp835
S'Gphase'
p836
aa(lp837
S'Gpol1'
p838
aa(lp839
S'Gpol2'
p840
aa(lp841
g215
aa(lp842
g207
ag791
aa(lp843
g791
aa(lp844
S'stokesIQU'
p845
aa(lp846
S'stokesIQUV'
p847
aa(lp848
g207
aS'DJones'
p849
aa(lp850
g849
aa(lp851
S'Dang'
p852
aa(lp853
S'Dell'
p854
aa(lp855
S'Dreal'
p856
aa(lp857
S'Dimag'
p858
aa(lp859
g207
ag849
ag163
aa(lp860
g163
aa(lp861
g207
ag56
aa(lp862
g56
aa(lp863
S'Breal'
p864
aa(lp865
S'Bimag'
p866
aa(lp867
S'Bpol1'
p868
aa(lp869
S'Bpol2'
p870
aaS'@@solvegroup'
p871
asg474
(lp872
Na(lp873
I5
aI2
aa(lp874
I2
aI2
aa(lp875
I3
aI3
aaS'@@num_cells'
p876
asg801
(lp877
I01
aI00
aS'@@history'
p878
asg803
(lp879
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p880
asg805
(lp881
NaS'Gphase_X_sum=0.0'
p882
aS'Gphase_Y_sum=0.0'
p883
a(lp884
g882
ag883
aa(lp885
S'Gphase_X_first=0.0'
p886
aS'Gphase_Y_first=0.0'
p887
aa(lp888
S'Gphase_X_last=0.0'
p889
aS'Gphase_Y_last=0.0'
p890
aaS'Dang_sum=0.0'
p891
a(lp892
S'Bimag_X_sum=0.0'
p893
aS'Bimag_Y_sum=0.0'
p894
aa(lp895
S'Breal_X_product=1.0'
p896
aS'Breal_Y_product=1.0'
p897
aaS'@@condition'
p898
asg807
(lp899
F1e-08
aF0.0
aS'@@colin_factor'
p900
assg60
Nsg19
S'2006-02-28 01:05'
p901
sg16
S'MG_JEN_Cohset::solver_subtree()'
p902
sg25
S'MG_JEN_Cohsetsolver_subtree'
p903
sg33
S'solver_subtree'
p904
sg58
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 01:05'
p905
sg70
I00
sg65
g901
sg225
(dp906
g229
S".modify( solvegroup ): []  ->  ['stokesI']"
p907
ssg71
(lp908
g14
ag789
ag805
ag784
ag786
ag474
ag803
ag785
ag807
ag787
ag788
ag388
ag801
assg474
Nsg801
I01
sg803
I20
sg805
Nsg807
F1e-08
ssg741
I00
ss.