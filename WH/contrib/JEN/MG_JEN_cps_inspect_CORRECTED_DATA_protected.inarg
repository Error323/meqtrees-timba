(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'unop'
p7
S'Cos'
p8
sg1
S'@@polrep'
p9
sS'ampl'
p10
I1
sS'stations'
p11
S'@@stations'
p12
sS'T_sec'
p13
F100.0
sS'_JEN_inarg_CTRL_record:'
p14
(dp15
S'target_definition'
p16
S'MG_JEN_Joneset::BJones()'
p17
sS'localscope'
p18
g5
sS'last_edited'
p19
S'2006-02-28 01:05'
p20
sS'hide'
p21
(dp22
S'@Jsequence'
p23
I01
sg1
I01
sS'stddev'
p24
I00
sg11
I01
ssS'barescope'
p25
S'MG_JEN_JonesetBJones'
p26
sS'generic'
p27
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 01:05'
p28
sS'target_dir'
p29
S'.'
p30
sS'oneliner'
p31
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 01:05'
p32
sS'target_function'
p33
S'BJones'
p34
sS'choice'
p35
(dp36
g7
(lp37
g8
aS'Sin'
p38
a(lp39
g8
ag38
aaNaS'@@unop'
p40
asg1
(lp41
g2
aS'circular'
p42
ag9
asg10
(lp43
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p44
asg13
(lp45
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p46
asg11
(lp47
(lp48
I0
aI1
aI2
aI3
aI4
aa(lp49
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp50
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp51
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p52
ag12
asg24
(lp53
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p54
asg23
(lp55
S'BJones'
p56
aS'@@@Jsequence'
p57
assS'specific'
p58
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-28 01:05'
p59
sS'qual'
p60
NsS'version'
p61
S'16dec2005'
p62
sS'JEN_inargGUI_ident'
p63
(dp64
g7
I74
sg24
I75
sg10
I72
sg13
I73
ssS'datetime_defined'
p65
g20
sS'target_module'
p66
S'MG_JEN_Joneset'
p67
sS'mutable'
p68
(dp69
g1
I00
sg11
I00
ssS'protected'
p70
I00
sS'order'
p71
(lp72
g14
ag11
ag1
ag23
ag10
ag13
ag7
ag24
asS'help'
p73
(dp74
g7
S'time-variability function(s)'
p75
sg1
S'polarisation representation'
p76
sg10
S'amplitude of the time-variation'
p77
sg13
S'period (s) of the time-variation'
p78
sg11
S'the (subset of) stations to be used'
p79
sg24
S'scatter in default c00 funklet values'
p80
sg23
S'list membership indication (used in JEN_inargGui)'
p81
ssS'description'
p82
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p83
ssg24
F1.1000000000000001
sg23
g56
ssg1
S'@@polrep'
p84
sg11
S'@@stations'
p85
sS'./MG_JEN_Joneset.DJones_WSRT()'
p86
(dp87
g7
g8
sg1
S'@@polrep'
p88
sg10
I1
sg11
S'@@stations'
p89
sS'coupled_XY_Dell'
p90
I01
sg13
F100.0
sg24
F1.1000000000000001
sS'coupled_XY_Dang'
p91
I01
sg23
S'DJones_WSRT'
p92
sg14
(dp93
g18
g86
sg73
(dp94
g7
g75
sg1
g76
sg10
g77
sg11
g79
sg90
S'if True, XDell = -YDell per station'
p95
sg13
g78
sg24
g80
sg91
S'if True, XDang = YDang per station'
p96
sg23
g81
ssg29
g30
sg66
S'MG_JEN_Joneset'
p97
sg63
(dp98
g7
I87
sg10
I85
sg13
I86
sg90
I84
sg24
I88
sg91
I83
ssg21
(dp99
g23
I01
sg1
I01
sg24
I00
sg11
I01
ssg27
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 01:05'
p100
sg61
g62
sg68
(dp101
g1
I00
sg11
I00
ssg82
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p102
sS'editable'
p103
(dp104
g91
I00
sg90
I00
ssg31
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 01:05'
p105
sg35
(dp106
g7
(lp107
g8
ag38
a(lp108
g8
ag38
aaNaS'@@unop'
p109
asg1
(lp110
g2
ag42
ag88
asg10
(lp111
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p112
asg11
(lp113
(lp114
I0
aI1
aI2
aI3
aI4
aa(lp115
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp116
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp117
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag89
asg90
(lp118
I01
aI00
aS'@@coupled_XY_Dell'
p119
asg13
(lp120
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p121
asg24
(lp122
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p123
asg91
(lp124
I01
aI00
aS'@@coupled_XY_Dang'
p125
asg23
(lp126
g92
aS'@@@Jsequence'
p127
assg60
Nsg19
S'2006-02-28 01:05'
p128
sg16
S'MG_JEN_Joneset::DJones_WSRT()'
p129
sg25
S'MG_JEN_JonesetDJones_WSRT'
p130
sg33
S'DJones_WSRT'
p131
sg58
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-28 01:05'
p132
sg70
I00
sg65
g128
sg71
(lp133
g14
ag11
ag1
ag23
ag91
ag90
ag10
ag13
ag7
ag24
asssS'./MG_JEN_Joneset.FJones()'
p134
(dp135
g7
g8
sg1
S'@@polrep'
p136
sg10
I1
sg11
S'@@stations'
p137
sg13
F100.0
sg14
(dp138
g16
S'MG_JEN_Joneset::FJones()'
p139
sg18
g134
sg19
S'2006-02-28 01:05'
p140
sg21
(dp141
g23
I01
sg1
I01
sg24
I00
sg11
I01
ssg25
S'MG_JEN_JonesetFJones'
p142
sg27
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 01:05'
p143
sg29
g30
sg31
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 01:05'
p144
sg33
S'FJones'
p145
sg35
(dp146
g7
(lp147
g8
ag38
a(lp148
g8
ag38
aaNaS'@@unop'
p149
asg1
(lp150
g2
ag42
ag136
asg10
(lp151
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p152
asg13
(lp153
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p154
asg11
(lp155
(lp156
I0
aI1
aI2
aI3
aI4
aa(lp157
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp158
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp159
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag137
asg24
(lp160
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p161
asg23
(lp162
S'FJones'
p163
aS'@@@Jsequence'
p164
assg58
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-28 01:05'
p165
sg60
Nsg61
g62
sg63
(dp166
g7
I67
sg24
I68
sg10
I65
sg13
I66
ssg65
g140
sg66
S'MG_JEN_Joneset'
p167
sg68
(dp168
g1
I00
sg11
I00
ssg70
I00
sg71
(lp169
g14
ag11
ag1
ag23
ag10
ag13
ag7
ag24
asg73
(dp170
g7
g75
sg1
g76
sg10
g77
sg13
g78
sg11
g79
sg24
g80
sg23
g81
ssg82
S'defines diagonal FJones Faraday rotation matrices'
p171
ssg24
F1.1000000000000001
sg23
g163
ssS'simul'
p172
S'@@simul'
p173
sS'uvplane_effect'
p174
S'@@uvplane_effect'
p175
sS'parmtable'
p176
S'@@parmtable'
p177
sg14
(dp178
g18
g3
sg73
(dp179
g1
g76
sg11
g79
sg172
S'if True, use simulated (Leafset) Jones parameter values'
p180
sg174
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p181
sg176
S'name of the MeqParm table to be used'
p182
sS'Jsequence'
p183
S'sequence of Jones matrices to be used'
p184
sg23
g81
ssg29
g30
sg66
S'MG_JEN_Cohset'
p185
sg63
(dp186
g183
I53
ssg21
(dp187
g1
I01
sg11
I01
sg172
I01
sg174
I01
sg176
I01
sg23
I01
ssg27
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 01:05'
p188
sg61
S'25dec2005'
p189
sg68
(dp190
g174
I00
sg11
I00
sg176
I00
sg1
I00
sg172
I00
ssg82
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p191
sg103
(dp192
g172
I00
ssg31
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 01:05'
p193
sg35
(dp194
g1
(lp195
g2
ag42
ag84
asg11
(lp196
(lp197
I0
aI1
aI2
aI3
aI4
aa(lp198
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp199
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp200
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag85
asg172
(lp201
I01
aI00
ag173
asg174
(lp202
I00
ag175
asg176
(lp203
NaS'test'
p204
ag177
asg183
(lp205
(lp206
S'GJones'
p207
aa(lp208
g56
aa(lp209
g163
aa(lp210
S'KJones'
p211
aa(lp212
g92
aa(lp213
g207
ag92
aa(lp214
S'JJones'
p215
aa(lp216
aS'@@Jsequence'
p217
asg23
(lp218
NaS'@@@Jsequence'
p219
assg60
Nsg19
S'2006-02-28 01:05'
p220
sg16
S'MG_JEN_Cohset::Jones()'
p221
sg25
S'MG_JEN_CohsetJones'
p222
sg33
S'Jones'
p223
sg58
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-28 01:05'
p224
sg70
I00
sg65
g220
sS'MESSAGE'
p225
(dp226
S'1'
p227
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p228
sS'0'
p229
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p230
sS'3'
p231
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p232
sS'2'
p233
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p234
sS'5'
p235
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p236
sS'4'
p237
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p238
ssg71
(lp239
g14
ag11
ag1
ag23
ag176
ag174
ag172
ag183
aS'./MG_JEN_Joneset.GJones()'
p240
ag134
ag5
aS'./MG_JEN_Joneset.KJones()'
p241
ag86
aS'./MG_JEN_Joneset.JJones()'
p242
assg241
(dp243
g11
S'@@stations'
p244
sg172
g173
sg1
S'@@polrep'
p245
sg14
(dp246
g16
S'MG_JEN_Joneset::KJones()'
p247
sg18
g241
sg19
S'2006-02-28 01:05'
p248
sg21
(dp249
g23
I01
sg1
I01
sg11
I01
ssg25
S'MG_JEN_JonesetKJones'
p250
sg27
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 01:05'
p251
sg29
g30
sg31
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 01:05'
p252
sg33
S'KJones'
p253
sg35
(dp254
g23
(lp255
g211
aS'@@@Jsequence'
p256
asg1
(lp257
g2
ag42
ag245
asg11
(lp258
(lp259
I0
aI1
aI2
aI3
aI4
aa(lp260
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp261
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp262
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag244
assg58
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-28 01:05'
p263
sg60
Nsg61
S'12dec2005'
p264
sg63
(dp265
g172
I79
ssg65
g248
sg66
S'MG_JEN_Joneset'
p266
sg68
(dp267
g1
I00
sg11
I00
ssg70
I00
sg71
(lp268
g14
ag11
ag1
ag23
ag172
asg73
(dp269
g23
g81
sg1
g76
sg11
g79
ssg82
S'defines diagonal KJones matrices for DFT Fourier kernel'
p270
ssg23
g211
ssg242
(dp271
g7
g8
sg1
S'@@polrep'
p272
sg10
I1
sg11
S'@@stations'
p273
sg13
F100.0
sg14
(dp274
g16
S'MG_JEN_Joneset::JJones()'
p275
sg18
g242
sg19
S'2006-02-28 01:05'
p276
sg21
(dp277
g23
I01
sg1
I01
sg24
I00
sg11
I01
ssg25
S'MG_JEN_JonesetJJones'
p278
sg27
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 01:05'
p279
sg29
g30
sg31
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 01:05'
p280
sg33
S'JJones'
p281
sg35
(dp282
g7
(lp283
g8
ag38
a(lp284
g8
ag38
aaNaS'@@unop'
p285
asg1
(lp286
g2
ag42
ag272
asg10
(lp287
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p288
asg13
(lp289
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p290
asg11
(lp291
(lp292
I0
aI1
aI2
aI3
aI4
aa(lp293
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp294
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp295
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag273
asg24
(lp296
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p297
asg23
(lp298
g215
aS'@@@Jsequence'
p299
assg58
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-28 01:05'
p300
sg60
Nsg61
S'14feb2006'
p301
sg63
(dp302
g7
I94
sg24
I95
sg10
I92
sg13
I93
ssg65
g276
sg66
S'MG_JEN_Joneset'
p303
sg68
(dp304
g1
I00
sg11
I00
ssg70
I00
sg71
(lp305
g14
ag11
ag1
ag23
ag10
ag13
ag7
ag24
asg73
(dp306
g7
g75
sg1
g76
sg10
g77
sg13
g78
sg11
g79
sg24
g80
sg23
g81
ssg82
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p307
ssg24
F1.1000000000000001
sg23
g215
ssg240
(dp308
g7
g8
sg1
S'@@polrep'
p309
sg10
I1
sg11
S'@@stations'
p310
sg13
F100.0
sg14
(dp311
g18
g240
sg73
(dp312
g7
g75
sg1
g76
sg10
g77
sg13
g78
sg11
g79
sg24
g80
sS'Gpolar'
p313
S'if True, use MeqPolar, otherwise MeqToComplex'
p314
sg23
g81
ssg29
g30
sg66
S'MG_JEN_Joneset'
p315
sg63
(dp316
g7
I60
sg313
I57
sg24
I61
sg10
I58
sg13
I59
ssg21
(dp317
g23
I01
sg1
I01
sg24
I00
sg11
I01
ssg27
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 01:05'
p318
sg61
S'15dec2005'
p319
sg68
(dp320
g1
I00
sg11
I00
ssg82
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p321
sg103
(dp322
g313
I00
ssg31
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 01:05'
p323
sg35
(dp324
g7
(lp325
g8
ag38
a(lp326
g8
ag38
aaNaS'@@unop'
p327
asg1
(lp328
g2
ag42
ag309
asg10
(lp329
I0
aF0.001
aF0.01
aF0.10000000000000001
aI1
aI10
aI100
aI1000
aS'@@ampl'
p330
asg13
(lp331
I10
aI20
aI50
aI100
aI200
aI500
aI1000
aS'@@T_sec'
p332
asg11
(lp333
(lp334
I0
aI1
aI2
aI3
aI4
aa(lp335
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp336
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp337
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag310
asg24
(lp338
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p339
asg313
(lp340
I01
aI00
aS'@@Gpolar'
p341
asg23
(lp342
g207
aS'@@@Jsequence'
p343
assg60
Nsg19
S'2006-02-28 01:05'
p344
sg16
S'MG_JEN_Joneset::GJones()'
p345
sg25
S'MG_JEN_JonesetGJones'
p346
sg33
S'GJones'
p347
sg58
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-28 01:05'
p348
sg70
I00
sg65
g344
sg71
(lp349
g14
ag11
ag1
ag23
ag313
ag10
ag13
ag7
ag24
assg24
F1.1000000000000001
sg313
I00
sg23
g207
ssg183
(lp350
sg23
NssS'script_name'
p351
S'MG_JEN_cps'
p352
sS'ms_name'
p353
S'D1.MS'
p354
sg176
NsS'./MG_JEN_Cohset.predict()'
p355
(dp356
g11
S'@@stations'
p357
sg1
S'@@polrep'
p358
sg14
(dp359
g16
S'MG_JEN_Cohset::predict()'
p360
sg18
g355
sg63
(dp361
sg21
(dp362
g11
I01
sg1
I01
sg23
I01
ssg25
S'MG_JEN_Cohsetpredict'
p363
sg27
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 01:05'
p364
sg29
g30
sg82
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p365
sg31
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 01:05'
p366
sg33
S'predict'
p367
sg35
(dp368
g11
(lp369
(lp370
I0
aI1
aI2
aI3
aI4
aa(lp371
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp372
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp373
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
ag357
asg1
(lp374
g2
ag42
ag358
asg23
(lp375
NaS'@@@Jsequence'
p376
assg58
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-28 01:05'
p377
sg60
Nsg61
g189
sg65
S'2006-02-28 01:05'
p378
sg66
S'MG_JEN_Cohset'
p379
sg68
(dp380
g1
I00
sg11
I00
ssg70
I00
sg19
g378
sg71
(lp381
g14
ag11
ag1
ag23
asg73
(dp382
g11
g79
sg1
g76
sg23
g81
sssg23
NssS'./MG_JEN_Cohset.make_sinks()'
p383
(dp384
S'fullDomainMux'
p385
I01
sS'output_col'
p386
S'PREDICT'
p387
sS'visu'
p388
I01
sS'flag'
p389
I00
sg14
(dp390
g16
S'MG_JEN_Cohset::make_sinks()'
p391
sg18
g383
sg63
(dp392
g389
I124
sg388
I123
sg385
I125
sg386
I121
sS'visu_array_config'
p393
I122
ssg25
S'MG_JEN_Cohsetmake_sinks'
p394
sg27
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 01:05'
p395
sg29
g30
sg82
S'Make sink nodes in the given Cohset object'
p396
sg31
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 01:05'
p397
sg33
S'make_sinks'
p398
sg35
(dp399
g389
(lp400
I01
aI00
aS'@@flag'
p401
asg393
(lp402
I01
aI00
aS'@@visu_array_config'
p403
asg386
(lp404
g387
aS'RESIDUALS'
p405
aS'DATA'
p406
aS'@@output_col'
p407
asg385
(lp408
I01
aI00
aS'@@fullDomainMux'
p409
asg388
(lp410
I01
aI00
aS'@@visu'
p411
assg58
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-28 01:05'
p412
sg60
Nsg61
g189
sg65
S'2006-02-28 01:05'
p413
sg66
S'MG_JEN_Cohset'
p414
sg103
(dp415
g389
I00
sg393
I00
sg385
I00
sg388
I00
ssg70
I00
sg19
g413
sg71
(lp416
g14
ag386
ag393
ag388
ag389
ag385
asg73
(dp417
g389
S'if True, insert a flagger for the output uv-data'
p418
sg393
S'if True, visualise the array config (from MS)'
p419
sg386
S'name of the logical (VisTile) output column'
p420
sg385
S'if True, attach an extra VisDataMux'
p421
sg388
S'if True, visualise the output uv-data'
p422
sssg393
I01
ssS'tile_size'
p423
I1
sS'./MG_JEN_Cohset.make_spigots()'
p424
(dp425
S'MS_corr_index'
p426
(lp427
I0
aI1
aI2
aI3
asg389
I00
sg14
(dp428
g16
S'MG_JEN_Cohset::make_spigots()'
p429
sg18
g424
sg63
(dp430
g389
I27
sg426
I25
sg388
I26
ssg21
(dp431
S'input_col'
p432
I01
ssg25
S'MG_JEN_Cohsetmake_spigots'
p433
sg27
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 01:05'
p434
sg29
g30
sg82
S'Make spigot nodes in the given Cohset object'
p435
sg31
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 01:05'
p436
sg33
S'make_spigots'
p437
sg35
(dp438
g389
(lp439
I01
aI00
aS'@@flag'
p440
asg426
(lp441
(lp442
I0
aI1
aI2
aI3
aa(lp443
I0
aI-1
aI-1
aI1
aa(lp444
I0
aI-1
aI-1
aI3
aaS'@@MS_corr_index'
p445
asg432
(lp446
g406
ag387
ag405
aS'@@input_col'
p447
asg388
(lp448
I01
aI00
aS'@@visu'
p449
assg58
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-28 01:05'
p450
sg60
Nsg61
g189
sg65
S'2006-02-28 01:05'
p451
sg66
S'MG_JEN_Cohset'
p452
sg103
(dp453
g389
I00
sg388
I00
ssg70
I00
sg19
g451
sg71
(lp454
g14
ag432
ag426
ag388
ag389
asg73
(dp455
g389
S'if True, insert a flagger for the input uv-data'
p456
sg426
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p457
sg432
S'name of the logical (VisTile) input column'
p458
sg388
S'if True, visualise the input uv-data'
p459
sssg432
g406
sg388
I01
ssg14
(dp460
g18
S'./MG_JEN_cps.'
p461
sg73
(dp462
g1
g76
sS'master_reqseq'
p463
S'if True, use a master reqseq for solver(s)'
p464
sg11
g79
sS'insert_flagger'
p465
S'if True, insert a flagger'
p466
sS'redun'
p467
S'if True, redundant spacing calibration'
p468
sS'insert_solver'
p469
S'if True, insert a solver'
p470
sg172
g180
sg353
S'name of the (AIPS++) Measurement Set'
p471
sS'chain_solvers'
p472
S'if True, chain the solvers (recommended)'
p473
sS'num_cells'
p474
S'if defined, ModRes argument [ntime,nfreq]'
p475
sg176
g182
sg423
S'(inputrec) size (in time-slots) of the input data-tile'
p476
sg174
g181
sg23
g81
ssS'reference'
p477
I00
sg29
g30
sg66
S'MG_JEN_cps'
p478
sg63
(dp479
g1
I7
sg11
I6
sg465
I2
sg467
I14
sg469
I1
sg172
I11
sg353
I4
sg176
I9
sg351
I0
sg474
I15
sg423
I5
sg174
I10
ssg21
(dp480
g1
I00
sg463
I01
sg11
I00
sS'last_changed'
p481
I01
sg467
I00
sg174
I00
sg472
I01
sg474
I00
sg23
I01
ssg27
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p482
sg61
g319
sg82
g482
sg103
(dp483
g463
I00
sg467
I00
sg465
I00
sg481
I00
sg469
I00
sg172
I00
ssg31
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p484
sg35
(dp485
g1
(lp486
g2
ag42
aS'@@polrep'
p487
asg463
(lp488
I01
aI00
aS'@@master_reqseq'
p489
asg11
(lp490
(lp491
I0
aI1
aI2
aI3
aI4
aa(lp492
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp493
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp494
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag52
aS'@@stations'
p495
asg465
(lp496
I01
aI00
aS'@@insert_flagger'
p497
asg467
(lp498
I01
aI00
aS'@@redun'
p499
asg469
(lp500
I01
aI00
aS'@@insert_solver'
p501
asg481
(lp502
S'd30jan2006'
p503
aS'@@last_changed'
p504
asg353
(lp505
g354
aS'@@ms_name'
p506
asg472
(lp507
I01
aS'@@chain_solvers'
p508
asg474
(lp509
Na(lp510
I5
aI2
aa(lp511
I2
aI2
aa(lp512
I3
aI3
aaS'@@num_cells'
p513
asg176
(lp514
Nag204
aS'@@parmtable'
p515
asg423
(lp516
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p517
asg172
(lp518
I01
aI00
aS'@@simul'
p519
asg174
(lp520
I00
aS'@@uvplane_effect'
p521
asg23
(lp522
NaS'@@@Jsequence'
p523
assg19
S'2006-02-28 01:05'
p524
sS'HISTORY'
p525
(dp526
g227
S'2006-02-28 01:05: Derived from: MG_JEN_cps_inspect.inarg'
p527
sg229
S'2006-02-28 01:05: Derived from: MG_JEN_cps.inarg'
p528
sg231
S'2006-02-28 01:05: Derived from: MG_JEN_cps_inspect_CORRECTED_DATA.inarg'
p529
sg233
S'2006-02-28 01:05: Derived from: MG_JEN_cps_inspect.inarg'
p530
ssg16
g352
sS'save_file'
p531
S'MG_JEN_cps_inspect_CORRECTED_DATA_protected.inarg'
p532
sS'file_filter'
p533
S'MG_JEN_cps*.inarg'
p534
sg33
S''
p535
sg58
S'<specific>'
p536
sS'browse'
p537
(dp538
g353
S'*.MS'
p539
ssg70
I01
sg65
g524
sg225
(dp540
S'11'
p541
S'.modify( tile_size ): 10  ->  1'
p542
sS'10'
p543
S'.modify(): stripped off: _JEN_inarg_option'
p544
sS'13'
p545
S".modify(): found ={'tile_size': 2, 'insert_solver': 1}"
p546
sS'12'
p547
S'.modify( insert_solver ): True  ->  False'
p548
sS'15'
p549
S".modify(): found ={'data_column_name': 1}"
p550
sS'14'
p551
S'.modify(): stripped off: _JEN_inarg_option'
p552
sg227
S'.modify( uvplane_effect ): False  ->  True'
p553
sg229
S'.modify(): stripped off: _JEN_inarg_option'
p554
sg231
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p555
sg233
S".modify(): found ={'uvplane_effect': 1}"
p556
sg235
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p557
sg237
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p558
sS'7'
p559
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p560
sS'6'
p561
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p562
sS'9'
p563
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p564
sS'8'
p565
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p566
ssg71
(lp567
g14
ag351
ag469
ag465
ag481
ag353
ag423
ag11
ag1
ag23
ag176
ag174
ag172
ag472
ag463
ag467
ag474
aS'./MG_JEN_exec.stream_control()'
p568
ag424
aS'./MG_JEN_Sixpack.newstar_source()'
p569
ag3
ag355
aS'./MG_JEN_Cohset.insert_solver()'
p570
ag383
assg465
I00
sg481
g503
sg174
I01
sg474
Nsg569
(dp571
S'f0'
p572
F1000000.0
sS'major'
p573
F0.0
sS'unsolvable'
p574
I00
sS'from_LSM'
p575
NsS'name'
p576
NsS'I0'
p577
F1.0
sS'SI'
p578
NsS'Qpct'
p579
NsS'punit'
p580
S'unpol'
p581
sS'fsr_trace'
p582
I01
sS'shape'
p583
S'point'
p584
sS'pa'
p585
F0.0
sS'RA'
p586
F4.3570000000000002
sg176
NsS'RM'
p587
NsS'Upct'
p588
NsS'Dec'
p589
F1.0920000000000001
sS'Vpct'
p590
NsS'minor'
p591
F0.0
sg14
(dp592
g18
g569
sg73
(dp593
g572
S'reference freq (Hz): I=I0 @ f=f0'
p594
sg573
S'major axis (arcsec)'
p595
sg574
S'if True, do NOT store solvegroup/parmgroup info'
p596
sg575
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p597
sg577
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p598
sg578
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p599
sg579
S'Stokes Q (percentage of I)'
p600
sg580
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p601
sg583
S'source shape'
p602
sg585
S'position angle (rad)'
p603
sg582
S'If True, attach to forest state record'
p604
sg176
S'name of the MeqParm table (AIPS++)'
p605
sg587
S'Intrinsic Rotation Measure (rad/m2)'
p606
sg588
S'Stokes U (percentage of I)'
p607
sg589
S'Declination (rad, J2000)'
p608
sg590
S'Stokes V (percentage of I)'
p609
sg591
S'minor axis (arcsec)'
p610
sg586
S'Right Ascension (rad, J2000)'
p611
ssg29
g30
sg66
S'MG_JEN_Sixpack'
p612
sg63
(dp613
g589
I41
sg575
I29
sg577
I33
sg579
I34
sg580
I28
sg578
I38
sg176
I31
sg586
I40
sg587
I37
sg588
I35
sg590
I36
ssg21
(dp614
g572
I01
sg573
I01
sg574
I01
sg575
I00
sg582
I01
sg580
I00
sg583
I01
sg585
I01
sg591
I01
sg576
I01
ssg27
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 01:05'
p615
sg61
S'10feb2006'
p616
sg537
(dp617
g575
S'*.lsm'
p618
ssg82
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p619
sg103
(dp620
g574
I00
sg582
I00
ssg31
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 01:05'
p621
sg35
(dp622
g572
(lp623
F1000000.0
aS'@@f0'
p624
asg573
(lp625
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p626
asg574
(lp627
I01
aI00
aS'@@unsolvable'
p628
asg575
(lp629
NaS'@@from_LSM'
p630
asg577
(lp631
F1.0
aF10.0
aS'@@I0'
p632
asg578
(lp633
NaF-0.69999999999999996
a(lp634
F0.44700000000000001
aF-0.184
aaS'@@SI'
p635
asg579
(lp636
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p637
asg580
(lp638
g581
aS'unpol2'
p639
aS'unpol10'
p640
aS'QUV'
p641
aS'QU'
p642
aS'Qonly'
p643
aS'Uonly'
p644
aS'Vonly'
p645
aS'3c147'
p646
aS'3c286'
p647
aS'3c48'
p648
aS'3c295'
p649
aS'RMtest'
p650
aS'SItest'
p651
aS'@@punit'
p652
asg582
(lp653
I01
aI00
aS'@@fsr_trace'
p654
asg583
(lp655
g584
aS'ell.gauss'
p656
aS'@@shape'
p657
asg585
(lp658
F0.0
aF1.0
aF-0.5
aS'@@pa'
p659
asg586
(lp660
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p661
asg176
(lp662
NaS'@@parmtable'
p663
asg587
(lp664
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p665
asg588
(lp666
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p667
asg589
(lp668
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p669
asg590
(lp670
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p671
asg591
(lp672
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p673
asg576
(lp674
NaS'@@name'
p675
assg60
Nsg19
S'2006-02-28 01:05'
p676
sg16
S'MG_JEN_Sixpack::newstar_source()'
p677
sg25
S'MG_JEN_Sixpacknewstar_source'
p678
sg33
S'newstar_source'
p679
sg58
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-28 01:05'
p680
sS'callback'
p681
(dp682
g580
I01
ssg70
I00
sg65
g676
sg71
(lp683
g14
ag580
ag575
ag576
ag176
ag574
ag577
ag579
ag588
ag590
ag587
ag578
ag572
ag586
ag589
ag582
ag583
ag573
ag591
ag585
asssg463
I00
sg11
g491
sg568
(dp684
S'channel_start_index'
p685
I10
sS'data_column_name'
p686
S'CORRECTED_DATA'
p687
sS'predict_column'
p688
g687
sg353
S'@@ms_name'
p689
sg14
(dp690
g18
g568
sg73
(dp691
g685
S'(inputrec.sel) index of first selected freq channel'
p692
sg686
S'(inputrec) MS input column'
p693
sg688
S'MS output column to be associated with the VisTile predict-column'
p694
sg353
g471
sg423
g476
sS'channel_increment'
p695
S'(inputrec.sel) take every nth channel (1=all)'
p696
sS'channel_end_index'
p697
S'(inputrec.sel) index of last selected freq channel'
p698
sS'write_flags'
p699
S'(outputrec) if True, write flags to MS'
p700
ssg29
g30
sg66
S'MG_JEN_exec'
p701
sg63
(dp702
g685
I19
sg686
I18
sg688
I23
sg699
I22
sg697
I20
sg695
I21
ssg21
(dp703
g353
I01
sg423
I01
ssg27
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 01:05'
p704
sg61
S'20jan2006'
p705
sg68
(dp706
g353
I00
sg423
I00
ssg82
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 01:05'
p707
sg103
(dp708
g699
I00
ssg31
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 01:05'
p709
sg35
(dp710
g685
(lp711
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p712
asg686
(lp713
g406
ag687
aS'@@data_column_name'
p714
asg688
(lp715
g406
ag687
aS'MODEL_DATA'
p716
aS'@@predict_column'
p717
asg353
(lp718
g354
ag689
asg423
(lp719
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p720
asg695
(lp721
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p722
asg697
(lp723
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p724
asg699
(lp725
I01
aI00
aS'@@write_flags'
p726
assg60
Nsg19
S'2006-02-28 01:05'
p727
sg16
S'MG_JEN_exec::stream_control()'
p728
sg25
S'MG_JEN_execstream_control'
p729
sg33
S'stream_control'
p730
sg58
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-28 01:05'
p731
sg537
(dp732
g353
g539
ssg70
I00
sg65
g727
sg225
(dp733
g227
S'.modify( data_column_name ): DATA  ->  CORRECTED_DATA'
p734
sg229
S'.modify( tile_size ): @@tile_size  ->  1'
p735
ssg71
(lp736
g14
ag353
ag423
ag686
ag685
ag697
ag695
ag699
ag688
assg423
I1
sg695
I1
sg697
I50
sg699
I00
ssg467
I00
sg469
I00
sg172
I00
sg472
I01
sg23
Nsg570
(dp737
S'correct_after'
p738
I01
sg463
S'@@master_reqseq'
p739
sS'condeq_unop'
p740
Nsg388
I01
sg467
S'@@redun'
p741
sS'solver_subtree'
p742
NsS'subtract_after'
p743
I00
sg472
S'@@chain_solvers'
p744
sg14
(dp745
g18
g570
sg73
(dp746
g738
S'if True, correct measured with predicted.Joneset'
p747
sg463
g464
sg740
S'Optional unary operation on Condeq inputs'
p748
sg388
S'if True, include full visualisation'
p749
sg467
g468
sg742
S'solver subtree qualifier(s)'
p750
sg743
S'if True, subtract predicted from measured'
p751
sg472
g473
sS'flag_residuals'
p752
S'if True, flag the residuals'
p753
sg474
g475
ssg29
g30
sg66
S'MG_JEN_Cohset'
p754
sg63
(dp755
g743
I106
sg738
I107
sg740
I104
sg388
I105
ssg21
(dp756
g463
I01
sg467
I01
sg742
I01
sg472
I01
sg752
I01
sg474
I01
ssg27
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 01:05'
p757
sg61
g189
sg68
(dp758
g474
I00
sg472
I00
sg467
I00
sg463
I00
ssg82
S'insert one or more solver subtrees in the data stream'
p759
sg103
(dp760
g738
I00
sg463
I00
sg388
I00
sg467
I00
sg743
I00
sg752
I00
ssg31
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 01:05'
p761
sg35
(dp762
g738
(lp763
I01
aI00
aS'@@correct_after'
p764
asg463
(lp765
I01
aI00
ag739
asg740
(lp766
NaS'Abs'
p767
aS'Arg'
p768
aS'@@condeq_unop'
p769
asg388
(lp770
I01
aI00
aS'@@visu'
p771
asg467
(lp772
I01
aI00
ag741
asg742
(lp773
NaS'@@solver_subtree'
p774
asg743
(lp775
I01
aI00
aS'@@subtract_after'
p776
asg472
(lp777
I01
ag744
asg752
(lp778
I01
aI00
aS'@@flag_residuals'
p779
asg474
(lp780
Na(lp781
I5
aI2
aa(lp782
I2
aI2
aa(lp783
I3
aI3
aaS'@@num_cells'
p784
assg60
Nsg19
S'2006-02-28 01:05'
p785
sg16
S'MG_JEN_Cohset::insert_solver()'
p786
sg25
S'MG_JEN_Cohsetinsert_solver'
p787
sg33
S'insert_solver'
p788
sg58
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-28 01:05'
p789
sg70
I00
sg65
g785
sg225
(dp790
g229
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p791
ssg71
(lp792
g14
ag742
ag467
ag474
ag472
ag463
ag740
ag388
ag743
ag738
ag752
aS'./MG_JEN_Cohset.solver_subtree()'
p793
assg474
g784
sg793
(dp794
S'rmin'
p795
Nsg388
I01
sS'epsilon'
p796
F0.0001
sS'rmax'
p797
NsS'usesvd'
p798
I01
sS'debug_level'
p799
I10
sS'solvegroup'
p800
(lp801
sg14
(dp802
g16
S'MG_JEN_Cohset::solver_subtree()'
p803
sg18
g793
sg19
S'2006-02-28 01:05'
p804
sg21
(dp805
g799
I01
sg474
I00
ssg25
S'MG_JEN_Cohsetsolver_subtree'
p806
sg27
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 01:05'
p807
sg29
g30
sg31
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 01:05'
p808
sg33
S'solver_subtree'
p809
sg35
(dp810
g795
(lp811
NaI100
aI200
aI500
aS'@@rmin'
p812
asg388
(lp813
I01
aI00
aS'@@visu'
p814
asg796
(lp815
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p816
asg797
(lp817
NaI500
aI1000
aI2000
aS'@@rmax'
p818
asg798
(lp819
I01
aI00
aS'@@usesvd'
p820
asg799
(lp821
I10
aS'@@debug_level'
p822
asg800
(lp823
g801
a(lp824
g207
aa(lp825
S'Ggain'
p826
aa(lp827
S'Gphase'
p828
aa(lp829
S'Gpol1'
p830
aa(lp831
S'Gpol2'
p832
aa(lp833
g215
aa(lp834
g207
aS'stokesI'
p835
aa(lp836
g835
aa(lp837
S'stokesIQU'
p838
aa(lp839
S'stokesIQUV'
p840
aa(lp841
g207
aS'DJones'
p842
aa(lp843
g842
aa(lp844
S'Dang'
p845
aa(lp846
S'Dell'
p847
aa(lp848
S'Dreal'
p849
aa(lp850
S'Dimag'
p851
aa(lp852
g207
ag842
ag163
aa(lp853
g163
aa(lp854
g207
ag56
aa(lp855
g56
aa(lp856
S'Breal'
p857
aa(lp858
S'Bimag'
p859
aa(lp860
S'Bpol1'
p861
aa(lp862
S'Bpol2'
p863
aaS'@@solvegroup'
p864
asg474
(lp865
Na(lp866
I5
aI2
aa(lp867
I2
aI2
aa(lp868
I3
aI3
aaS'@@num_cells'
p869
asS'history'
p870
(lp871
I01
aI00
aS'@@history'
p872
asS'num_iter'
p873
(lp874
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p875
asS'condition'
p876
(lp877
NaS'Gphase_X_sum=0.0'
p878
aS'Gphase_Y_sum=0.0'
p879
a(lp880
g878
ag879
aa(lp881
S'Gphase_X_first=0.0'
p882
aS'Gphase_Y_first=0.0'
p883
aa(lp884
S'Gphase_X_last=0.0'
p885
aS'Gphase_Y_last=0.0'
p886
aaS'Dang_sum=0.0'
p887
a(lp888
S'Bimag_X_sum=0.0'
p889
aS'Bimag_Y_sum=0.0'
p890
aa(lp891
S'Breal_X_product=1.0'
p892
aS'Breal_Y_product=1.0'
p893
aaS'@@condition'
p894
asS'colin_factor'
p895
(lp896
F1e-08
aF0.0
aS'@@colin_factor'
p897
assg58
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-28 01:05'
p898
sg60
Nsg61
S'20dec2005'
p899
sg63
(dp900
g795
I111
sg388
I119
sg796
I115
sg797
I112
sg798
I117
sg800
I109
sg474
I113
sg870
I120
sg873
I114
sg876
I110
sg895
I116
ssg65
g804
sg66
S'MG_JEN_Cohset'
p901
sg103
(dp902
g798
I00
sg870
I00
sg388
I00
ssg70
I00
sg71
(lp903
g14
ag800
ag876
ag795
ag797
ag474
ag873
ag796
ag895
ag798
ag799
ag388
ag870
asg73
(dp904
g795
S'if specified, only use baselines>=rmin'
p905
sg388
S'if True, include visualisation'
p906
sg796
S'iteration control criterion'
p907
sg797
S'if specified, only use baselines<=rmax'
p908
sg798
S'if True, use Singular Value Decomposition (SVD)'
p909
sg799
S'solver debug_level'
p910
sg800
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p911
sg474
g475
sg870
S'if True, include history collection of metrics'
p912
sg873
S'max number of iterations'
p913
sg876
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p914
sg895
S'colinearity factor'
p915
ssg82
S'Make a solver-subtree for the given Condeq Cohset'
p916
ssg474
Nsg870
I01
sg873
I20
sg876
Nsg895
F1e-08
ssg752
I00
ss.