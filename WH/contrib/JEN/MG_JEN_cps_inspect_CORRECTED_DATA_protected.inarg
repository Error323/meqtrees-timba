(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I86
sg17
I91
sg21
I88
sg38
I87
sg25
I90
sg44
I89
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-14 18:46'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-14 18:46'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I110
sg129
I111
sg131
I109
sg142
I113
sg144
I108
sg146
I114
sg148
I115
sg149
I112
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-14 18:46'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-14 18:46'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I76
sg217
I78
sg208
I77
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-14 18:46'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-14 18:46'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I52
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones_WSRT'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg14
(lp294
(lp295
I0
aI1
aI2
aI3
aI4
aa(lp296
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p299
ag121
assg101
Nsg102
S'2006-02-14 18:46'
p300
sg104
S'MG_JEN_Cohset::JJones()'
p301
sg106
S'MG_JEN_CohsetJJones'
p302
sg108
S'JJones'
p303
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-14 18:46'
p304
sg112
I00
sg113
g300
sg114
(dp305
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p306
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p307
sS'3'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p309
sS'2'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p311
sS'4'
p312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p313
ssg118
(lp314
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p315
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p316
ag122
assg316
(dp317
g12
I00
sg1
S'@@polrep'
p318
sg14
S'@@stations'
p319
sg22
F0.0
sg23
S'@@uvplane_effect'
p320
sg7
S'@@parmtable'
p321
sg26
(dp322
g28
g316
sg29
(dp323
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p324
sg50
(dp325
sg52
(dp326
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p327
sg56
S'12dec2005'
p328
sg58
(dp329
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p330
sg62
(dp331
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p332
sg66
(dp333
g12
(lp334
I01
aI00
aS'@@unsolvable'
p335
asg1
(lp336
g2
ag71
ag318
asg14
(lp337
(lp338
I0
aag319
asg22
(lp339
F0.0
aS'@@ft_coeff_scale'
p340
asg23
(lp341
I00
ag320
asg7
(lp342
Nag321
assg101
Nsg102
S'2006-02-14 18:46'
p343
sg104
S'MG_JEN_Joneset::KJones()'
p344
sg106
S'MG_JEN_JonesetKJones'
p345
sg108
S'KJones'
p346
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-14 18:46'
p347
sg112
I00
sg113
g343
sg118
(lp348
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg315
(dp349
g12
I00
sg1
S'@@polrep'
p350
sS'fdeg_Ggain'
p351
I0
sS'tdeg_Gphase'
p352
S'@tdeg_Ggain'
p353
sS'stddev_Ggain'
p354
F0.0
sS'c00_Gphase'
p355
F0.0
sg22
F0.0
sg14
S'@@stations'
p356
sS'tdeg_Ggain'
p357
I3
sS'fdeg_Gphase'
p358
S'@fdeg_Ggain'
p359
sg7
S'@@parmtable'
p360
sg26
(dp361
g28
g315
sg29
(dp362
g12
g31
sg1
g32
sg14
g33
sg355
S'default c00 funklet value'
p363
sg351
S'degree of freq polynomial'
p364
sg352
S'degree of time polynomial'
p365
sg22
g37
sg357
g365
sg358
g364
sg7
g43
sg354
S'scatter in default c00 funklet values'
p366
sS'subtile_size_Gphase'
p367
S'sub-tile size (None=entire tile)'
p368
sS'c00_Ggain'
p369
g363
sS'stddev_Gphase'
p370
g366
sS'Gpolar'
p371
S'if True, use MeqPolar, otherwise MeqToComplex'
p372
sS'subtile_size_Ggain'
p373
g368
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p374
sg50
(dp375
g351
I60
sg373
I64
sg352
I63
sg357
I62
sg358
I61
sg367
I65
sg371
I59
ssg52
(dp376
g12
I01
sg1
I01
sg14
I01
sg354
I01
sg355
I01
sg22
I01
sg23
I01
sg7
I01
sg369
I01
sg370
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p377
sg56
S'15dec2005'
p378
sg58
(dp379
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p380
sg62
(dp381
g12
I00
sg371
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p382
sg66
(dp383
g12
(lp384
I01
aI00
aS'@@unsolvable'
p385
asg1
(lp386
g2
ag71
ag350
asg14
(lp387
(lp388
I0
aag356
asg355
(lp389
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p390
asg351
(lp391
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p392
asg352
(lp393
I0
aI1
aI2
aI3
ag353
aS'@@tdeg_Gphase'
p394
asg22
(lp395
F0.0
aS'@@ft_coeff_scale'
p396
asg357
(lp397
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p398
asg358
(lp399
I0
aI1
aI2
aI3
ag359
aS'@@fdeg_Gphase'
p400
asg7
(lp401
Nag360
asg354
(lp402
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p403
asg367
(lp404
S'@subtile_size_Ggain'
p405
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p406
asg369
(lp407
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p408
asg370
(lp409
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p410
asg371
(lp411
I01
aI00
aS'@@Gpolar'
p412
asg373
(lp413
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p414
asg23
(lp415
I00
aS'@@uvplane_effect'
p416
assg101
Nsg102
S'2006-02-14 18:46'
p417
sg104
S'MG_JEN_Joneset::GJones()'
p418
sg106
S'MG_JEN_JonesetGJones'
p419
sg108
S'GJones'
p420
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-14 18:46'
p421
sg112
I00
sg113
g417
sg114
(dp422
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p423
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p424
ssg118
(lp425
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag371
ag351
ag358
ag357
ag352
ag373
ag367
ag369
ag355
ag354
ag370
assg367
g405
sg369
F1.0
sg370
F0.0
sg371
I00
sg373
Nsg23
g416
ssg263
(lp426
ssg26
(dp427
g28
S'./MG_JEN_cps.'
p428
sg29
(dp429
g1
g262
sS'master_reqseq'
p430
S'if True, use a master reqseq for solver(s)'
p431
sg14
g265
sS'insert_flagger'
p432
S'if True, insert a flagger'
p433
sS'redun'
p434
S'if True, redundant spacing calibration'
p435
sS'insert_solver'
p436
S'if True, insert a solver'
p437
sg5
S'name of the (AIPS++) Measurement Set'
p438
sS'chain_solvers'
p439
S'if True, chain the solvers (recommended)'
p440
sS'num_cells'
p441
S'if defined, ModRes argument [ntime,nfreq]'
p442
sg7
g261
sS'tile_size'
p443
S'(inputrec) size (in time-slots) of the input data-tile'
p444
sg23
g39
ssS'reference'
p445
I00
sg46
g47
sg48
S'MG_JEN_cps'
p446
sg50
(dp447
g1
I8
sg14
I6
sg432
I2
sg434
I12
sg436
I1
sg5
I4
sg7
I7
sg3
I0
sg441
I13
sg443
I5
sg23
I9
ssg52
(dp448
g1
I00
sg430
I01
sg14
I00
sS'last_changed'
p449
I01
sg434
I00
sg23
I00
sg439
I01
sg441
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p450
sg56
g378
sg60
g450
sg62
(dp451
g449
I00
sg432
I00
sg430
I00
sg436
I00
sg434
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p452
sg66
(dp453
g1
(lp454
g2
ag71
aS'@@polrep'
p455
asg430
(lp456
I01
aI00
aS'@@master_reqseq'
p457
asg14
(lp458
(lp459
I0
aI1
aI2
aI3
aI4
aa(lp460
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp461
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp462
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p463
asg432
(lp464
I01
aI00
aS'@@insert_flagger'
p465
asg449
(lp466
S'd30jan2006'
p467
aS'@@last_changed'
p468
asg436
(lp469
I01
aI00
aS'@@insert_solver'
p470
asg434
(lp471
I01
aI00
aS'@@redun'
p472
asg5
(lp473
g6
aS'@@ms_name'
p474
asg439
(lp475
I01
aS'@@chain_solvers'
p476
asg441
(lp477
Na(lp478
I5
aI2
aa(lp479
I2
aI2
aa(lp480
I3
aI3
aaS'@@num_cells'
p481
asg7
(lp482
NaS'@@parmtable'
p483
asg443
(lp484
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p485
asg23
(lp486
I00
aS'@@uvplane_effect'
p487
assg102
S'2006-02-14 18:46'
p488
sS'HISTORY'
p489
(dp490
g253
S'2006-02-14 18:46: Derived from: MG_JEN_cps_inspect.inarg'
p491
sg116
S'2006-02-14 18:46: Derived from: MG_JEN_cps.inarg'
p492
sg308
S'2006-02-14 18:46: Derived from: MG_JEN_cps_inspect_CORRECTED_DATA.inarg'
p493
sg310
S'2006-02-14 18:46: Derived from: MG_JEN_cps_inspect.inarg'
p494
ssg104
g4
sS'save_file'
p495
S'MG_JEN_cps_inspect_CORRECTED_DATA_protected.inarg'
p496
sS'file_filter'
p497
S'MG_JEN_cps*.inarg'
p498
sg108
S''
p499
sg110
S'<specific>'
p500
sS'browse'
p501
(dp502
g5
S'*.MS'
p503
ssg112
I01
sg113
g488
sg114
(dp504
S'11'
p505
S'.modify( tile_size ): 10  ->  1'
p506
sS'10'
p507
S'.modify(): stripped off: _JEN_inarg_option'
p508
sS'13'
p509
S".modify(): found ={'tile_size': 2, 'insert_solver': 1}"
p510
sS'12'
p511
S'.modify( insert_solver ): True  ->  False'
p512
sS'15'
p513
S".modify(): found ={'data_column_name': 1}"
p514
sS'14'
p515
S'.modify(): stripped off: _JEN_inarg_option'
p516
sg253
S'.modify( uvplane_effect ): False  ->  True'
p517
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p518
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p519
sg310
S".modify(): found ={'uvplane_effect': 1}"
p520
sS'5'
p521
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p522
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p523
sS'7'
p524
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p525
sS'6'
p526
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p527
sS'9'
p528
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p529
sS'8'
p530
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p531
ssg118
(lp532
g26
ag3
ag436
ag432
ag449
ag5
ag443
ag14
ag7
ag1
ag23
ag439
ag430
ag434
ag441
aS'./MG_JEN_exec.stream_control()'
p533
aS'./MG_JEN_Cohset.make_spigots()'
p534
aS'./MG_JEN_Sixpack.newstar_source()'
p535
ag8
aS'./MG_JEN_Cohset.predict()'
p536
aS'./MG_JEN_Cohset.insert_solver()'
p537
aS'./MG_JEN_Cohset.make_sinks()'
p538
assg538
(dp539
S'fullDomainMux'
p540
I01
sS'output_col'
p541
S'PREDICT'
p542
sS'visu'
p543
I01
sS'flag'
p544
I00
sg26
(dp545
g104
S'MG_JEN_Cohset::make_sinks()'
p546
sg28
g538
sg50
(dp547
g544
I147
sg543
I146
sg540
I148
sg541
I144
sS'visu_array_config'
p548
I145
ssg106
S'MG_JEN_Cohsetmake_sinks'
p549
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p550
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p551
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p552
sg108
S'make_sinks'
p553
sg66
(dp554
g544
(lp555
I01
aI00
aS'@@flag'
p556
asg548
(lp557
I01
aI00
aS'@@visu_array_config'
p558
asg541
(lp559
g542
aS'RESIDUALS'
p560
aS'DATA'
p561
aS'@@output_col'
p562
asg540
(lp563
I01
aI00
aS'@@fullDomainMux'
p564
asg543
(lp565
I01
aI00
aS'@@visu'
p566
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-14 18:46'
p567
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p568
sg48
S'MG_JEN_Cohset'
p569
sg62
(dp570
g544
I00
sg548
I00
sg540
I00
sg543
I00
ssg112
I00
sg102
g568
sg118
(lp571
g26
ag541
ag548
ag543
ag544
ag540
asg29
(dp572
g544
S'if True, insert a flagger for the output uv-data'
p573
sg548
S'if True, visualise the array config (from MS)'
p574
sg541
S'name of the logical (VisTile) output column'
p575
sg540
S'if True, attach an extra VisDataMux'
p576
sg543
S'if True, visualise the output uv-data'
p577
sssg548
I01
ssg443
I1
sg534
(dp578
S'MS_corr_index'
p579
(lp580
I0
aI1
aI2
aI3
asg544
I00
sg26
(dp581
g104
S'MG_JEN_Cohset::make_spigots()'
p582
sg28
g534
sg50
(dp583
g544
I25
sg579
I23
sg543
I24
ssg52
(dp584
S'input_col'
p585
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p586
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p587
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p588
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p589
sg108
S'make_spigots'
p590
sg66
(dp591
g544
(lp592
I01
aI00
aS'@@flag'
p593
asg579
(lp594
g580
a(lp595
I0
aI-1
aI-1
aI1
aa(lp596
I0
aI-1
aI-1
aI3
aaS'@@'
p597
aS'@@MS_corr_index'
p598
asg585
(lp599
g561
ag542
ag560
aS'@@input_col'
p600
asg543
(lp601
I01
aI00
aS'@@visu'
p602
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-14 18:46'
p603
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p604
sg48
S'MG_JEN_Cohset'
p605
sg62
(dp606
g544
I00
sg543
I00
ssg112
I00
sg102
g604
sg118
(lp607
g26
ag585
ag579
ag543
ag544
asg29
(dp608
g544
S'if True, insert a flagger for the input uv-data'
p609
sg579
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p610
sg585
S'name of the logical (VisTile) input column'
p611
sg543
S'if True, visualise the input uv-data'
p612
sssg585
g561
sg543
I01
ssg536
(dp613
g1
S'@@polrep'
p614
sg26
(dp615
g104
S'MG_JEN_Cohset::predict()'
p616
sg28
g536
sg50
(dp617
sg52
(dp618
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p619
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p620
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p621
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p622
sg108
S'predict'
p623
sg66
(dp624
g1
(lp625
g2
ag71
ag614
asg14
(lp626
(lp627
I0
aI1
aI2
aI3
aI4
aa(lp628
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp629
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp630
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p631
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-14 18:46'
p632
sg101
Nsg56
g270
sg113
S'2006-02-14 18:46'
p633
sg48
S'MG_JEN_Cohset'
p634
sg58
(dp635
g1
I00
sg14
I00
ssg112
I00
sg102
g633
sg118
(lp636
g26
ag14
ag1
asg29
(dp637
g1
g262
sg14
g265
sssg14
g631
ssg432
I00
sg449
g467
sg23
I01
sg441
Nsg535
(dp638
S'f0'
p639
F1000000.0
sS'major'
p640
F0.0
sg12
I00
sS'shape'
p641
S'point'
p642
sg7
NsS'Upct'
p643
NsS'I0'
p644
F1.0
sS'Vpct'
p645
NsS'dDec'
p646
F0.0
sS'pa'
p647
F0.0
sg26
(dp648
g28
g535
sg29
(dp649
g639
S'reference freq (Hz): I=I0 @ f=f0'
p650
sg640
S'major axis (arcsec)'
p651
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p652
sg644
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p653
sg647
S'position angle (rad)'
p654
sS'SI'
p655
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p656
sS'Qpct'
p657
S'Stokes Q (percentage of I)'
p658
sS'punit'
p659
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p660
sg646
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p661
sg641
S'source shape'
p662
sg7
S'name of the MeqParm table (AIPS++)'
p663
sS'fsr_trace'
p664
S'If True, attach to forest state record'
p665
sS'RA0'
p666
S'If RA0 is a node, RA0+dRA overrides RA'
p667
sS'dRA'
p668
S'RA offset (arcsec): RA = RA0 + dRA'
p669
sS'RM'
p670
S'Intrinsic Rotation Measure (rad/m2)'
p671
sg643
S'Stokes U (percentage of I)'
p672
sS'Dec'
p673
S'Declination (rad, J2000)'
p674
sS'Dec0'
p675
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p676
sg645
S'Stokes V (percentage of I)'
p677
sS'minor'
p678
S'minor axis (arcsec)'
p679
sS'RA'
p680
S'Right Ascension (rad, J2000)'
p681
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p682
sg50
(dp683
g673
I38
sg644
I30
sg657
I31
sg645
I33
sg655
I35
sg7
I28
sg680
I37
sg670
I34
sg643
I32
sg659
I26
ssg52
(dp684
g639
I01
sg640
I01
sg12
I01
sS'name'
p685
I01
sg664
I01
sg659
I00
sg646
I01
sg641
I01
sg647
I01
sg666
I01
sg668
I01
sg675
I01
sg678
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p686
sg56
S'10feb2006'
p687
sg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p688
sg62
(dp689
g12
I00
sg664
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p690
sg66
(dp691
g639
(lp692
F1000000.0
aS'@@f0'
p693
asg640
(lp694
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p695
asg12
(lp696
I01
aI00
aS'@@unsolvable'
p697
asg641
(lp698
g642
aS'ell.gauss'
p699
aS'@@shape'
p700
asg7
(lp701
NaS'@@parmtable'
p702
asg643
(lp703
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p704
asg644
(lp705
F1.0
aF10.0
aS'@@I0'
p706
asg645
(lp707
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p708
asg646
(lp709
F0.0
aS'@@dDec'
p710
asg647
(lp711
F0.0
aF1.0
aF-0.5
aS'@@pa'
p712
asg680
(lp713
F0.0
aF0.5
aF1.0
aS'@@RA'
p714
asg668
(lp715
F0.0
aS'@@dRA'
p716
asg670
(lp717
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p718
asg675
(lp719
NaS'@@Dec0'
p720
asg678
(lp721
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p722
asg657
(lp723
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p724
asg659
(lp725
S'unpol'
p726
aS'unpol2'
p727
aS'unpol10'
p728
aS'QUV'
p729
aS'QU'
p730
aS'Qonly'
p731
aS'Uonly'
p732
aS'Vonly'
p733
aS'3c147'
p734
aS'3c286'
p735
aS'3c48'
p736
aS'3c295'
p737
aS'RMtest'
p738
aS'SItest'
p739
aS'@@punit'
p740
asg666
(lp741
NaS'@@RA0'
p742
asg673
(lp743
F0.5
aF1.0
aS'@@Dec'
p744
asg685
(lp745
NaS'@@name'
p746
asg664
(lp747
I01
aI00
aS'@@fsr_trace'
p748
asg655
(lp749
NaF-0.69999999999999996
a(lp750
F0.44700000000000001
aF-0.184
aaS'@@SI'
p751
assg101
Nsg102
S'2006-02-14 18:46'
p752
sg104
S'MG_JEN_Sixpack::newstar_source()'
p753
sg106
S'MG_JEN_Sixpacknewstar_source'
p754
sg108
S'newstar_source'
p755
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-14 18:46'
p756
sS'callback'
p757
(dp758
g659
I01
ssg112
I00
sg113
g752
sg118
(lp759
g26
ag659
ag685
ag7
ag12
ag644
ag657
ag643
ag645
ag670
ag655
ag639
ag680
ag673
ag664
ag641
ag640
ag678
ag647
ag666
ag675
ag668
ag646
assg668
F0.0
sg670
Nsg675
Nsg678
F0.0
sg680
F0.0
sg657
Nsg659
g726
sg666
Nsg673
F1.0
sg685
Nsg664
I01
sg655
Nssg430
I00
sg14
g459
sg533
(dp760
S'channel_start_index'
p761
I10
sS'data_column_name'
p762
S'CORRECTED_DATA'
p763
sS'predict_column'
p764
g763
sg5
S'@@ms_name'
p765
sg26
(dp766
g28
g533
sg29
(dp767
g761
S'(inputrec.sel) index of first selected freq channel'
p768
sg762
S'(inputrec) MS input column'
p769
sg764
S'MS output column to be associated with the VisTile predict-column'
p770
sg5
g438
sg443
g444
sS'channel_increment'
p771
S'(inputrec.sel) take every nth channel (1=all)'
p772
sS'channel_end_index'
p773
S'(inputrec.sel) index of last selected freq channel'
p774
sS'write_flags'
p775
S'(outputrec) if True, write flags to MS'
p776
ssg46
g47
sg48
S'MG_JEN_exec'
p777
sg50
(dp778
g761
I17
sg762
I16
sg764
I21
sg775
I20
sg773
I18
sg771
I19
ssg52
(dp779
g5
I01
sg443
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p780
sg56
S'20jan2006'
p781
sg58
(dp782
g5
I00
sg443
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p783
sg62
(dp784
g775
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p785
sg66
(dp786
g761
(lp787
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p788
asg762
(lp789
g561
ag763
aS'@@data_column_name'
p790
asg764
(lp791
g561
ag763
aS'MODEL_DATA'
p792
aS'@@predict_column'
p793
asg5
(lp794
g6
ag765
asg443
(lp795
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p796
asg771
(lp797
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p798
asg773
(lp799
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p800
asg775
(lp801
I01
aI00
aS'@@write_flags'
p802
assg101
Nsg102
S'2006-02-14 18:46'
p803
sg104
S'MG_JEN_exec::stream_control()'
p804
sg106
S'MG_JEN_execstream_control'
p805
sg108
S'stream_control'
p806
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-14 18:46'
p807
sg501
(dp808
g5
g503
ssg112
I00
sg113
g803
sg114
(dp809
g253
S'.modify( data_column_name ): DATA  ->  CORRECTED_DATA'
p810
sg116
S'.modify( tile_size ): @@tile_size  ->  1'
p811
ssg118
(lp812
g26
ag5
ag443
ag762
ag761
ag773
ag771
ag775
ag764
assg443
I1
sg771
I1
sg773
I50
sg775
I00
ssg434
I00
sg436
I00
sg439
I01
sg537
(dp813
S'correct_after'
p814
I01
sg430
S'@@master_reqseq'
p815
sS'condeq_unop'
p816
Nsg543
I01
sg434
S'@@redun'
p817
sS'solver_subtree'
p818
NsS'subtract_after'
p819
I00
sg439
S'@@chain_solvers'
p820
sg26
(dp821
g28
g537
sg29
(dp822
g814
S'if True, correct measured with predicted.Joneset'
p823
sg430
g431
sg816
S'Optional unary operation on Condeq inputs'
p824
sg543
S'if True, include full visualisation'
p825
sg434
g435
sg818
S'solver subtree qualifier(s)'
p826
sg819
S'if True, subtract predicted from measured'
p827
sg439
g440
sg441
g442
ssg46
g47
sg48
S'MG_JEN_Cohset'
p828
sg50
(dp829
g819
I130
sg814
I131
sg816
I128
sg543
I129
ssg52
(dp830
g818
I01
sg441
I01
sg439
I01
sg434
I01
sg430
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p831
sg56
g270
sg58
(dp832
g441
I00
sg439
I00
sg434
I00
sg430
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p833
sg62
(dp834
g819
I00
sg434
I00
sg814
I00
sg430
I00
sg543
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p835
sg66
(dp836
g814
(lp837
I01
aI00
aS'@@correct_after'
p838
asg430
(lp839
I01
aI00
ag815
asg816
(lp840
NaS'Abs'
p841
aS'Arg'
p842
aS'@@condeq_unop'
p843
asg543
(lp844
I01
aI00
aS'@@visu'
p845
asg434
(lp846
I01
aI00
ag817
asg818
(lp847
NaS'@@solver_subtree'
p848
asg819
(lp849
I01
aI00
aS'@@subtract_after'
p850
asg439
(lp851
I01
ag820
asg441
(lp852
Na(lp853
I5
aI2
aa(lp854
I2
aI2
aa(lp855
I3
aI3
aaS'@@num_cells'
p856
assg101
Nsg102
S'2006-02-14 18:46'
p857
sg104
S'MG_JEN_Cohset::insert_solver()'
p858
sg106
S'MG_JEN_Cohsetinsert_solver'
p859
sg108
S'insert_solver'
p860
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-14 18:46'
p861
sg112
I00
sg113
g857
sg114
(dp862
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p863
ssg118
(lp864
g26
ag818
ag434
ag441
ag439
ag430
ag816
ag543
ag819
ag814
aS'./MG_JEN_Cohset.solver_subtree()'
p865
assg441
g856
sg865
(dp866
S'rmin'
p867
Nsg543
I01
sS'epsilon'
p868
F0.01
sS'rmax'
p869
NsS'usesvd'
p870
I01
sS'debug_level'
p871
I10
sS'solvegroup'
p872
(lp873
sg26
(dp874
g28
g865
sg29
(dp875
g867
S'if specified, only use baselines>=rmin'
p876
sg543
S'if True, include visualisation'
p877
sg868
S'iteration control criterion'
p878
sg869
S'if specified, only use baselines<=rmax'
p879
sg870
S'if True, use Singular Value Decomposition (SVD)'
p880
sg871
S'solver debug_level'
p881
sg872
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p882
sg441
g442
sS'history'
p883
S'if True, include history collection of metrics'
p884
sS'num_iter'
p885
S'max number of iterations'
p886
sS'condition'
p887
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p888
sS'colin_factor'
p889
S'colinearity factor'
p890
ssg46
g47
sg48
S'MG_JEN_Cohset'
p891
sg50
(dp892
g867
I134
sg543
I142
sg868
I138
sg869
I135
sg870
I140
sg872
I132
sg441
I136
sg883
I143
sg885
I137
sg887
I133
sg889
I139
ssg52
(dp893
g871
I01
sg441
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p894
sg56
S'20dec2005'
p895
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p896
sg62
(dp897
g870
I00
sg883
I00
sg543
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p898
sg66
(dp899
g867
(lp900
NaI100
aI200
aI500
aS'@@rmin'
p901
asg543
(lp902
I01
aI00
aS'@@visu'
p903
asg868
(lp904
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p905
asg869
(lp906
NaI500
aI1000
aI2000
aS'@@rmax'
p907
asg870
(lp908
I01
aI00
aS'@@usesvd'
p909
asg871
(lp910
I10
aS'@@debug_level'
p911
asg872
(lp912
g873
a(lp913
g280
aa(lp914
S'Ggain'
p915
aa(lp916
S'Gphase'
p917
aa(lp918
S'Gpol1'
p919
aa(lp920
S'Gpol2'
p921
aa(lp922
g280
aS'stokesI'
p923
aa(lp924
g923
aa(lp925
S'stokesIQU'
p926
aa(lp927
S'stokesIQUV'
p928
aa(lp929
g280
ag291
aa(lp930
g291
aa(lp931
S'dang'
p932
aa(lp933
S'dell'
p934
aa(lp935
S'Dreal'
p936
aa(lp937
S'Dimag'
p938
aa(lp939
g280
ag291
ag284
aa(lp940
g284
aa(lp941
g280
ag282
aa(lp942
g282
aa(lp943
S'Breal'
p944
aa(lp945
S'Bimag'
p946
aa(lp947
S'Bpol1'
p948
aa(lp949
S'Bpol2'
p950
aaS'@@solvegroup'
p951
asg441
(lp952
Na(lp953
I5
aI2
aa(lp954
I2
aI2
aa(lp955
I3
aI3
aaS'@@num_cells'
p956
asg883
(lp957
I01
aI00
aS'@@history'
p958
asg885
(lp959
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p960
asg887
(lp961
NaS'Gphase_X_sum=0.0'
p962
aS'Gphase_Y_sum=0.0'
p963
a(lp964
g962
ag963
aa(lp965
S'Gphase_X_first=0.0'
p966
aS'Gphase_Y_first=0.0'
p967
aa(lp968
S'Gphase_X_last=0.0'
p969
aS'Gphase_Y_last=0.0'
p970
aa(lp971
S'Dimag_X_sum=0.0'
p972
aS'Dimag_Y_sum=0.0'
p973
aa(lp974
S'Dreal_X_product=1.0'
p975
aS'Dreal_Y_product=1.0'
p976
aaS'dang_sum=0.0'
p977
a(lp978
S'Bimag_X_sum=0.0'
p979
aS'Bimag_Y_sum=0.0'
p980
aa(lp981
S'Breal_X_product=1.0'
p982
aS'Breal_Y_product=1.0'
p983
aaS'@@condition'
p984
asg889
(lp985
F1e-08
aF0.0
aS'@@colin_factor'
p986
assg101
Nsg102
S'2006-02-14 18:46'
p987
sg104
S'MG_JEN_Cohset::solver_subtree()'
p988
sg106
S'MG_JEN_Cohsetsolver_subtree'
p989
sg108
S'solver_subtree'
p990
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-14 18:46'
p991
sg112
I00
sg113
g987
sg114
(dp992
g253
S'.modify( num_iter ): 20  ->  5'
p993
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p994
ssg118
(lp995
g26
ag872
ag887
ag867
ag869
ag441
ag885
ag868
ag889
ag870
ag871
ag543
ag883
assg441
Nsg883
I01
sg885
I5
sg887
Nsg889
F1e-08
sss.