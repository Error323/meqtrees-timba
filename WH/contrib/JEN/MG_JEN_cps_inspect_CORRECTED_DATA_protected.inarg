(dp0
S'polrep'
p1
S'linear'
p2
sS'script_name'
p3
S'MG_JEN_cps'
p4
sS'ms_name'
p5
S'D1.MS'
p6
sS'parmtable'
p7
NsS'./MG_JEN_Cohset.JJones()'
p8
(dp9
S'./MG_JEN_Joneset.BJones()'
p10
(dp11
S'unsolvable'
p12
I00
sg1
S'@@polrep'
p13
sS'stations'
p14
S'@@stations'
p15
sS'c00_Bimag'
p16
F0.0
sS'subtile_size_Bimag'
p17
S'@subtile_size_Breal'
p18
sS'stddev_Breal'
p19
F0.0
sS'fdeg_Breal'
p20
I5
sS'tdeg_Breal'
p21
I3
sS'ft_coeff_scale'
p22
F0.0
sS'uvplane_effect'
p23
S'@@uvplane_effect'
p24
sS'subtile_size_Breal'
p25
NsS'_JEN_inarg_CTRL_record:'
p26
(dp27
S'localscope'
p28
g10
sS'help'
p29
(dp30
g12
S'if True, do NOT store solvegroup/parmgroup info'
p31
sg1
S'polarisation representation'
p32
sg14
S'list of station names/numbers'
p33
sg17
S'sub-tile size (None=entire tile)'
p34
sg19
S'scatter in default c00 funklet values'
p35
sg20
S'degree of freq polynomial'
p36
sg22
S'scale of polc_ft non-c00 coeff'
p37
sS'fdeg_Bimag'
p38
g36
sg23
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p39
sg25
g34
sS'c00_Breal'
p40
S'default c00 funklet value'
p41
sg21
S'degree of time polynomial'
p42
sg7
S'name of the MeqParm table'
p43
sS'tdeg_Bimag'
p44
g42
sS'stddev_Bimag'
p45
g35
sg16
g41
ssS'target_dir'
p46
S'.'
p47
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'JEN_inargGUI_ident'
p50
(dp51
g20
I87
sg17
I92
sg21
I89
sg38
I88
sg25
I91
sg44
I90
ssS'hide'
p52
(dp53
g12
I01
sg1
I01
sg14
I01
sg45
I01
sg22
I01
sg23
I01
sg7
I01
sg40
I01
sg19
I01
sg16
I01
ssS'generic'
p54
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-21 19:29'
p55
sS'version'
p56
S'16dec2005'
p57
sS'mutable'
p58
(dp59
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssS'description'
p60
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p61
sS'editable'
p62
(dp63
g12
I00
ssS'oneliner'
p64
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-21 19:29'
p65
sS'choice'
p66
(dp67
g12
(lp68
I01
aI00
aS'@@unsolvable'
p69
asg1
(lp70
g2
aS'circular'
p71
ag13
asg14
(lp72
(lp73
I0
aag15
asg17
(lp74
g18
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Bimag'
p75
asg19
(lp76
F0.0
aF0.10000000000000001
aS'@@stddev_Breal'
p77
asg20
(lp78
I3
aI4
aI5
aS'@@fdeg_Breal'
p79
asg22
(lp80
F0.0
aS'@@ft_coeff_scale'
p81
asg38
(lp82
I0
aI1
aI2
aI3
aS'@fdeg_Breal'
p83
aS'@@fdeg_Bimag'
p84
asg23
(lp85
I00
ag24
asg25
(lp86
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Breal'
p87
asg40
(lp88
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Breal'
p89
asg21
(lp90
I0
aI1
aI2
aI3
aS'@@tdeg_Breal'
p91
asg7
(lp92
NaS'@@parmtable'
p93
asg44
(lp94
I0
aI1
aI2
aI3
aS'@tdeg_Breal'
p95
aS'@@tdeg_Bimag'
p96
asg45
(lp97
F0.0
aF0.10000000000000001
aS'@@stddev_Bimag'
p98
asg16
(lp99
F0.0
aF0.10000000000000001
aS'@@c00_Bimag'
p100
assS'qual'
p101
NsS'last_edited'
p102
S'2006-02-21 19:29'
p103
sS'target_definition'
p104
S'MG_JEN_Joneset::BJones()'
p105
sS'barescope'
p106
S'MG_JEN_JonesetBJones'
p107
sS'target_function'
p108
S'BJones'
p109
sS'specific'
p110
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-21 19:29'
p111
sS'protected'
p112
I00
sS'datetime_defined'
p113
g103
sS'MESSAGE'
p114
(dp115
S'0'
p116
S'.modify( tdeg_Breal ): 0  ->  3'
p117
ssS'order'
p118
(lp119
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag20
ag38
ag21
ag44
ag25
ag17
ag40
ag16
ag19
ag45
assg38
g83
sg7
g93
sg44
g95
sg45
F0.0
sg40
F1.0
ssg1
S'@@polrep'
p120
sg14
S'@@stations'
p121
sS'./MG_JEN_Joneset.DJones_WSRT()'
p122
(dp123
S'fdeg_dang'
p124
I1
sS'c00_dang'
p125
F0.0
sg12
I00
sg1
S'@@polrep'
p126
sS'stddev_dell'
p127
F0.0
sg14
S'@@stations'
p128
sS'fdeg_dell'
p129
S'@fdeg_dang'
p130
sS'coupled_XY_dell'
p131
I01
sS'stddev_dang'
p132
F0.0
sg22
F0.0
sg23
S'@@uvplane_effect'
p133
sg7
S'@@parmtable'
p134
sS'c00_dell'
p135
F0.0
sg26
(dp136
g28
g122
sg29
(dp137
g124
S'degree of freq polynomial'
p138
sg125
S'default c00 funklet value'
p139
sg12
g31
sg1
g32
sg127
S'scatter in default c00 funklet values'
p140
sg14
g33
sg129
g138
sg131
S'if True, Xdell = -Ydell per station'
p141
sg132
g140
sg22
g37
sg23
g39
sg7
g43
sg135
g139
sS'tdeg_dell'
p142
S'degree of time polynomial'
p143
sS'coupled_XY_dang'
p144
S'if True, Xdang = Ydang per station'
p145
sS'subtile_size_dang'
p146
S'sub-tile size (None=entire tile)'
p147
sS'subtile_size_dell'
p148
g147
sS'tdeg_dang'
p149
g143
sS'c00_PZD'
p150
g139
ssg46
g47
sg48
S'MG_JEN_Joneset'
p151
sg50
(dp152
g124
I127
sg129
I128
sg131
I126
sg142
I130
sg144
I125
sg146
I131
sg148
I132
sg149
I129
ssg52
(dp153
g125
I01
sg12
I01
sg1
I01
sg127
I01
sg14
I01
sg135
I01
sg132
I01
sg22
I01
sg23
I01
sg7
I01
sg150
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-21 19:29'
p154
sg56
g57
sg58
(dp155
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p156
sg62
(dp157
g131
I00
sg144
I00
sg12
I00
ssg64
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-21 19:29'
p158
sg66
(dp159
g124
(lp160
I0
aI1
aI2
aI3
aS'@@fdeg_dang'
p161
asg125
(lp162
F0.0
aF0.10000000000000001
aS'@@c00_dang'
p163
asg12
(lp164
I01
aI00
aS'@@unsolvable'
p165
asg1
(lp166
g2
ag71
ag126
asg127
(lp167
F0.0
aF0.10000000000000001
aS'@@stddev_dell'
p168
asg14
(lp169
(lp170
I0
aag128
asg129
(lp171
I0
aI1
aI2
aI3
ag130
aS'@@fdeg_dell'
p172
asg131
(lp173
I01
aI00
aS'@@coupled_XY_dell'
p174
asg132
(lp175
F0.0
aF0.10000000000000001
aS'@@stddev_dang'
p176
asg22
(lp177
F0.0
aS'@@ft_coeff_scale'
p178
asg23
(lp179
I00
ag133
asg7
(lp180
Nag134
asg135
(lp181
F0.0
aF0.10000000000000001
aS'@@c00_dell'
p182
asg142
(lp183
I0
aI1
aI2
aI3
aS'@tdeg_dang'
p184
aS'@@tdeg_dell'
p185
asg144
(lp186
I01
aI00
aS'@@coupled_XY_dang'
p187
asg146
(lp188
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dang'
p189
asg148
(lp190
S'@subtile_size_dang'
p191
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_dell'
p192
asg149
(lp193
I0
aI1
aI2
aI3
aS'@@tdeg_dang'
p194
asg150
(lp195
F0.0
aF0.10000000000000001
aS'@@c00_PZD'
p196
assg101
Nsg102
S'2006-02-21 19:29'
p197
sg104
S'MG_JEN_Joneset::DJones_WSRT()'
p198
sg106
S'MG_JEN_JonesetDJones_WSRT'
p199
sg108
S'DJones_WSRT'
p200
sg110
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-21 19:29'
p201
sg112
I00
sg113
g197
sg114
(dp202
g116
S'.modify( tdeg_dang ): 0  ->  3'
p203
ssg118
(lp204
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag144
ag131
ag124
ag129
ag149
ag142
ag146
ag148
ag125
ag135
ag150
ag132
ag127
assg142
g184
sg144
I01
sg146
Nsg148
g191
sg149
I3
sg150
F0.0
ssS'./MG_JEN_Joneset.FJones()'
p205
(dp206
g12
I00
sg1
S'@@polrep'
p207
sS'tdeg_RM'
p208
I3
sg14
S'@@stations'
p209
sg22
F0.0
sS'fdeg_RM'
p210
I0
sS'c00_RM'
p211
F0.0
sg26
(dp212
g28
g205
sg29
(dp213
g12
g31
sg1
g32
sg208
S'degree of time polynomial'
p214
sg14
g33
sg22
g37
sg210
S'degree of freq polynomial'
p215
sg211
S'default c00 funklet value'
p216
sS'subtile_size_RM'
p217
S'sub-tile size (None=entire tile)'
p218
sg7
g43
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p219
sg50
(dp220
g210
I77
sg217
I79
sg208
I78
ssg52
(dp221
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg211
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-21 19:29'
p222
sg56
g57
sg58
(dp223
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal FJones Faraday rotation matrices'
p224
sg62
(dp225
g12
I00
ssg64
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-21 19:29'
p226
sg66
(dp227
g12
(lp228
I01
aI00
aS'@@unsolvable'
p229
asg1
(lp230
g2
ag71
ag207
asg208
(lp231
I0
aI1
aI2
aI3
aS'@@tdeg_RM'
p232
asg14
(lp233
(lp234
I0
aag209
asg22
(lp235
F0.0
aS'@@ft_coeff_scale'
p236
asg210
(lp237
I0
aI1
aI2
aI3
aS'@@fdeg_RM'
p238
asg211
(lp239
F0.0
aF0.10000000000000001
aS'@@c00_RM'
p240
asg217
(lp241
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_RM'
p242
asg7
(lp243
NaS'@@parmtable'
p244
asg23
(lp245
I00
aS'@@uvplane_effect'
p246
assg101
Nsg102
S'2006-02-21 19:29'
p247
sg104
S'MG_JEN_Joneset::FJones()'
p248
sg106
S'MG_JEN_JonesetFJones'
p249
sg108
S'FJones'
p250
sg110
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-21 19:29'
p251
sg112
I00
sg113
g247
sg114
(dp252
S'1'
p253
S'.modify( subtile_size_RM ): 1  ->  None'
p254
sg116
S'.modify( tdeg_RM ): 0  ->  3'
p255
ssg118
(lp256
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag210
ag208
ag217
ag211
assg7
g244
sg23
g246
sg217
Nssg23
S'@@uvplane_effect'
p257
sg7
S'@@parmtable'
p258
sg26
(dp259
g28
g8
sg29
(dp260
g23
g39
sg7
S'name of MeqParm table to be used'
p261
sg1
S'polarisation representation'
p262
sS'Jsequence'
p263
S'sequence of Jones matrices to be used'
p264
sg14
S'the (subset of) stations to be used'
p265
ssg46
g47
sg48
S'MG_JEN_Cohset'
p266
sg50
(dp267
g263
I53
ssg52
(dp268
g23
I01
sg7
I01
sg1
I01
sg14
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-21 19:29'
p269
sg56
S'25dec2005'
p270
sg58
(dp271
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p272
sg64
S'MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-21 19:29'
p273
sg66
(dp274
g23
(lp275
I00
ag257
asg7
(lp276
Nag258
asg1
(lp277
g2
ag71
ag120
asg263
(lp278
(lp279
S'GJones'
p280
aa(lp281
S'BJones'
p282
aa(lp283
S'FJones'
p284
aa(lp285
S'KJones'
p286
aa(lp287
S'DJones_WSRT'
p288
aa(lp289
g280
ag288
aa(lp290
S'DJones'
p291
aa(lp292
aS'@@Jsequence'
p293
asg14
(lp294
(lp295
I0
aI1
aI2
aI3
aI4
aa(lp296
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp297
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp298
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p299
ag121
assg101
Nsg102
S'2006-02-21 19:29'
p300
sg104
S'MG_JEN_Cohset::JJones()'
p301
sg106
S'MG_JEN_CohsetJJones'
p302
sg108
S'JJones'
p303
sg110
S'** Specific description of: MG_JEN_Cohset::JJones()  version=25dec2005  defined=2006-02-21 19:29'
p304
sg112
I00
sg113
g300
sg114
(dp305
g253
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p306
sg116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p307
sS'3'
p308
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p309
sS'2'
p310
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p311
sS'5'
p312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p313
sS'4'
p314
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones()'
p315
ssg118
(lp316
g26
ag14
ag7
ag1
ag23
ag263
aS'./MG_JEN_Joneset.GJones()'
p317
ag205
ag10
aS'./MG_JEN_Joneset.KJones()'
p318
aS'./MG_JEN_Joneset.DJones()'
p319
ag122
assg318
(dp320
g12
I00
sg1
S'@@polrep'
p321
sg14
S'@@stations'
p322
sg22
F0.0
sg23
S'@@uvplane_effect'
p323
sg7
S'@@parmtable'
p324
sg26
(dp325
g28
g318
sg29
(dp326
g12
g31
sg1
g32
sg14
g33
sg22
g37
sg23
g39
sg7
g43
ssg46
g47
sg48
S'MG_JEN_Joneset'
p327
sg50
(dp328
sg52
(dp329
g12
I01
sg1
I01
sg14
I01
sg22
I01
sg23
I01
sg7
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-21 19:29'
p330
sg56
S'12dec2005'
p331
sg58
(dp332
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'defines diagonal KJones matrices for DFT Fourier kernel'
p333
sg62
(dp334
g12
I00
ssg64
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-21 19:29'
p335
sg66
(dp336
g12
(lp337
I01
aI00
aS'@@unsolvable'
p338
asg1
(lp339
g2
ag71
ag321
asg14
(lp340
(lp341
I0
aag322
asg22
(lp342
F0.0
aS'@@ft_coeff_scale'
p343
asg23
(lp344
I00
ag323
asg7
(lp345
Nag324
assg101
Nsg102
S'2006-02-21 19:29'
p346
sg104
S'MG_JEN_Joneset::KJones()'
p347
sg106
S'MG_JEN_JonesetKJones'
p348
sg108
S'KJones'
p349
sg110
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-21 19:29'
p350
sg112
I00
sg113
g346
sg118
(lp351
g26
ag14
ag7
ag23
ag1
ag12
ag22
asssg317
(dp352
g12
I00
sg1
S'@@polrep'
p353
sS'fdeg_Ggain'
p354
I0
sS'tdeg_Gphase'
p355
S'@tdeg_Ggain'
p356
sS'stddev_Ggain'
p357
F0.0
sS'c00_Gphase'
p358
F0.0
sg22
F0.0
sg14
S'@@stations'
p359
sS'tdeg_Ggain'
p360
I3
sS'fdeg_Gphase'
p361
S'@fdeg_Ggain'
p362
sg7
S'@@parmtable'
p363
sg26
(dp364
g28
g317
sg29
(dp365
g12
g31
sg1
g32
sg14
g33
sg358
S'default c00 funklet value'
p366
sg354
S'degree of freq polynomial'
p367
sg355
S'degree of time polynomial'
p368
sg22
g37
sg360
g368
sg361
g367
sg7
g43
sg357
S'scatter in default c00 funklet values'
p369
sS'subtile_size_Gphase'
p370
S'sub-tile size (None=entire tile)'
p371
sS'c00_Ggain'
p372
g366
sS'stddev_Gphase'
p373
g369
sS'Gpolar'
p374
S'if True, use MeqPolar, otherwise MeqToComplex'
p375
sS'subtile_size_Ggain'
p376
g371
sg23
g39
ssg46
g47
sg48
S'MG_JEN_Joneset'
p377
sg50
(dp378
g354
I61
sg376
I65
sg355
I64
sg360
I63
sg361
I62
sg370
I66
sg374
I60
ssg52
(dp379
g12
I01
sg1
I01
sg14
I01
sg357
I01
sg358
I01
sg22
I01
sg23
I01
sg7
I01
sg372
I01
sg373
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-21 19:29'
p380
sg56
S'15dec2005'
p381
sg58
(dp382
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p383
sg62
(dp384
g12
I00
sg374
I00
ssg64
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-21 19:29'
p385
sg66
(dp386
g12
(lp387
I01
aI00
aS'@@unsolvable'
p388
asg1
(lp389
g2
ag71
ag353
asg14
(lp390
(lp391
I0
aag359
asg358
(lp392
F0.0
aF0.10000000000000001
aS'@@c00_Gphase'
p393
asg354
(lp394
I0
aI1
aI2
aI3
aS'@@fdeg_Ggain'
p395
asg355
(lp396
I0
aI1
aI2
aI3
ag356
aS'@@tdeg_Gphase'
p397
asg22
(lp398
F0.0
aS'@@ft_coeff_scale'
p399
asg360
(lp400
I0
aI1
aI2
aI3
aS'@@tdeg_Ggain'
p401
asg361
(lp402
I0
aI1
aI2
aI3
ag362
aS'@@fdeg_Gphase'
p403
asg7
(lp404
Nag363
asg357
(lp405
F0.0
aF0.10000000000000001
aS'@@stddev_Ggain'
p406
asg370
(lp407
S'@subtile_size_Ggain'
p408
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Gphase'
p409
asg372
(lp410
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Ggain'
p411
asg373
(lp412
F0.0
aF0.10000000000000001
aS'@@stddev_Gphase'
p413
asg374
(lp414
I01
aI00
aS'@@Gpolar'
p415
asg376
(lp416
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Ggain'
p417
asg23
(lp418
I00
aS'@@uvplane_effect'
p419
assg101
Nsg102
S'2006-02-21 19:29'
p420
sg104
S'MG_JEN_Joneset::GJones()'
p421
sg106
S'MG_JEN_JonesetGJones'
p422
sg108
S'GJones'
p423
sg110
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-21 19:29'
p424
sg112
I00
sg113
g420
sg114
(dp425
g253
S'.modify( tdeg_Ggain ): 0  ->  3'
p426
sg116
S'.modify( subtile_size_Ggain ): 1  ->  None'
p427
ssg118
(lp428
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag374
ag354
ag361
ag360
ag355
ag376
ag370
ag372
ag358
ag357
ag373
assg370
g408
sg372
F1.0
sg373
F0.0
sg374
I00
sg376
Nsg23
g419
ssg319
(dp429
S'subtile_size_Dreal'
p430
Nsg12
I00
sg1
S'@@polrep'
p431
sg14
S'@@stations'
p432
sS'c00_Dimag'
p433
F0.0
sS'stddev_Dimag'
p434
F0.0
sS'tdeg_Dreal'
p435
I0
sS'fdeg_Dreal'
p436
I5
sS'stddev_Dreal'
p437
F0.0
sS'subtile_size_Dimag'
p438
S'@subtile_size_Dreal'
p439
sg23
S'@@uvplane_effect'
p440
sg7
S'@@parmtable'
p441
sg26
(dp442
g28
g319
sg29
(dp443
g430
S'sub-tile size (None=entire tile)'
p444
sg12
g31
sg1
g32
sg14
g33
sg433
S'default c00 funklet value'
p445
sg434
S'scatter in default c00 funklet values'
p446
sg435
S'degree of time polynomial'
p447
sg436
S'degree of freq polynomial'
p448
sg437
g446
sg438
g444
sg23
g39
sg7
g43
sS'c00_Dreal'
p449
g445
sS'fdeg_Dimag'
p450
g448
sg22
g37
sS'tdeg_Dimag'
p451
g447
ssg46
g47
sg48
S'MG_JEN_Joneset'
p452
sg50
(dp453
g430
I113
sg438
I114
sg435
I111
sg451
I112
sg436
I109
sg450
I110
ssg52
(dp454
g12
I01
sg1
I01
sg14
I01
sg433
I01
sg22
I01
sg437
I01
sg7
I01
sg449
I01
sg434
I01
sg23
I01
ssg54
S'** Generic description of: MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-21 19:29'
p455
sg56
S'14feb2006'
p456
sg58
(dp457
g23
I00
sg7
I00
sg1
I00
sg14
I00
ssg60
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Djones(station,source) matrix elements:\n    - D_11 = (Dreal_11,Dimag_11)\n    - D_12 = (Dreal_12,Dimag_12)\n    - D_21 = (Dreal_21,Dimag_21)\n    - D_22 = (Dreal_22,Dimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p458
sg62
(dp459
g12
I00
ssg64
S'MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-21 19:29'
p460
sg66
(dp461
g430
(lp462
NaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dreal'
p463
asg12
(lp464
I01
aI00
aS'@@unsolvable'
p465
asg1
(lp466
g2
ag71
ag431
asg14
(lp467
(lp468
I0
aag432
asg433
(lp469
F0.0
aF0.10000000000000001
aS'@@c00_Dimag'
p470
asg434
(lp471
F0.0
aF0.10000000000000001
aS'@@stddev_Dimag'
p472
asg435
(lp473
I0
aI1
aI2
aI3
aS'@@tdeg_Dreal'
p474
asg436
(lp475
I3
aI4
aI5
aS'@@fdeg_Dreal'
p476
asg437
(lp477
F0.0
aF0.10000000000000001
aS'@@stddev_Dreal'
p478
asg438
(lp479
g439
aNaI1
aI2
aI5
aI10
aI20
aI50
aI100
aI200
aI500
aS'@@subtile_size_Dimag'
p480
asg23
(lp481
I00
ag440
asg7
(lp482
Nag441
asg449
(lp483
F1.0
aF0.90000000000000002
aF0.10000000000000001
aS'@@c00_Dreal'
p484
asg450
(lp485
I0
aI1
aI2
aI3
aS'@fdeg_Dreal'
p486
aS'@@fdeg_Dimag'
p487
asg22
(lp488
F0.0
aS'@@ft_coeff_scale'
p489
asg451
(lp490
I0
aI1
aI2
aI3
aS'@tdeg_Dreal'
p491
aS'@@tdeg_Dimag'
p492
assg101
Nsg102
S'2006-02-21 19:29'
p493
sg104
S'MG_JEN_Joneset::DJones()'
p494
sg106
S'MG_JEN_JonesetDJones'
p495
sg108
S'DJones'
p496
sg110
S'** Specific description of: MG_JEN_Joneset::DJones()  version=14feb2006  defined=2006-02-21 19:29'
p497
sg112
I00
sg113
g493
sg118
(lp498
g26
ag14
ag7
ag23
ag1
ag12
ag22
ag436
ag450
ag435
ag451
ag430
ag438
ag449
ag433
ag437
ag434
assg449
F1.0
sg450
g486
sg22
F0.0
sg451
g491
ssg263
(lp499
ssg26
(dp500
g28
S'./MG_JEN_cps.'
p501
sg29
(dp502
g1
g262
sS'master_reqseq'
p503
S'if True, use a master reqseq for solver(s)'
p504
sg14
g265
sS'insert_flagger'
p505
S'if True, insert a flagger'
p506
sS'redun'
p507
S'if True, redundant spacing calibration'
p508
sS'insert_solver'
p509
S'if True, insert a solver'
p510
sg5
S'name of the (AIPS++) Measurement Set'
p511
sS'chain_solvers'
p512
S'if True, chain the solvers (recommended)'
p513
sS'num_cells'
p514
S'if defined, ModRes argument [ntime,nfreq]'
p515
sg7
g261
sS'tile_size'
p516
S'(inputrec) size (in time-slots) of the input data-tile'
p517
sg23
g39
ssS'reference'
p518
I00
sg46
g47
sg48
S'MG_JEN_cps'
p519
sg50
(dp520
g1
I8
sg14
I6
sg505
I2
sg507
I12
sg509
I1
sg5
I4
sg7
I7
sg3
I0
sg514
I13
sg516
I5
sg23
I9
ssg52
(dp521
g1
I00
sg503
I01
sg14
I00
sS'last_changed'
p522
I01
sg507
I00
sg23
I00
sg512
I01
sg514
I00
sg7
I00
ssg54
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p523
sg56
g381
sg60
g523
sg62
(dp524
g522
I00
sg505
I00
sg503
I00
sg509
I00
sg507
I00
ssg64
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p525
sg66
(dp526
g1
(lp527
g2
ag71
aS'@@polrep'
p528
asg503
(lp529
I01
aI00
aS'@@master_reqseq'
p530
asg14
(lp531
(lp532
I0
aI1
aI2
aI3
aI4
aa(lp533
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp534
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp535
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p536
asg505
(lp537
I01
aI00
aS'@@insert_flagger'
p538
asg522
(lp539
S'd30jan2006'
p540
aS'@@last_changed'
p541
asg509
(lp542
I01
aI00
aS'@@insert_solver'
p543
asg507
(lp544
I01
aI00
aS'@@redun'
p545
asg5
(lp546
g6
aS'@@ms_name'
p547
asg512
(lp548
I01
aS'@@chain_solvers'
p549
asg514
(lp550
Na(lp551
I5
aI2
aa(lp552
I2
aI2
aa(lp553
I3
aI3
aaS'@@num_cells'
p554
asg7
(lp555
NaS'@@parmtable'
p556
asg516
(lp557
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p558
asg23
(lp559
I00
aS'@@uvplane_effect'
p560
assg102
S'2006-02-21 19:29'
p561
sS'HISTORY'
p562
(dp563
g253
S'2006-02-21 19:29: Derived from: MG_JEN_cps_inspect.inarg'
p564
sg116
S'2006-02-21 19:29: Derived from: MG_JEN_cps.inarg'
p565
sg308
S'2006-02-21 19:29: Derived from: MG_JEN_cps_inspect_CORRECTED_DATA.inarg'
p566
sg310
S'2006-02-21 19:29: Derived from: MG_JEN_cps_inspect.inarg'
p567
ssg104
g4
sS'save_file'
p568
S'MG_JEN_cps_inspect_CORRECTED_DATA_protected.inarg'
p569
sS'file_filter'
p570
S'MG_JEN_cps*.inarg'
p571
sg108
S''
p572
sg110
S'<specific>'
p573
sS'browse'
p574
(dp575
g5
S'*.MS'
p576
ssg112
I01
sg113
g561
sg114
(dp577
S'11'
p578
S'.modify( tile_size ): 10  ->  1'
p579
sS'10'
p580
S'.modify(): stripped off: _JEN_inarg_option'
p581
sS'13'
p582
S".modify(): found ={'tile_size': 2, 'insert_solver': 1}"
p583
sS'12'
p584
S'.modify( insert_solver ): True  ->  False'
p585
sS'15'
p586
S".modify(): found ={'data_column_name': 1}"
p587
sS'14'
p588
S'.modify(): stripped off: _JEN_inarg_option'
p589
sg253
S'.modify( uvplane_effect ): False  ->  True'
p590
sg116
S'.modify(): stripped off: _JEN_inarg_option'
p591
sg308
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p592
sg310
S".modify(): found ={'uvplane_effect': 1}"
p593
sg312
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p594
sg314
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p595
sS'7'
p596
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p597
sS'6'
p598
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.JJones()'
p599
sS'9'
p600
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p601
sS'8'
p602
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p603
ssg118
(lp604
g26
ag3
ag509
ag505
ag522
ag5
ag516
ag14
ag7
ag1
ag23
ag512
ag503
ag507
ag514
aS'./MG_JEN_exec.stream_control()'
p605
aS'./MG_JEN_Cohset.make_spigots()'
p606
aS'./MG_JEN_Sixpack.newstar_source()'
p607
ag8
aS'./MG_JEN_Cohset.predict()'
p608
aS'./MG_JEN_Cohset.insert_solver()'
p609
aS'./MG_JEN_Cohset.make_sinks()'
p610
assg610
(dp611
S'fullDomainMux'
p612
I01
sS'output_col'
p613
S'PREDICT'
p614
sS'visu'
p615
I01
sS'flag'
p616
I00
sg26
(dp617
g104
S'MG_JEN_Cohset::make_sinks()'
p618
sg28
g610
sg50
(dp619
g616
I165
sg615
I164
sg612
I166
sg613
I162
sS'visu_array_config'
p620
I163
ssg106
S'MG_JEN_Cohsetmake_sinks'
p621
sg54
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-21 19:29'
p622
sg46
g47
sg60
S'Make sink nodes in the given Cohset object'
p623
sg64
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-21 19:29'
p624
sg108
S'make_sinks'
p625
sg66
(dp626
g616
(lp627
I01
aI00
aS'@@flag'
p628
asg620
(lp629
I01
aI00
aS'@@visu_array_config'
p630
asg613
(lp631
g614
aS'RESIDUALS'
p632
aS'DATA'
p633
aS'@@output_col'
p634
asg612
(lp635
I01
aI00
aS'@@fullDomainMux'
p636
asg615
(lp637
I01
aI00
aS'@@visu'
p638
assg110
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-21 19:29'
p639
sg101
Nsg56
g270
sg113
S'2006-02-21 19:29'
p640
sg48
S'MG_JEN_Cohset'
p641
sg62
(dp642
g616
I00
sg620
I00
sg612
I00
sg615
I00
ssg112
I00
sg102
g640
sg118
(lp643
g26
ag613
ag620
ag615
ag616
ag612
asg29
(dp644
g616
S'if True, insert a flagger for the output uv-data'
p645
sg620
S'if True, visualise the array config (from MS)'
p646
sg613
S'name of the logical (VisTile) output column'
p647
sg612
S'if True, attach an extra VisDataMux'
p648
sg615
S'if True, visualise the output uv-data'
p649
sssg620
I01
ssg516
I1
sg606
(dp650
S'MS_corr_index'
p651
(lp652
I0
aI1
aI2
aI3
asg616
I00
sg26
(dp653
g104
S'MG_JEN_Cohset::make_spigots()'
p654
sg28
g606
sg50
(dp655
g616
I25
sg651
I23
sg615
I24
ssg52
(dp656
S'input_col'
p657
I01
ssg106
S'MG_JEN_Cohsetmake_spigots'
p658
sg54
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-21 19:29'
p659
sg46
g47
sg60
S'Make spigot nodes in the given Cohset object'
p660
sg64
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-21 19:29'
p661
sg108
S'make_spigots'
p662
sg66
(dp663
g616
(lp664
I01
aI00
aS'@@flag'
p665
asg651
(lp666
g652
a(lp667
I0
aI-1
aI-1
aI1
aa(lp668
I0
aI-1
aI-1
aI3
aaS'@@'
p669
aS'@@MS_corr_index'
p670
asg657
(lp671
g633
ag614
ag632
aS'@@input_col'
p672
asg615
(lp673
I01
aI00
aS'@@visu'
p674
assg110
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-21 19:29'
p675
sg101
Nsg56
g270
sg113
S'2006-02-21 19:29'
p676
sg48
S'MG_JEN_Cohset'
p677
sg62
(dp678
g616
I00
sg615
I00
ssg112
I00
sg102
g676
sg118
(lp679
g26
ag657
ag651
ag615
ag616
asg29
(dp680
g616
S'if True, insert a flagger for the input uv-data'
p681
sg651
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p682
sg657
S'name of the logical (VisTile) input column'
p683
sg615
S'if True, visualise the input uv-data'
p684
sssg657
g633
sg615
I01
ssg608
(dp685
g1
S'@@polrep'
p686
sg26
(dp687
g104
S'MG_JEN_Cohset::predict()'
p688
sg28
g608
sg50
(dp689
sg52
(dp690
g1
I01
sg14
I01
ssg106
S'MG_JEN_Cohsetpredict'
p691
sg54
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-21 19:29'
p692
sg46
g47
sg60
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p693
sg64
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-21 19:29'
p694
sg108
S'predict'
p695
sg66
(dp696
g1
(lp697
g2
ag71
ag686
asg14
(lp698
(lp699
I0
aI1
aI2
aI3
aI4
aa(lp700
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp701
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp702
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aag299
aS'@@stations'
p703
assg110
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-21 19:29'
p704
sg101
Nsg56
g270
sg113
S'2006-02-21 19:29'
p705
sg48
S'MG_JEN_Cohset'
p706
sg58
(dp707
g1
I00
sg14
I00
ssg112
I00
sg102
g705
sg118
(lp708
g26
ag14
ag1
asg29
(dp709
g1
g262
sg14
g265
sssg14
g703
ssg505
I00
sg522
g540
sg23
I01
sg514
Nsg607
(dp710
S'f0'
p711
F1000000.0
sS'major'
p712
F0.0
sg12
I00
sS'shape'
p713
S'point'
p714
sg7
NsS'Upct'
p715
NsS'I0'
p716
F1.0
sS'LSM'
p717
NsS'Vpct'
p718
NsS'dDec'
p719
F0.0
sS'pa'
p720
F0.0
sg26
(dp721
g28
g607
sg29
(dp722
g711
S'reference freq (Hz): I=I0 @ f=f0'
p723
sg712
S'major axis (arcsec)'
p724
sg12
S'if True, do NOT store solvegroup/parmgroup info'
p725
sg713
S'source shape'
p726
sg7
S'name of the MeqParm table (AIPS++)'
p727
sg715
S'Stokes U (percentage of I)'
p728
sg716
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p729
sg717
S'(file)name of a Local Sky Model'
p730
sg718
S'Stokes V (percentage of I)'
p731
sg719
S'Dec offset (arcsec): Dec = Dec0 + dDec'
p732
sg720
S'position angle (rad)'
p733
sS'RA'
p734
S'Right Ascension (rad, J2000)'
p735
sS'dRA'
p736
S'RA offset (arcsec): RA = RA0 + dRA'
p737
sS'RM'
p738
S'Intrinsic Rotation Measure (rad/m2)'
p739
sS'Dec0'
p740
S'If Dec0 is a node, Dec0+dDec overrides Dec'
p741
sS'minor'
p742
S'minor axis (arcsec)'
p743
sS'Qpct'
p744
S'Stokes Q (percentage of I)'
p745
sS'punit'
p746
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p747
sS'RA0'
p748
S'If RA0 is a node, RA0+dRA overrides RA'
p749
sS'Dec'
p750
S'Declination (rad, J2000)'
p751
sS'fsr_trace'
p752
S'If True, attach to forest state record'
p753
sS'SI'
p754
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p755
ssg46
g47
sg48
S'MG_JEN_Sixpack'
p756
sg50
(dp757
g750
I39
sg716
I31
sg717
I27
sg744
I32
sg746
I26
sg754
I36
sg7
I29
sg734
I38
sg738
I35
sg715
I33
sg718
I34
ssg52
(dp758
g711
I01
sg712
I01
sg12
I01
sS'name'
p759
I01
sg717
I00
sg752
I01
sg746
I00
sg719
I01
sg713
I01
sg720
I01
sg748
I01
sg736
I01
sg740
I01
sg742
I01
ssg54
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-21 19:29'
p760
sg56
S'10feb2006'
p761
sg574
(dp762
g717
S'*.lsm'
p763
ssg60
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p764
sg62
(dp765
g12
I00
sg752
I00
ssg64
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-21 19:29'
p766
sg66
(dp767
g711
(lp768
F1000000.0
aS'@@f0'
p769
asg712
(lp770
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p771
asg12
(lp772
I01
aI00
aS'@@unsolvable'
p773
asg713
(lp774
g714
aS'ell.gauss'
p775
aS'@@shape'
p776
asg7
(lp777
NaS'@@parmtable'
p778
asg715
(lp779
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p780
asg716
(lp781
F1.0
aF10.0
aS'@@I0'
p782
asg717
(lp783
NaS'@@LSM'
p784
asg718
(lp785
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p786
asg719
(lp787
F0.0
aS'@@dDec'
p788
asg720
(lp789
F0.0
aF1.0
aF-0.5
aS'@@pa'
p790
asg734
(lp791
F0.0
aF0.5
aF1.0
aS'@@RA'
p792
asg736
(lp793
F0.0
aS'@@dRA'
p794
asg738
(lp795
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p796
asg740
(lp797
NaS'@@Dec0'
p798
asg742
(lp799
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p800
asg744
(lp801
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p802
asg746
(lp803
S'unpol'
p804
aS'unpol2'
p805
aS'unpol10'
p806
aS'QUV'
p807
aS'QU'
p808
aS'Qonly'
p809
aS'Uonly'
p810
aS'Vonly'
p811
aS'3c147'
p812
aS'3c286'
p813
aS'3c48'
p814
aS'3c295'
p815
aS'RMtest'
p816
aS'SItest'
p817
aS'@@punit'
p818
asg748
(lp819
NaS'@@RA0'
p820
asg750
(lp821
F0.5
aF1.0
aS'@@Dec'
p822
asg759
(lp823
NaS'@@name'
p824
asg752
(lp825
I01
aI00
aS'@@fsr_trace'
p826
asg754
(lp827
NaF-0.69999999999999996
a(lp828
F0.44700000000000001
aF-0.184
aaS'@@SI'
p829
assg101
Nsg102
S'2006-02-21 19:29'
p830
sg104
S'MG_JEN_Sixpack::newstar_source()'
p831
sg106
S'MG_JEN_Sixpacknewstar_source'
p832
sg108
S'newstar_source'
p833
sg110
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-21 19:29'
p834
sS'callback'
p835
(dp836
g746
I01
ssg112
I00
sg113
g830
sg118
(lp837
g26
ag746
ag717
ag759
ag7
ag12
ag716
ag744
ag715
ag718
ag738
ag754
ag711
ag734
ag750
ag752
ag713
ag712
ag742
ag720
ag748
ag740
ag736
ag719
assg736
F0.0
sg738
Nsg740
Nsg742
F0.0
sg734
F0.0
sg744
Nsg746
g804
sg748
Nsg750
F1.0
sg759
Nsg752
I01
sg754
Nssg503
I00
sg14
g532
sg605
(dp838
S'channel_start_index'
p839
I10
sS'data_column_name'
p840
S'CORRECTED_DATA'
p841
sS'predict_column'
p842
g841
sg5
S'@@ms_name'
p843
sg26
(dp844
g28
g605
sg29
(dp845
g839
S'(inputrec.sel) index of first selected freq channel'
p846
sg840
S'(inputrec) MS input column'
p847
sg842
S'MS output column to be associated with the VisTile predict-column'
p848
sg5
g511
sg516
g517
sS'channel_increment'
p849
S'(inputrec.sel) take every nth channel (1=all)'
p850
sS'channel_end_index'
p851
S'(inputrec.sel) index of last selected freq channel'
p852
sS'write_flags'
p853
S'(outputrec) if True, write flags to MS'
p854
ssg46
g47
sg48
S'MG_JEN_exec'
p855
sg50
(dp856
g839
I17
sg840
I16
sg842
I21
sg853
I20
sg851
I18
sg849
I19
ssg52
(dp857
g5
I01
sg516
I01
ssg54
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-21 19:29'
p858
sg56
S'20jan2006'
p859
sg58
(dp860
g5
I00
sg516
I00
ssg60
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-21 19:29'
p861
sg62
(dp862
g853
I00
ssg64
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-21 19:29'
p863
sg66
(dp864
g839
(lp865
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p866
asg840
(lp867
g633
ag841
aS'@@data_column_name'
p868
asg842
(lp869
g633
ag841
aS'MODEL_DATA'
p870
aS'@@predict_column'
p871
asg5
(lp872
g6
ag843
asg516
(lp873
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p874
asg849
(lp875
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p876
asg851
(lp877
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p878
asg853
(lp879
I01
aI00
aS'@@write_flags'
p880
assg101
Nsg102
S'2006-02-21 19:29'
p881
sg104
S'MG_JEN_exec::stream_control()'
p882
sg106
S'MG_JEN_execstream_control'
p883
sg108
S'stream_control'
p884
sg110
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-21 19:29'
p885
sg574
(dp886
g5
g576
ssg112
I00
sg113
g881
sg114
(dp887
g253
S'.modify( data_column_name ): DATA  ->  CORRECTED_DATA'
p888
sg116
S'.modify( tile_size ): @@tile_size  ->  1'
p889
ssg118
(lp890
g26
ag5
ag516
ag840
ag839
ag851
ag849
ag853
ag842
assg516
I1
sg849
I1
sg851
I50
sg853
I00
ssg507
I00
sg509
I00
sg512
I01
sg609
(dp891
S'correct_after'
p892
I01
sg503
S'@@master_reqseq'
p893
sS'condeq_unop'
p894
Nsg615
I01
sg507
S'@@redun'
p895
sS'solver_subtree'
p896
NsS'subtract_after'
p897
I00
sg512
S'@@chain_solvers'
p898
sg26
(dp899
g28
g609
sg29
(dp900
g892
S'if True, correct measured with predicted.Joneset'
p901
sg503
g504
sg894
S'Optional unary operation on Condeq inputs'
p902
sg615
S'if True, include full visualisation'
p903
sg507
g508
sg896
S'solver subtree qualifier(s)'
p904
sg897
S'if True, subtract predicted from measured'
p905
sg512
g513
sS'flag_residuals'
p906
S'if True, flag the residuals'
p907
sg514
g515
ssg46
g47
sg48
S'MG_JEN_Cohset'
p908
sg50
(dp909
g897
I147
sg892
I148
sg894
I145
sg615
I146
ssg52
(dp910
g503
I01
sg507
I01
sg896
I01
sg512
I01
sg906
I01
sg514
I01
ssg54
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-21 19:29'
p911
sg56
g270
sg58
(dp912
g514
I00
sg512
I00
sg507
I00
sg503
I00
ssg60
S'insert one or more solver subtrees in the data stream'
p913
sg62
(dp914
g892
I00
sg503
I00
sg615
I00
sg507
I00
sg897
I00
sg906
I00
ssg64
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-21 19:29'
p915
sg66
(dp916
g892
(lp917
I01
aI00
aS'@@correct_after'
p918
asg503
(lp919
I01
aI00
ag893
asg894
(lp920
NaS'Abs'
p921
aS'Arg'
p922
aS'@@condeq_unop'
p923
asg615
(lp924
I01
aI00
aS'@@visu'
p925
asg507
(lp926
I01
aI00
ag895
asg896
(lp927
NaS'@@solver_subtree'
p928
asg897
(lp929
I01
aI00
aS'@@subtract_after'
p930
asg512
(lp931
I01
ag898
asg906
(lp932
I01
aI00
aS'@@flag_residuals'
p933
asg514
(lp934
Na(lp935
I5
aI2
aa(lp936
I2
aI2
aa(lp937
I3
aI3
aaS'@@num_cells'
p938
assg101
Nsg102
S'2006-02-21 19:29'
p939
sg104
S'MG_JEN_Cohset::insert_solver()'
p940
sg106
S'MG_JEN_Cohsetinsert_solver'
p941
sg108
S'insert_solver'
p942
sg110
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-21 19:29'
p943
sg112
I00
sg113
g939
sg114
(dp944
g116
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p945
ssg118
(lp946
g26
ag896
ag507
ag514
ag512
ag503
ag894
ag615
ag897
ag892
ag906
aS'./MG_JEN_Cohset.solver_subtree()'
p947
assg514
g938
sg947
(dp948
S'rmin'
p949
Nsg615
I01
sS'epsilon'
p950
F0.01
sS'rmax'
p951
NsS'usesvd'
p952
I01
sS'debug_level'
p953
I10
sS'solvegroup'
p954
(lp955
sg26
(dp956
g28
g947
sg29
(dp957
g949
S'if specified, only use baselines>=rmin'
p958
sg615
S'if True, include visualisation'
p959
sg950
S'iteration control criterion'
p960
sg951
S'if specified, only use baselines<=rmax'
p961
sg952
S'if True, use Singular Value Decomposition (SVD)'
p962
sg953
S'solver debug_level'
p963
sg954
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p964
sg514
g515
sS'history'
p965
S'if True, include history collection of metrics'
p966
sS'num_iter'
p967
S'max number of iterations'
p968
sS'condition'
p969
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p970
sS'colin_factor'
p971
S'colinearity factor'
p972
ssg46
g47
sg48
S'MG_JEN_Cohset'
p973
sg50
(dp974
g949
I152
sg615
I160
sg950
I156
sg951
I153
sg952
I158
sg954
I150
sg514
I154
sg965
I161
sg967
I155
sg969
I151
sg971
I157
ssg52
(dp975
g953
I01
sg514
I00
ssg54
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-21 19:29'
p976
sg56
S'20dec2005'
p977
sg60
S'Make a solver-subtree for the given Condeq Cohset'
p978
sg62
(dp979
g952
I00
sg965
I00
sg615
I00
ssg64
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-21 19:29'
p980
sg66
(dp981
g949
(lp982
NaI100
aI200
aI500
aS'@@rmin'
p983
asg615
(lp984
I01
aI00
aS'@@visu'
p985
asg950
(lp986
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p987
asg951
(lp988
NaI500
aI1000
aI2000
aS'@@rmax'
p989
asg952
(lp990
I01
aI00
aS'@@usesvd'
p991
asg953
(lp992
I10
aS'@@debug_level'
p993
asg954
(lp994
g955
a(lp995
g280
aa(lp996
S'Ggain'
p997
aa(lp998
S'Gphase'
p999
aa(lp1000
S'Gpol1'
p1001
aa(lp1002
S'Gpol2'
p1003
aa(lp1004
g280
aS'stokesI'
p1005
aa(lp1006
g1005
aa(lp1007
S'stokesIQU'
p1008
aa(lp1009
S'stokesIQUV'
p1010
aa(lp1011
g280
ag291
aa(lp1012
g291
aa(lp1013
S'dang'
p1014
aa(lp1015
S'dell'
p1016
aa(lp1017
S'Dreal'
p1018
aa(lp1019
S'Dimag'
p1020
aa(lp1021
g280
ag291
ag284
aa(lp1022
g284
aa(lp1023
g280
ag282
aa(lp1024
g282
aa(lp1025
S'Breal'
p1026
aa(lp1027
S'Bimag'
p1028
aa(lp1029
S'Bpol1'
p1030
aa(lp1031
S'Bpol2'
p1032
aaS'@@solvegroup'
p1033
asg514
(lp1034
Na(lp1035
I5
aI2
aa(lp1036
I2
aI2
aa(lp1037
I3
aI3
aaS'@@num_cells'
p1038
asg965
(lp1039
I01
aI00
aS'@@history'
p1040
asg967
(lp1041
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p1042
asg969
(lp1043
NaS'Gphase_X_sum=0.0'
p1044
aS'Gphase_Y_sum=0.0'
p1045
a(lp1046
g1044
ag1045
aa(lp1047
S'Gphase_X_first=0.0'
p1048
aS'Gphase_Y_first=0.0'
p1049
aa(lp1050
S'Gphase_X_last=0.0'
p1051
aS'Gphase_Y_last=0.0'
p1052
aaS'dang_sum=0.0'
p1053
a(lp1054
S'Bimag_X_sum=0.0'
p1055
aS'Bimag_Y_sum=0.0'
p1056
aa(lp1057
S'Breal_X_product=1.0'
p1058
aS'Breal_Y_product=1.0'
p1059
aaS'@@condition'
p1060
asg971
(lp1061
F1e-08
aF0.0
aS'@@colin_factor'
p1062
assg101
Nsg102
S'2006-02-21 19:29'
p1063
sg104
S'MG_JEN_Cohset::solver_subtree()'
p1064
sg106
S'MG_JEN_Cohsetsolver_subtree'
p1065
sg108
S'solver_subtree'
p1066
sg110
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-21 19:29'
p1067
sg112
I00
sg113
g1063
sg114
(dp1068
g253
S'.modify( num_iter ): 20  ->  5'
p1069
sg116
S'.modify( epsilon ): 0.0001  ->  0.01'
p1070
ssg118
(lp1071
g26
ag954
ag969
ag949
ag951
ag514
ag967
ag950
ag971
ag952
ag953
ag615
ag965
assg514
Nsg965
I01
sg967
I5
sg969
Nsg971
F1e-08
ssg906
I00
ss.