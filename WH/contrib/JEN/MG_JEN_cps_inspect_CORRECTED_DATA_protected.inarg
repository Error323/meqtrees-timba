(dp0
S'polrep'
p1
S'linear'
p2
sS'./MG_JEN_Cohset.Jones()'
p3
(dp4
S'./MG_JEN_Joneset.BJones()'
p5
(dp6
S'stations'
p7
S'@@stations'
p8
sg1
S'@@polrep'
p9
sS'_JEN_inarg_CTRL_record:'
p10
(dp11
S'target_definition'
p12
S'MG_JEN_Joneset::BJones()'
p13
sS'localscope'
p14
g5
sS'last_edited'
p15
S'2006-02-26 14:20'
p16
sS'hide'
p17
(dp18
S'@Jsequence'
p19
I01
sg1
I01
sS'stddev'
p20
I00
sg7
I01
ssS'barescope'
p21
S'MG_JEN_JonesetBJones'
p22
sS'generic'
p23
S'** Generic description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p24
sS'target_dir'
p25
S'.'
p26
sS'oneliner'
p27
S'MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p28
sS'target_function'
p29
S'BJones'
p30
sS'choice'
p31
(dp32
g19
(lp33
S'BJones'
p34
aS'@@@Jsequence'
p35
asg1
(lp36
g2
aS'circular'
p37
ag9
asg20
(lp38
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p39
asg7
(lp40
(lp41
I0
aag8
assS'specific'
p42
S'** Specific description of: MG_JEN_Joneset::BJones()  version=16dec2005  defined=2006-02-26 14:20'
p43
sS'qual'
p44
NsS'version'
p45
S'16dec2005'
p46
sS'datetime_defined'
p47
g16
sS'target_module'
p48
S'MG_JEN_Joneset'
p49
sS'mutable'
p50
(dp51
g1
I00
sg7
I00
ssS'protected'
p52
I00
sS'order'
p53
(lp54
g10
ag7
ag1
ag19
ag20
asS'help'
p55
(dp56
g19
S'list membership indication (used in JEN_inargGui)'
p57
sg1
S'polarisation representation'
p58
sg20
S'scatter in default c00 funklet values'
p59
sg7
S'list of station names/numbers'
p60
ssS'description'
p61
S'Defines diagonal 2x2 Jones matrices that represent the IF bandpass:\n    Bjones(station,source) matrix elements:\n    - B_11 = (Breal_X,Bimag_X)\n    - B_12 = 0\n    - B_21 = 0\n    - B_22 = (Breal_Y,Bimag_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    NB: The main differences with Gjones are:\n      - the higher-order (~5) freq-polynomial\n      - solving for real/imag rather than gain/phase \n    '
p62
ssg20
F1.1000000000000001
sg19
g34
ssg1
S'@@polrep'
p63
sg7
S'@@stations'
p64
sS'./MG_JEN_Joneset.DJones_WSRT()'
p65
(dp66
g1
S'@@polrep'
p67
sg7
S'@@stations'
p68
sS'coupled_XY_Dell'
p69
I01
sg10
(dp70
g12
S'MG_JEN_Joneset::DJones_WSRT()'
p71
sg14
g65
sg15
S'2006-02-26 14:20'
p72
sg17
(dp73
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetDJones_WSRT'
p74
sg23
S'** Generic description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p75
sg25
g26
sg27
S'MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p76
sg29
S'DJones_WSRT'
p77
sg31
(dp78
g1
(lp79
g2
ag37
ag67
asg7
(lp80
(lp81
I0
aag68
asg69
(lp82
I01
aI00
aS'@@coupled_XY_Dell'
p83
asg20
(lp84
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p85
asS'coupled_XY_Dang'
p86
(lp87
I01
aI00
aS'@@coupled_XY_Dang'
p88
asg19
(lp89
S'DJones_WSRT'
p90
aS'@@@Jsequence'
p91
assg42
S'** Specific description of: MG_JEN_Joneset::DJones_WSRT()  version=16dec2005  defined=2006-02-26 14:20'
p92
sg44
Nsg45
g46
sg47
g72
sg48
S'MG_JEN_Joneset'
p93
sS'editable'
p94
(dp95
g86
I00
sg69
I00
ssg50
(dp96
g1
I00
sg7
I00
ssg52
I00
sg53
(lp97
g10
ag7
ag1
ag19
ag86
ag69
ag20
asg55
(dp98
g1
g58
sg7
g60
sg69
S'if True, XDell = -YDell per station'
p99
sg20
g59
sg86
S'if True, XDang = YDang per station'
p100
sg19
g57
ssg61
S'defines 2x2 DJones_WSRT (polarisation leakage) matrices'
p101
ssg20
F1.1000000000000001
sg86
I01
sg19
g90
ssS'ft_coeff_scale'
p102
F0.0
sS'simul'
p103
S'@@simul'
p104
sS'uvplane_effect'
p105
S'@@uvplane_effect'
p106
sS'parmtable'
p107
S'@@parmtable'
p108
sg10
(dp109
g14
g3
sg55
(dp110
g1
g58
sg7
g60
sg102
S'scale of polc_ft non-c00 coeff'
p111
sg103
S'if True, use simulated (Leafset) Jones parameter values'
p112
sg105
S'if True, the Joneset reprsents uv-plane effects (q=uvp)'
p113
sg107
S'name of the MeqParm table to be used'
p114
sS'Jsequence'
p115
S'sequence of Jones matrices to be used'
p116
sg19
g57
ssg25
g26
sg48
S'MG_JEN_Cohset'
p117
sS'JEN_inargGUI_ident'
p118
(dp119
g115
I55
ssg17
(dp120
g1
I01
sg7
I01
sg102
I01
sg103
I01
sg105
I01
sg107
I01
sg19
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p121
sg45
S'25dec2005'
p122
sg50
(dp123
g105
I00
sg7
I00
sg107
I00
sg1
I00
sg103
I00
ssg61
S'Make a Joneset by creating and multiplying one ore more Jonesets'
p124
sg94
(dp125
g103
I00
ssg27
S'MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p126
sg31
(dp127
g1
(lp128
g2
ag37
ag63
asg7
(lp129
(lp130
I0
aag64
asg102
(lp131
F0.0
aS'@@ft_coeff_scale'
p132
asg103
(lp133
I01
aI00
ag104
asg105
(lp134
I00
ag106
asg107
(lp135
NaS'test'
p136
ag108
asg115
(lp137
(lp138
S'GJones'
p139
aa(lp140
g34
aa(lp141
S'FJones'
p142
aa(lp143
S'KJones'
p144
aa(lp145
g90
aa(lp146
g139
ag90
aa(lp147
S'JJones'
p148
aa(lp149
aS'@@Jsequence'
p150
asg19
(lp151
NaS'@@@Jsequence'
p152
assg44
Nsg15
S'2006-02-26 14:20'
p153
sg12
S'MG_JEN_Cohset::Jones()'
p154
sg21
S'MG_JEN_CohsetJones'
p155
sg29
S'Jones'
p156
sg42
S'** Specific description of: MG_JEN_Cohset::Jones()  version=25dec2005  defined=2006-02-26 14:20'
p157
sg52
I00
sg47
g153
sS'MESSAGE'
p158
(dp159
S'1'
p160
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.FJones()'
p161
sS'0'
p162
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.GJones()'
p163
sS'3'
p164
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.KJones()'
p165
sS'2'
p166
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.BJones()'
p167
sS'5'
p168
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.JJones()'
p169
sS'4'
p170
S'** JEN_inarg.attach(): attached: ./MG_JEN_Joneset.DJones_WSRT()'
p171
ssg53
(lp172
g10
ag7
ag1
ag19
ag107
ag105
ag102
ag103
ag115
aS'./MG_JEN_Joneset.GJones()'
p173
aS'./MG_JEN_Joneset.FJones()'
p174
ag5
aS'./MG_JEN_Joneset.KJones()'
p175
ag65
aS'./MG_JEN_Joneset.JJones()'
p176
assg175
(dp177
g7
S'@@stations'
p178
sg103
g104
sg1
S'@@polrep'
p179
sg10
(dp180
g12
S'MG_JEN_Joneset::KJones()'
p181
sg14
g175
sg15
S'2006-02-26 14:20'
p182
sg17
(dp183
g19
I01
sg1
I01
sg7
I01
ssg21
S'MG_JEN_JonesetKJones'
p184
sg23
S'** Generic description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p185
sg25
g26
sg27
S'MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p186
sg29
S'KJones'
p187
sg31
(dp188
g19
(lp189
g144
aS'@@@Jsequence'
p190
asg1
(lp191
g2
ag37
ag179
asg7
(lp192
(lp193
I0
aag178
assg42
S'** Specific description of: MG_JEN_Joneset::KJones()  version=12dec2005  defined=2006-02-26 14:20'
p194
sg44
Nsg45
S'12dec2005'
p195
sg47
g182
sg48
S'MG_JEN_Joneset'
p196
sg50
(dp197
g1
I00
sg7
I00
ssg52
I00
sg53
(lp198
g10
ag7
ag1
ag19
asg55
(dp199
g19
g57
sg1
g58
sg7
g60
ssg61
S'defines diagonal KJones matrices for DFT Fourier kernel'
p200
ssg19
g144
ssg176
(dp201
g7
S'@@stations'
p202
sg1
S'@@polrep'
p203
sg10
(dp204
g12
S'MG_JEN_Joneset::JJones()'
p205
sg14
g176
sg15
S'2006-02-26 14:20'
p206
sg17
(dp207
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetJJones'
p208
sg23
S'** Generic description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p209
sg25
g26
sg27
S'MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p210
sg29
S'JJones'
p211
sg31
(dp212
g19
(lp213
g148
aS'@@@Jsequence'
p214
asg1
(lp215
g2
ag37
ag203
asg20
(lp216
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p217
asg7
(lp218
(lp219
I0
aag202
assg42
S'** Specific description of: MG_JEN_Joneset::JJones()  version=14feb2006  defined=2006-02-26 14:20'
p220
sg44
Nsg45
S'14feb2006'
p221
sg47
g206
sg48
S'MG_JEN_Joneset'
p222
sg50
(dp223
g1
I00
sg7
I00
ssg52
I00
sg53
(lp224
g10
ag7
ag1
ag19
ag20
asg55
(dp225
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices for full polarisation:\n    Jjones(station,source) matrix elements:\n    - J_11 = (Jreal_11,Jimag_11)\n    - J_12 = (Jreal_12,Jimag_12)\n    - J_21 = (Jreal_21,Jimag_21)\n    - J_22 = (Jreal_22,Jimag_22)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p226
ssg20
F1.1000000000000001
sg19
g148
ssg173
(dp227
g1
S'@@polrep'
p228
sg7
S'@@stations'
p229
sg10
(dp230
g12
S'MG_JEN_Joneset::GJones()'
p231
sg14
g173
sg15
S'2006-02-26 14:20'
p232
sg17
(dp233
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetGJones'
p234
sg23
S'** Generic description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p235
sg25
g26
sg27
S'MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p236
sg29
S'GJones'
p237
sg31
(dp238
g19
(lp239
g139
aS'@@@Jsequence'
p240
asS'Gpolar'
p241
(lp242
I01
aI00
aS'@@Gpolar'
p243
asg1
(lp244
g2
ag37
ag228
asg20
(lp245
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p246
asg7
(lp247
(lp248
I0
aag229
assg42
S'** Specific description of: MG_JEN_Joneset::GJones()  version=15dec2005  defined=2006-02-26 14:20'
p249
sg44
Nsg45
S'15dec2005'
p250
sg47
g232
sg48
S'MG_JEN_Joneset'
p251
sg94
(dp252
g241
I00
ssg50
(dp253
g1
I00
sg7
I00
ssg52
I00
sg53
(lp254
g10
ag7
ag1
ag19
ag241
ag20
asg55
(dp255
g19
g57
sg241
S'if True, use MeqPolar, otherwise MeqToComplex'
p256
sg1
g58
sg20
g59
sg7
g60
ssg61
S'Defines diagonal 2x2 Jones matrices that represent complex gain:\n    Gjones(station,source) matrix elements:\n    - G_11 = Ggain_X*exp(iGphase_X)\n    - G_12 = 0\n    - G_21 = 0\n    - G_22 = Ggain_Y*exp(iGphase_Y)\n    For circular polarisation, R and L are used rather than X and Y\n    '
p257
ssg20
F1.1000000000000001
sg241
I00
sg19
g139
ssg115
(lp258
sg174
(dp259
g7
S'@@stations'
p260
sg1
S'@@polrep'
p261
sg10
(dp262
g12
S'MG_JEN_Joneset::FJones()'
p263
sg14
g174
sg15
S'2006-02-26 14:20'
p264
sg17
(dp265
g19
I01
sg1
I01
sg20
I00
sg7
I01
ssg21
S'MG_JEN_JonesetFJones'
p266
sg23
S'** Generic description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p267
sg25
g26
sg27
S'MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p268
sg29
S'FJones'
p269
sg31
(dp270
g19
(lp271
g142
aS'@@@Jsequence'
p272
asg1
(lp273
g2
ag37
ag261
asg20
(lp274
F1.1000000000000001
aF0.10000000000000001
aS'@@stddev'
p275
asg7
(lp276
(lp277
I0
aag260
assg42
S'** Specific description of: MG_JEN_Joneset::FJones()  version=16dec2005  defined=2006-02-26 14:20'
p278
sg44
Nsg45
g46
sg47
g264
sg48
S'MG_JEN_Joneset'
p279
sg50
(dp280
g1
I00
sg7
I00
ssg52
I00
sg53
(lp281
g10
ag7
ag1
ag19
ag20
asg55
(dp282
g19
g57
sg1
g58
sg20
g59
sg7
g60
ssg61
S'defines diagonal FJones Faraday rotation matrices'
p283
ssg20
F1.1000000000000001
sg19
g142
ssg19
NssS'./MG_JEN_Cohset.predict()'
p284
(dp285
g1
S'@@polrep'
p286
sg10
(dp287
g12
S'MG_JEN_Cohset::predict()'
p288
sg14
g284
sg118
(dp289
sg17
(dp290
g1
I01
sg7
I01
ssg21
S'MG_JEN_Cohsetpredict'
p291
sg23
S'** Generic description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p292
sg25
g26
sg61
S'Make a Cohset with predicted uv-data for the source defined by Sixpack.\n    If a Joneset with instrumental effects is supplied, corrupt the data.'
p293
sg27
S'MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p294
sg29
S'predict'
p295
sg31
(dp296
g1
(lp297
g2
ag37
ag286
asg7
(lp298
(lp299
I0
aI1
aI2
aI3
aI4
aa(lp300
I0
aI1
aI2
aI3
aI4
aI5
aI6
aa(lp301
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aa(lp302
I0
aI1
aI2
aI3
aI4
aI5
aI6
aI7
aI8
aI9
aI10
aI11
aI12
aI13
aI14
aaS'range(5)'
p303
aS'@@stations'
p304
assg42
S'** Specific description of: MG_JEN_Cohset::predict()  version=25dec2005  defined=2006-02-26 14:20'
p305
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p306
sg48
S'MG_JEN_Cohset'
p307
sg50
(dp308
g1
I00
sg7
I00
ssg52
I00
sg15
g306
sg53
(lp309
g10
ag7
ag1
asg55
(dp310
g1
S'polarisation representation'
p311
sg7
S'the (subset of) stations to be used'
p312
sssg7
g304
ssS'script_name'
p313
S'MG_JEN_cps'
p314
sS'redun'
p315
I00
sS'ms_name'
p316
S'D1.MS'
p317
sg107
Nsg10
(dp318
g14
S'./MG_JEN_cps.'
p319
sg55
(dp320
g1
g58
sS'master_reqseq'
p321
S'if True, use a master reqseq for solver(s)'
p322
sg7
g60
sS'insert_flagger'
p323
S'if True, insert a flagger'
p324
sg315
S'if True, redundant spacing calibration'
p325
sS'insert_solver'
p326
S'if True, insert a solver'
p327
sg102
g111
sg316
S'name of the (AIPS++) Measurement Set'
p328
sS'chain_solvers'
p329
S'if True, chain the solvers (recommended)'
p330
sS'num_cells'
p331
S'if defined, ModRes argument [ntime,nfreq]'
p332
sg107
g114
sS'tile_size'
p333
S'(inputrec) size (in time-slots) of the input data-tile'
p334
sg103
g112
sg105
g113
sg19
g57
ssS'reference'
p335
I00
sg25
g26
sg48
S'MG_JEN_cps'
p336
sg118
(dp337
g1
I7
sg7
I6
sg323
I2
sg315
I15
sg326
I1
sg103
I12
sg316
I4
sg107
I9
sg313
I0
sg331
I16
sg333
I5
sg105
I10
ssg17
(dp338
g321
I01
sg315
I00
sS'last_changed'
p339
I01
sg102
I01
sg105
I00
sg329
I01
sg331
I00
sg19
I01
ssg23
S"\n    Description of the input argument record: MG_JEN_cps_xxx.inarg\n    (to be used with the MeqTree TDL stript MG_JEN_cps.py) \n    \n    ....\n\n    --------------------------------------------------------------------------\n    General description of the MeqTree TDL script MG_JEN_cps.py:\n\n    The MG_JEN_cps.py script is the basis for a range of uv-data operations\n    that require only a Central Point Source (cps) as a selfcal model. This is\n    particularly useful for reducing calibrator observations, i.e. fields with\n    a strong point source with known parameters, in the centre of the field.\n    But it can also be used for initial calibration of observations that have\n    significant other sources in the field (but a dominating point-like source\n    in the centre.\n\n\n    * The selfcal model is a point source in the centre of the field.\n        A range of source models for standard calibrators (e.g. 3c147 etc)\n        is available, and also some customised source models (for experimentation)\n\n    * uvplane_effect=True: All instrumental MeqParms have qualifier q=uvp.\n        The uv-data are read from the MS DATA column\n        and written to the MS CORRECTED_DATA column\n\n    * In order to minimises contamination from other sources on the solution:\n        - It solves for MeqParms that vary slowly in time, over large domains.\n        - The short baselines are ignored (e.g. rmin=150m)\n\n\n    Different operations may be specified by loading (and editing) socalled\n    'inarg' records from files (like this one). These contain input arguments\n    for generating a suitable MeqTree forest for the desired operation.\n\n\n    --------------------------------------------------------------------------\n    Brief descriptions of the various sub-modules:\n\n    "
p340
sg45
g250
sg61
g340
sg94
(dp341
g321
I00
sg315
I00
sg323
I00
sg339
I00
sg326
I00
sg103
I00
ssg27
S'** Top-level CTRL-record of: MG_JEN_cps.inarg'
p342
sg31
(dp343
g1
(lp344
g2
ag37
aS'@@polrep'
p345
asg321
(lp346
I01
aI00
aS'@@master_reqseq'
p347
asg7
(lp348
(lp349
I0
aaS'@@stations'
p350
asg323
(lp351
I01
aI00
aS'@@insert_flagger'
p352
asg315
(lp353
I01
aI00
aS'@@redun'
p354
asg326
(lp355
I01
aI00
aS'@@insert_solver'
p356
asg339
(lp357
S'd30jan2006'
p358
aS'@@last_changed'
p359
asg316
(lp360
g317
aS'@@ms_name'
p361
asg329
(lp362
I01
aS'@@chain_solvers'
p363
asg331
(lp364
Na(lp365
I5
aI2
aa(lp366
I2
aI2
aa(lp367
I3
aI3
aaS'@@num_cells'
p368
asg107
(lp369
Nag136
aS'@@parmtable'
p370
asg333
(lp371
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p372
asg103
(lp373
I01
aI00
aS'@@simul'
p374
asg102
(lp375
F0.0
aS'@@ft_coeff_scale'
p376
asg105
(lp377
I00
aS'@@uvplane_effect'
p378
asg19
(lp379
NaS'@@@Jsequence'
p380
assg15
S'2006-02-26 14:20'
p381
sS'HISTORY'
p382
(dp383
g160
S'2006-02-26 14:20: Derived from: MG_JEN_cps_inspect.inarg'
p384
sg162
S'2006-02-26 14:20: Derived from: MG_JEN_cps.inarg'
p385
sg164
S'2006-02-26 14:20: Derived from: MG_JEN_cps_inspect_CORRECTED_DATA.inarg'
p386
sg166
S'2006-02-26 14:20: Derived from: MG_JEN_cps_inspect.inarg'
p387
ssg12
g314
sS'save_file'
p388
S'MG_JEN_cps_inspect_CORRECTED_DATA_protected.inarg'
p389
sS'file_filter'
p390
S'MG_JEN_cps*.inarg'
p391
sg29
S''
p392
sg42
S'<specific>'
p393
sS'browse'
p394
(dp395
g316
S'*.MS'
p396
ssg52
I01
sg47
g381
sg158
(dp397
S'11'
p398
S'.modify( tile_size ): 10  ->  1'
p399
sS'10'
p400
S'.modify(): stripped off: _JEN_inarg_option'
p401
sS'13'
p402
S".modify(): found ={'tile_size': 2, 'insert_solver': 1}"
p403
sS'12'
p404
S'.modify( insert_solver ): True  ->  False'
p405
sS'15'
p406
S".modify(): found ={'data_column_name': 1}"
p407
sS'14'
p408
S'.modify(): stripped off: _JEN_inarg_option'
p409
sg160
S'.modify( uvplane_effect ): False  ->  True'
p410
sg162
S'.modify(): stripped off: _JEN_inarg_option'
p411
sg164
S'** JEN_inarg.attach(): attached: ./MG_JEN_exec.stream_control()'
p412
sg166
S".modify(): found ={'uvplane_effect': 1}"
p413
sg168
S'** JEN_inarg.attach(): attached: ./MG_JEN_Sixpack.newstar_source()'
p414
sg170
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_spigots()'
p415
sS'7'
p416
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.predict()'
p417
sS'6'
p418
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.Jones()'
p419
sS'9'
p420
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.make_sinks()'
p421
sS'8'
p422
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.insert_solver()'
p423
ssg53
(lp424
g10
ag313
ag326
ag323
ag339
ag316
ag333
ag7
ag1
ag19
ag107
ag105
ag102
ag103
ag329
ag321
ag315
ag331
aS'./MG_JEN_exec.stream_control()'
p425
aS'./MG_JEN_Cohset.make_spigots()'
p426
aS'./MG_JEN_Sixpack.newstar_source()'
p427
ag3
ag284
aS'./MG_JEN_Cohset.insert_solver()'
p428
aS'./MG_JEN_Cohset.make_sinks()'
p429
assg429
(dp430
S'fullDomainMux'
p431
I01
sS'output_col'
p432
S'PREDICT'
p433
sS'visu'
p434
I01
sS'flag'
p435
I00
sg10
(dp436
g12
S'MG_JEN_Cohset::make_sinks()'
p437
sg14
g429
sg118
(dp438
g435
I83
sg434
I82
sg431
I84
sg432
I80
sS'visu_array_config'
p439
I81
ssg21
S'MG_JEN_Cohsetmake_sinks'
p440
sg23
S'** Generic description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p441
sg25
g26
sg61
S'Make sink nodes in the given Cohset object'
p442
sg27
S'MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p443
sg29
S'make_sinks'
p444
sg31
(dp445
g435
(lp446
I01
aI00
aS'@@flag'
p447
asg439
(lp448
I01
aI00
aS'@@visu_array_config'
p449
asg432
(lp450
g433
aS'RESIDUALS'
p451
aS'DATA'
p452
aS'@@output_col'
p453
asg431
(lp454
I01
aI00
aS'@@fullDomainMux'
p455
asg434
(lp456
I01
aI00
aS'@@visu'
p457
assg42
S'** Specific description of: MG_JEN_Cohset::make_sinks()  version=25dec2005  defined=2006-02-26 14:20'
p458
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p459
sg48
S'MG_JEN_Cohset'
p460
sg94
(dp461
g435
I00
sg439
I00
sg431
I00
sg434
I00
ssg52
I00
sg15
g459
sg53
(lp462
g10
ag432
ag439
ag434
ag435
ag431
asg55
(dp463
g435
S'if True, insert a flagger for the output uv-data'
p464
sg439
S'if True, visualise the array config (from MS)'
p465
sg432
S'name of the logical (VisTile) output column'
p466
sg431
S'if True, attach an extra VisDataMux'
p467
sg434
S'if True, visualise the output uv-data'
p468
sssg439
I01
ssg333
I1
sg426
(dp469
S'MS_corr_index'
p470
(lp471
I0
aI1
aI2
aI3
asg435
I00
sg10
(dp472
g12
S'MG_JEN_Cohset::make_spigots()'
p473
sg14
g426
sg118
(dp474
g435
I28
sg470
I26
sg434
I27
ssg17
(dp475
S'input_col'
p476
I01
ssg21
S'MG_JEN_Cohsetmake_spigots'
p477
sg23
S'** Generic description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p478
sg25
g26
sg61
S'Make spigot nodes in the given Cohset object'
p479
sg27
S'MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p480
sg29
S'make_spigots'
p481
sg31
(dp482
g435
(lp483
I01
aI00
aS'@@flag'
p484
asg470
(lp485
g471
a(lp486
I0
aI-1
aI-1
aI1
aa(lp487
I0
aI-1
aI-1
aI3
aaS'@@'
p488
aS'@@MS_corr_index'
p489
asg476
(lp490
g452
ag433
ag451
aS'@@input_col'
p491
asg434
(lp492
I01
aI00
aS'@@visu'
p493
assg42
S'** Specific description of: MG_JEN_Cohset::make_spigots()  version=25dec2005  defined=2006-02-26 14:20'
p494
sg44
Nsg45
g122
sg47
S'2006-02-26 14:20'
p495
sg48
S'MG_JEN_Cohset'
p496
sg94
(dp497
g435
I00
sg434
I00
ssg52
I00
sg15
g495
sg53
(lp498
g10
ag476
ag470
ag434
ag435
asg55
(dp499
g435
S'if True, insert a flagger for the input uv-data'
p500
sg470
S'correlations to be used: \n- [0,1,2,3]:   all corrs available, use all \n- [0,-1,-1,1]: only XX/YY (or RR/LL) available \n- [0,-1,-1,3]: all available, but use only XX/YY or RR/LL'
p501
sg476
S'name of the logical (VisTile) input column'
p502
sg434
S'if True, visualise the input uv-data'
p503
sssg476
g452
sg434
I01
ssg19
Nsg323
I00
sg339
g358
sg105
I01
sg331
Nsg427
(dp504
S'f0'
p505
F1000000.0
sS'major'
p506
F0.0
sS'unsolvable'
p507
I00
sS'from_LSM'
p508
NsS'name'
p509
NsS'I0'
p510
F1.0
sS'SI'
p511
NsS'Qpct'
p512
NsS'punit'
p513
S'unpol'
p514
sS'fsr_trace'
p515
I01
sS'shape'
p516
S'point'
p517
sS'pa'
p518
F0.0
sS'RA'
p519
F4.3570000000000002
sg107
NsS'RM'
p520
NsS'Upct'
p521
NsS'Dec'
p522
F1.0920000000000001
sS'Vpct'
p523
NsS'minor'
p524
F0.0
sg10
(dp525
g14
g427
sg55
(dp526
g505
S'reference freq (Hz): I=I0 @ f=f0'
p527
sg506
S'major axis (arcsec)'
p528
sg507
S'if True, do NOT store solvegroup/parmgroup info'
p529
sg508
S'(file)name of a Local Sky Model to be used(instead of a predefined punit)'
p530
sg510
S'Stokes I: Total intensity @ f=f0 (usually 1 MHz)'
p531
sg511
S'Spectral Index (generalised)\n   A scalar represents the classical SI: I(f)=I0*(f/f0)^SI\n   A vector represents a freq-dependent SI (....)'
p532
sg512
S'Stokes Q (percentage of I)'
p533
sg513
S'name of calibrator source/patch \n- unpol:   unpolarised, I=1Jy \n- unpol2:  idem, I=2Jy \n- unpol10: idem, I=10Jy \n- RMtest:  Rotation Measure \n- SItest:  Spectral Index \n- QUV:     non-zero Q,U,V \n- QU:      non-zero Q,U \n- QU2:     stronger version of QU \n- Qonly:   non-zero Q \n- Uonly:   non-zero U \n- Vonly:   non-zero V \n- 3c286:   \n- 3c48:    \n- 3c295:   \n- 3c147:   \n'
p534
sg516
S'source shape'
p535
sg518
S'position angle (rad)'
p536
sg515
S'If True, attach to forest state record'
p537
sg107
S'name of the MeqParm table (AIPS++)'
p538
sg520
S'Intrinsic Rotation Measure (rad/m2)'
p539
sg521
S'Stokes U (percentage of I)'
p540
sg522
S'Declination (rad, J2000)'
p541
sg523
S'Stokes V (percentage of I)'
p542
sg524
S'minor axis (arcsec)'
p543
sg519
S'Right Ascension (rad, J2000)'
p544
ssg25
g26
sg48
S'MG_JEN_Sixpack'
p545
sg118
(dp546
g522
I42
sg508
I30
sg510
I34
sg512
I35
sg513
I29
sg511
I39
sg107
I32
sg519
I41
sg520
I38
sg521
I36
sg523
I37
ssg17
(dp547
g505
I01
sg506
I01
sg507
I01
sg508
I00
sg515
I01
sg513
I00
sg516
I01
sg518
I01
sg524
I01
sg509
I01
ssg23
S'** Generic description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p548
sg45
S'10feb2006'
p549
sg394
(dp550
g508
S'*.lsm'
p551
ssg61
S'Make a Sixpack (I,Q,U,V,Ra,Dec) for a source with NEWSTAR parametrisation'
p552
sg94
(dp553
g507
I00
sg515
I00
ssg27
S'MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p554
sg31
(dp555
g505
(lp556
F1000000.0
aS'@@f0'
p557
asg506
(lp558
F0.0
aF1.0
aF10.0
aF100.0
aS'@@major'
p559
asg507
(lp560
I01
aI00
aS'@@unsolvable'
p561
asg508
(lp562
NaS'@@from_LSM'
p563
asg510
(lp564
F1.0
aF10.0
aS'@@I0'
p565
asg511
(lp566
NaF-0.69999999999999996
a(lp567
F0.44700000000000001
aF-0.184
aaS'@@SI'
p568
asg512
(lp569
NaF0.10000000000000001
aF-0.050000000000000003
aF0.01
aS'@@Qpct'
p570
asg513
(lp571
g514
aS'unpol2'
p572
aS'unpol10'
p573
aS'QUV'
p574
aS'QU'
p575
aS'Qonly'
p576
aS'Uonly'
p577
aS'Vonly'
p578
aS'3c147'
p579
aS'3c286'
p580
aS'3c48'
p581
aS'3c295'
p582
aS'RMtest'
p583
aS'SItest'
p584
aS'@@punit'
p585
asg515
(lp586
I01
aI00
aS'@@fsr_trace'
p587
asg516
(lp588
g517
aS'ell.gauss'
p589
aS'@@shape'
p590
asg518
(lp591
F0.0
aF1.0
aF-0.5
aS'@@pa'
p592
asg519
(lp593
F0.0
aF0.5
aF1.0
aF4.3570000000000002
aS'@@RA'
p594
asg107
(lp595
NaS'@@parmtable'
p596
asg520
(lp597
NaF1.0
aF3.0
aF10.0
aF-10.0
aF60.0
aS'@@RM'
p598
asg521
(lp599
NaF-0.10000000000000001
aF0.050000000000000003
aF-0.01
aS'@@Upct'
p600
asg522
(lp601
F0.5
aF1.0
aF1.0920000000000001
aS'@@Dec'
p602
asg523
(lp603
NaF0.01
aF-0.0050000000000000001
aF0.001
aS'@@Vpct'
p604
asg524
(lp605
F0.0
aF0.5
aF5.0
aF50.0
aS'@@minor'
p606
asg509
(lp607
NaS'@@name'
p608
assg44
Nsg15
S'2006-02-26 14:20'
p609
sg12
S'MG_JEN_Sixpack::newstar_source()'
p610
sg21
S'MG_JEN_Sixpacknewstar_source'
p611
sg29
S'newstar_source'
p612
sg42
S'** Specific description of: MG_JEN_Sixpack::newstar_source()  version=10feb2006  defined=2006-02-26 14:20'
p613
sS'callback'
p614
(dp615
g513
I01
ssg52
I00
sg47
g609
sg53
(lp616
g10
ag513
ag508
ag509
ag107
ag507
ag510
ag512
ag521
ag523
ag520
ag511
ag505
ag519
ag522
ag515
ag516
ag506
ag524
ag518
asssg321
I00
sg7
g349
sg425
(dp617
S'channel_start_index'
p618
I10
sS'data_column_name'
p619
S'CORRECTED_DATA'
p620
sS'predict_column'
p621
g620
sg316
S'@@ms_name'
p622
sg10
(dp623
g14
g425
sg55
(dp624
g618
S'(inputrec.sel) index of first selected freq channel'
p625
sg619
S'(inputrec) MS input column'
p626
sg621
S'MS output column to be associated with the VisTile predict-column'
p627
sg316
g328
sg333
g334
sS'channel_increment'
p628
S'(inputrec.sel) take every nth channel (1=all)'
p629
sS'channel_end_index'
p630
S'(inputrec.sel) index of last selected freq channel'
p631
sS'write_flags'
p632
S'(outputrec) if True, write flags to MS'
p633
ssg25
g26
sg48
S'MG_JEN_exec'
p634
sg118
(dp635
g618
I20
sg619
I19
sg621
I24
sg632
I23
sg630
I21
sg628
I22
ssg17
(dp636
g316
I01
sg333
I01
ssg23
S'** Generic description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p637
sg45
S'20jan2006'
p638
sg50
(dp639
g316
I00
sg333
I00
ssg61
S'** Description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p640
sg94
(dp641
g632
I00
ssg27
S'MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p642
sg31
(dp643
g618
(lp644
I0
aI5
aI10
aI20
aS'@@channel_start_index'
p645
asg619
(lp646
g452
ag620
aS'@@data_column_name'
p647
asg621
(lp648
g452
ag620
aS'MODEL_DATA'
p649
aS'@@predict_column'
p650
asg316
(lp651
g317
ag622
asg333
(lp652
I1
aI2
aI3
aI5
aI10
aI20
aI50
aI100
aS'@@tile_size'
p653
asg628
(lp654
I1
aI2
aI3
aI5
aI10
aS'@@channel_increment'
p655
asg630
(lp656
I-1
aI25
aI50
aI100
aS'@@channel_end_index'
p657
asg632
(lp658
I01
aI00
aS'@@write_flags'
p659
assg44
Nsg15
S'2006-02-26 14:20'
p660
sg12
S'MG_JEN_exec::stream_control()'
p661
sg21
S'MG_JEN_execstream_control'
p662
sg29
S'stream_control'
p663
sg42
S'** Specific description of: MG_JEN_exec::stream_control()  version=20jan2006  defined=2006-02-26 14:20'
p664
sg394
(dp665
g316
g396
ssg52
I00
sg47
g660
sg158
(dp666
g160
S'.modify( data_column_name ): DATA  ->  CORRECTED_DATA'
p667
sg162
S'.modify( tile_size ): @@tile_size  ->  1'
p668
ssg53
(lp669
g10
ag316
ag333
ag619
ag618
ag630
ag628
ag632
ag621
assg333
I1
sg628
I1
sg630
I50
sg632
I00
ssg102
F0.0
sg326
I00
sg103
I00
sg329
I01
sg428
(dp670
S'correct_after'
p671
I01
sg321
S'@@master_reqseq'
p672
sS'condeq_unop'
p673
Nsg434
I01
sg315
S'@@redun'
p674
sS'solver_subtree'
p675
NsS'subtract_after'
p676
I00
sg329
S'@@chain_solvers'
p677
sg10
(dp678
g14
g428
sg55
(dp679
g671
S'if True, correct measured with predicted.Joneset'
p680
sg321
g322
sg673
S'Optional unary operation on Condeq inputs'
p681
sg434
S'if True, include full visualisation'
p682
sg315
g325
sg675
S'solver subtree qualifier(s)'
p683
sg676
S'if True, subtract predicted from measured'
p684
sg329
g330
sS'flag_residuals'
p685
S'if True, flag the residuals'
p686
sg331
g332
ssg25
g26
sg48
S'MG_JEN_Cohset'
p687
sg118
(dp688
g676
I65
sg671
I66
sg673
I63
sg434
I64
ssg17
(dp689
g321
I01
sg315
I01
sg675
I01
sg329
I01
sg685
I01
sg331
I01
ssg23
S'** Generic description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p690
sg45
g122
sg50
(dp691
g331
I00
sg329
I00
sg315
I00
sg321
I00
ssg61
S'insert one or more solver subtrees in the data stream'
p692
sg94
(dp693
g671
I00
sg321
I00
sg434
I00
sg315
I00
sg676
I00
sg685
I00
ssg27
S'MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p694
sg31
(dp695
g671
(lp696
I01
aI00
aS'@@correct_after'
p697
asg321
(lp698
I01
aI00
ag672
asg673
(lp699
NaS'Abs'
p700
aS'Arg'
p701
aS'@@condeq_unop'
p702
asg434
(lp703
I01
aI00
aS'@@visu'
p704
asg315
(lp705
I01
aI00
ag674
asg675
(lp706
NaS'@@solver_subtree'
p707
asg676
(lp708
I01
aI00
aS'@@subtract_after'
p709
asg329
(lp710
I01
ag677
asg685
(lp711
I01
aI00
aS'@@flag_residuals'
p712
asg331
(lp713
Na(lp714
I5
aI2
aa(lp715
I2
aI2
aa(lp716
I3
aI3
aaS'@@num_cells'
p717
assg44
Nsg15
S'2006-02-26 14:20'
p718
sg12
S'MG_JEN_Cohset::insert_solver()'
p719
sg21
S'MG_JEN_Cohsetinsert_solver'
p720
sg29
S'insert_solver'
p721
sg42
S'** Specific description of: MG_JEN_Cohset::insert_solver()  version=25dec2005  defined=2006-02-26 14:20'
p722
sg52
I00
sg47
g718
sg158
(dp723
g162
S'** JEN_inarg.attach(): attached: ./MG_JEN_Cohset.solver_subtree()'
p724
ssg53
(lp725
g10
ag675
ag315
ag331
ag329
ag321
ag673
ag434
ag676
ag671
ag685
aS'./MG_JEN_Cohset.solver_subtree()'
p726
assg331
g717
sg726
(dp727
S'rmin'
p728
Nsg434
I01
sS'epsilon'
p729
F0.0001
sS'rmax'
p730
NsS'usesvd'
p731
I01
sS'debug_level'
p732
I10
sS'solvegroup'
p733
(lp734
sg10
(dp735
g12
S'MG_JEN_Cohset::solver_subtree()'
p736
sg14
g726
sg15
S'2006-02-26 14:20'
p737
sg17
(dp738
g732
I01
sg331
I00
ssg21
S'MG_JEN_Cohsetsolver_subtree'
p739
sg23
S'** Generic description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p740
sg25
g26
sg27
S'MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p741
sg29
S'solver_subtree'
p742
sg31
(dp743
g728
(lp744
NaI100
aI200
aI500
aS'@@rmin'
p745
asg434
(lp746
I01
aI00
aS'@@visu'
p747
asg729
(lp748
F0.001
aF0.0001
aF1.0000000000000001e-05
aS'@@epsilon'
p749
asg730
(lp750
NaI500
aI1000
aI2000
aS'@@rmax'
p751
asg731
(lp752
I01
aI00
aS'@@usesvd'
p753
asg732
(lp754
I10
aS'@@debug_level'
p755
asg733
(lp756
g734
a(lp757
g139
aa(lp758
S'Ggain'
p759
aa(lp760
S'Gphase'
p761
aa(lp762
S'Gpol1'
p763
aa(lp764
S'Gpol2'
p765
aa(lp766
g148
aa(lp767
g139
aS'stokesI'
p768
aa(lp769
g768
aa(lp770
S'stokesIQU'
p771
aa(lp772
S'stokesIQUV'
p773
aa(lp774
g139
aS'DJones'
p775
aa(lp776
g775
aa(lp777
S'Dang'
p778
aa(lp779
S'Dell'
p780
aa(lp781
S'Dreal'
p782
aa(lp783
S'Dimag'
p784
aa(lp785
g139
ag775
ag142
aa(lp786
g142
aa(lp787
g139
ag34
aa(lp788
g34
aa(lp789
S'Breal'
p790
aa(lp791
S'Bimag'
p792
aa(lp793
S'Bpol1'
p794
aa(lp795
S'Bpol2'
p796
aaS'@@solvegroup'
p797
asg331
(lp798
Na(lp799
I5
aI2
aa(lp800
I2
aI2
aa(lp801
I3
aI3
aaS'@@num_cells'
p802
asS'history'
p803
(lp804
I01
aI00
aS'@@history'
p805
asS'num_iter'
p806
(lp807
I1
aI3
aI5
aI10
aI20
aS'@@num_iter'
p808
asS'condition'
p809
(lp810
NaS'Gphase_X_sum=0.0'
p811
aS'Gphase_Y_sum=0.0'
p812
a(lp813
g811
ag812
aa(lp814
S'Gphase_X_first=0.0'
p815
aS'Gphase_Y_first=0.0'
p816
aa(lp817
S'Gphase_X_last=0.0'
p818
aS'Gphase_Y_last=0.0'
p819
aaS'Dang_sum=0.0'
p820
a(lp821
S'Bimag_X_sum=0.0'
p822
aS'Bimag_Y_sum=0.0'
p823
aa(lp824
S'Breal_X_product=1.0'
p825
aS'Breal_Y_product=1.0'
p826
aaS'@@condition'
p827
asS'colin_factor'
p828
(lp829
F1e-08
aF0.0
aS'@@colin_factor'
p830
assg42
S'** Specific description of: MG_JEN_Cohset::solver_subtree()  version=20dec2005  defined=2006-02-26 14:20'
p831
sg44
Nsg45
S'20dec2005'
p832
sg118
(dp833
g728
I70
sg434
I78
sg729
I74
sg730
I71
sg731
I76
sg733
I68
sg331
I72
sg803
I79
sg806
I73
sg809
I69
sg828
I75
ssg47
g737
sg48
S'MG_JEN_Cohset'
p834
sg94
(dp835
g731
I00
sg803
I00
sg434
I00
ssg52
I00
sg53
(lp836
g10
ag733
ag809
ag728
ag730
ag331
ag806
ag729
ag828
ag731
ag732
ag434
ag803
asg55
(dp837
g728
S'if specified, only use baselines>=rmin'
p838
sg434
S'if True, include visualisation'
p839
sg729
S'iteration control criterion'
p840
sg730
S'if specified, only use baselines<=rmax'
p841
sg731
S'if True, use Singular Value Decomposition (SVD)'
p842
sg732
S'solver debug_level'
p843
sg733
S'group (list) of parmgroups, to be solved for:\n- [GJones]:  all GJones MeqParms\n- [Ggain]:   GJones station gains (both pols)\n- [Gphase]:  GJones station phases (both pols)\n- [Gpol1]:   All GJones MeqParms for pol1 (X or R)\n- [Gpol2]:   All GJones MeqParms for pol2 (Y or L)\n- [stokesI]:    stokes I (incl SI(f), if relevant)\n- [stokesIQU]:  stokes I,Q,U (incl RM and SI(f))\n- [stokesIQUV]: stokes I,Q,U,V (incl RM and SI(f))'
p844
sg331
g332
sg803
S'if True, include history collection of metrics'
p845
sg806
S'max number of iterations'
p846
sg809
S'(list of) extra condition equations:\n- [...phase_sum=0.0]:   sum of phases = zero\n- [...phase_first=0.0]: phase of first station = zero\n- [...phase_last=0.0]:  phase of last station = zero\n- [Dang_sum=0.0]:   sum of dipole pos.angle errors = zero\n- [...imag_sum=0.0]:   sum of imag.parts = zero\n- [...real_product=1.0]:   product of real.parts = unity'
p847
sg828
S'colinearity factor'
p848
ssg61
S'Make a solver-subtree for the given Condeq Cohset'
p849
ssg331
Nsg803
I01
sg806
I20
sg809
Nsg828
F1e-08
ssg685
I00
ss.