# MG_RxA_sp2snk
# -------------
#
# Most simple spigot-to-sink tree
#

# standard preamble
from Timba.TDL import *
 
Settings.forest_state.cache_policy = 100;
Settings.orphans_are_roots = True;

def _define_forest (ns):
  '''There is only one spigot and one sink in the tree.
     The spigot takes data from interferometer 1,1
  '''
  sp = Meq.Spigot(input_col='DATA',
                  station_1_index=1,
		  station_2_index=1);
  ns.x << Meq.Sink(output_col='PREDICT',
                  station_1_index=1,
                  station_2_index=1,
	          children=sp);

def _test_forest (mqs,parent):

  from Timba.Meq import meq

#
# run tests on the forest
#

  i = dmi.record();
  i.sink_type = 'ms_in';
  i.ms_name = 'D1.MS';
  i.data_column_name = 'DATA';
  i.tile_size = 1;
  i.selection = dmi.record();
  i.selection.channel_start_index = 0;
  i.selection.channel_end_index = -1;

  o = dmi.record();
  o.sink_type = 'ms_out';
  o.predict_column_name = 'PREDICT';

  mqs.meq('Node.Publish.Results',record(name='x'));
  mqs.init(record(output_col='PREDICT'), inputinit=i, outputinit=o);

if __name__ == '__main__':
  Timba.TDL._dbg.set_verbose(5);
  ns = NodeScope();
  _define_forest(ns);
  ns.Resolve();
