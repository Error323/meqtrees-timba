    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../Timba/DMI/aid/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
#include "Domain.h"
DMI::BObj * __construct_MeqDomain (int n) { return n>0 ? new Meq::Domain [n] : new Meq::Domain; }
#include "Cells.h"
DMI::BObj * __construct_MeqCells (int n) { return n>0 ? new Meq::Cells [n] : new Meq::Cells; }
#include "Request.h"
DMI::BObj * __construct_MeqRequest (int n) { return n>0 ? new Meq::Request [n] : new Meq::Request; }
#include "Vells.h"
DMI::BObj * __construct_MeqVells (int n) { return n>0 ? new Meq::Vells [n] : new Meq::Vells; }
#include "VellSet.h"
DMI::BObj * __construct_MeqVellSet (int n) { return n>0 ? new Meq::VellSet [n] : new Meq::VellSet; }
#include "Result.h"
DMI::BObj * __construct_MeqResult (int n) { return n>0 ? new Meq::Result [n] : new Meq::Result; }
#include "Funklet.h"
DMI::BObj * __construct_MeqFunklet (int n) { return n>0 ? new Meq::Funklet [n] : new Meq::Funklet; }
#include "Polc.h"
DMI::BObj * __construct_MeqPolc (int n) { return n>0 ? new Meq::Polc [n] : new Meq::Polc; }
#include "Node.h"
DMI::BObj * __construct_MeqNode (int n) { return n>0 ? new Meq::Node [n] : new Meq::Node; }
#include "Function.h"
DMI::BObj * __construct_MeqFunction (int n) { return n>0 ? new Meq::Function [n] : new Meq::Function; }
    using namespace DMI;
  
    int aidRegistry_Meq ()
    {
      static int res = 

        AtomicID::registerId(-1153,"node")+
        AtomicID::registerId(-1122,"class")+
        AtomicID::registerId(-1121,"name")+
        AtomicID::registerId(-1059,"state")+
        AtomicID::registerId(-1132,"child")+
        AtomicID::registerId(-1101,"children")+
        AtomicID::registerId(-1039,"request")+
        AtomicID::registerId(-1144,"result")+
        AtomicID::registerId(-1163,"vellset")+
        AtomicID::registerId(-1133,"rider")+
        AtomicID::registerId(-1137,"command")+
        AtomicID::registerId(-1083,"id")+
        AtomicID::registerId(-1036,"group")+
        AtomicID::registerId(-1065,"add")+
        AtomicID::registerId(-1070,"update")+
        AtomicID::registerId(-1147,"value")+
        AtomicID::registerId(-1040,"values")+
        AtomicID::registerId(-1154,"solve")+
        AtomicID::registerId(-1103,"solver")+
        AtomicID::registerId(-1067,"dependency")+
        AtomicID::registerId(-1112,"resolution")+
        AtomicID::registerId(-1164,"depend")+
        AtomicID::registerId(-1130,"mask")+
        AtomicID::registerId(-1107,"resample")+
        AtomicID::registerId(-1092,"integrated")+
        AtomicID::registerId(-1119,"cells")+
        AtomicID::registerId(-1058,"domain")+
        AtomicID::registerId(-1047,"freq")+
        AtomicID::registerId(-1077,"time")+
        AtomicID::registerId(-1046,"calc")+
        AtomicID::registerId(-1148,"deriv")+
        AtomicID::registerId(-1139,"vells")+
        AtomicID::registerId(-1142,"vellsets")+
        AtomicID::registerId(-1158,"flags")+
        AtomicID::registerId(-1128,"weights")+
        AtomicID::registerId(-1100,"shape")+
        AtomicID::registerId(-1076,"grid")+
        AtomicID::registerId(-1123,"cell")+
        AtomicID::registerId(-1072,"size")+
        AtomicID::registerId(-1134,"segments")+
        AtomicID::registerId(-1169,"start")+
        AtomicID::registerId(-1048,"end")+
        AtomicID::registerId(-1069,"steps")+
        AtomicID::registerId(-1052,"axis")+
        AtomicID::registerId(-1116,"axes")+
        AtomicID::registerId(-1135,"offset")+
        AtomicID::registerId(-1035,"nodeindex")+
        AtomicID::registerId(-1066,"table")+
        AtomicID::registerId(-1151,"default")+
        AtomicID::registerId(-1055,"index")+
        AtomicID::registerId(-1110,"num")+
        AtomicID::registerId(-1104,"cache")+
        AtomicID::registerId(-1093,"code")+
        AtomicID::registerId(-1165,"funklet")+
        AtomicID::registerId(-1159,"funklets")+
        AtomicID::registerId(-1155,"parm")+
        AtomicID::registerId(-1138,"spid")+
        AtomicID::registerId(-1136,"coeff")+
        AtomicID::registerId(-1145,"perturbed")+
        AtomicID::registerId(-1091,"perturbations")+
        AtomicID::registerId(-1172,"names")+
        AtomicID::registerId(-1096,"pert")+
        AtomicID::registerId(-1062,"relative")+
        AtomicID::registerId(-1089,"results")+
        AtomicID::registerId(-1038,"fail")+
        AtomicID::registerId(-1054,"origin")+
        AtomicID::registerId(-1081,"line")+
        AtomicID::registerId(-1115,"message")+
        AtomicID::registerId(-1117,"contagious")+
        AtomicID::registerId(-1156,"normalized")+
        AtomicID::registerId(-1080,"solvable")+
        AtomicID::registerId(-1166,"config")+
        AtomicID::registerId(-1160,"groups")+
        AtomicID::registerId(-1074,"all")+
        AtomicID::registerId(-1106,"by")+
        AtomicID::registerId(-1043,"list")+
        AtomicID::registerId(-1098,"polc")+
        AtomicID::registerId(-1118,"polcs")+
        AtomicID::registerId(-1049,"scale")+
        AtomicID::registerId(-1099,"matrix")+
        AtomicID::registerId(-1150,"dbid")+
        AtomicID::registerId(-1061,"grow")+
        AtomicID::registerId(-1120,"inf")+
        AtomicID::registerId(-1129,"weight")+
        AtomicID::registerId(-1162,"epsilon")+
        AtomicID::registerId(-1041,"usesvd")+
        AtomicID::registerId(-1086,"set")+
        AtomicID::registerId(-1090,"auto")+
        AtomicID::registerId(-1124,"save")+
        AtomicID::registerId(-1146,"clear")+
        AtomicID::registerId(-1042,"invert")+
        AtomicID::registerId(-1126,"metrics")+
        AtomicID::registerId(-1152,"rank")+
        AtomicID::registerId(-1157,"fit")+
        AtomicID::registerId(-1079,"errors")+
        AtomicID::registerId(-1127,"covar")+
        AtomicID::registerId(-1060,"flag")+
        AtomicID::registerId(-1075,"bit")+
        AtomicID::registerId(-1167,"mu")+
        AtomicID::registerId(-1140,"stddev")+
        AtomicID::registerId(-1109,"chi")+
        AtomicID::registerId(-1057,"iter")+
        AtomicID::registerId(-1168,"last")+
        AtomicID::registerId(-1044,"override")+
        AtomicID::registerId(-1019,"l")+
        AtomicID::registerId(-1020,"m")+
        AtomicID::registerId(-1021,"n")+
        AtomicID::registerId(-1032,"x")+
        AtomicID::registerId(-1033,"y")+
        AtomicID::registerId(-1034,"z")+
        AtomicID::registerId(-1045,"lag")+
        AtomicID::registerId(-1161,"meqdomain")+
        TypeInfoReg::addToRegistry(-1161,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1161,__construct_MeqDomain)+
        AtomicID::registerId(-1073,"ndim")+
        AtomicID::registerId(-1116,"axes")+
        AtomicID::registerId(-1171,"meqcells")+
        TypeInfoReg::addToRegistry(-1171,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1171,__construct_MeqCells)+
        AtomicID::registerId(-1108,"meqrequest")+
        TypeInfoReg::addToRegistry(-1108,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1108,__construct_MeqRequest)+
        AtomicID::registerId(-1111,"reexecute")+
        AtomicID::registerId(-1051,"meqvells")+
        TypeInfoReg::addToRegistry(-1051,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1051,__construct_MeqVells)+
        AtomicID::registerId(-1095,"meqvellset")+
        TypeInfoReg::addToRegistry(-1095,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1095,__construct_MeqVellSet)+
        AtomicID::registerId(-1114,"meqresult")+
        TypeInfoReg::addToRegistry(-1114,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1114,__construct_MeqResult)+
        AtomicID::registerId(-1094,"meqfunklet")+
        TypeInfoReg::addToRegistry(-1094,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1094,__construct_MeqFunklet)+
        AtomicID::registerId(-1143,"meqpolc")+
        TypeInfoReg::addToRegistry(-1143,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1143,__construct_MeqPolc)+
        AtomicID::registerId(-1064,"meqnode")+
        TypeInfoReg::addToRegistry(-1064,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1064,__construct_MeqNode)+
        AtomicID::registerId(-1071,"known")+
        AtomicID::registerId(-1088,"active")+
        AtomicID::registerId(-1131,"gen")+
        AtomicID::registerId(-1113,"dep")+
        AtomicID::registerId(-1173,"deps")+
        AtomicID::registerId(-1170,"symdep")+
        AtomicID::registerId(-1056,"symdeps")+
        AtomicID::registerId(-1149,"masks")+
        AtomicID::registerId(-1078,"dataset")+
        AtomicID::registerId(-1037,"resolve")+
        AtomicID::registerId(-1068,"parent")+
        AtomicID::registerId(-1085,"init")+
        AtomicID::registerId(-1084,"link")+
        AtomicID::registerId(-1063,"or")+
        AtomicID::registerId(-1087,"create")+
        AtomicID::registerId(-1050,"control")+
        AtomicID::registerId(-1141,"status")+
        AtomicID::registerId(-1097,"new")+
        AtomicID::registerId(-1053,"breakpoint")+
        AtomicID::registerId(-1102,"single")+
        AtomicID::registerId(-1105,"shot")+
        AtomicID::registerId(-1082,"meqfunction")+
        TypeInfoReg::addToRegistry(-1082,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1082,__construct_MeqFunction)+
        AtomicID::registerId(-1125,"delete")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_Meq = aidRegistry_Meq();

