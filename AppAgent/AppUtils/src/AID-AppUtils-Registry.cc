//
//% $Id$ 
//
//
// Copyright (C) 2002-2007
// The MeqTree Foundation & 
// ASTRON (Netherlands Foundation for Research in Astronomy)
// P.O.Box 2, 7990 AA Dwingeloo, The Netherlands
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>,
// or write to the Free Software Foundation, Inc., 
// 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//

    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../Timba/DMI/aid/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    using namespace DMI;
  
    int aidRegistry_AppUtils ()
    {
      static int res = 

        AtomicID::registerId(-1128,"MS")+
        AtomicID::registerId(-1270,"DDID")+
        AtomicID::registerId(-1151,"VDSID")+
        AtomicID::registerId(-1271,"Selection")+
        AtomicID::registerId(-1232,"Tile")+
        AtomicID::registerId(-1621,"Snippet")+
        AtomicID::registerId(-48,"String")+
        AtomicID::registerId(-1258,"Column")+
        AtomicID::registerId(-1255,"Size")+
        AtomicID::registerId(-1261,"Format")+
        AtomicID::registerId(-1598,"Increment")+
        AtomicID::registerId(-1240,"Vis")+
        AtomicID::registerId(-1036,"Input")+
        AtomicID::registerId(-1241,"Output")+
        AtomicID::registerId(-1277,"Params")+
        AtomicID::registerId(-1106,"Start")+
        AtomicID::registerId(-1276,"End")+
        AtomicID::registerId(-1267,"Write")+
        AtomicID::registerId(-1253,"Flags")+
        AtomicID::registerId(-1134,"Flag")+
        AtomicID::registerId(-1263,"Mask")+
        AtomicID::registerId(-1287,"Segments")+
        AtomicID::registerId(-1126,"Time")+
        AtomicID::registerId(-1103,"Data")+
        AtomicID::registerId(-1265,"Predict")+
        AtomicID::registerId(-1259,"Residuals")+
        AtomicID::registerId(-1122,"Name")+
        AtomicID::registerId(-1269,"Message")+
        AtomicID::registerId(-1085,"Type")+
        AtomicID::registerId(-1205,"Throw")+
        AtomicID::registerId(-1056,"Error")+
        AtomicID::registerId(-1256,"Domain")+
        AtomicID::registerId(-1106,"start")+
        AtomicID::registerId(-48,"string")+
        AtomicID::registerId(-1260,"Original")+
        AtomicID::registerId(-1278,"Shape")+
        AtomicID::registerId(-1254,"Flip")+
        AtomicID::registerId(-1353,"Clear")+
        AtomicID::registerId(-1639,"Extent")+
        AtomicID::registerId(-1132,"Raw")+
        AtomicID::registerId(-1274,"Non")+
        AtomicID::registerId(-1275,"Calibrated")+
        AtomicID::registerId(-1266,"Iteration")+
        AtomicID::registerId(-1553,"Cwd")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_AppUtils = aidRegistry_AppUtils();

