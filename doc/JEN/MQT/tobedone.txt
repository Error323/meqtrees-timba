file: ../doc/JEN/MQT/tobedone.txt
                                      last changed:   d25nov

NB: Just temporary: To be converted into Bugzilla items....!

 - JEN: TDL_Cohset.py: 
   - arrange for proper treatment of XX/YY only (etc)
   - selfcal for WHAT with WSRT XY/YX (14 only)

 - JEN: MG_JEN_Joneset.py:
   - dissimilar station (WHAT) 
 - JEN: TDL_Joneset.py:
   - dissimilar station (WHAT): no impact?
   - more transparent or default... (MXM)...?
   - Use scalar default values (0,1)
   - Allow later specification of shape (also via Joneset?)
   - Allow ND funklets......!

 - MXM/JEN/SBY: Tools for funklet creation.....
 - SBY/OMS: Domain dimensions.....

 - MXM: MeqParm default value discussion
   - separate default values from solve-shape      <----- !!
   - JEN proposal:
     - The scheme should be internally consistent: NO MORE KLUDGES!!
     - allow SCALAR default value only (default = 0.0)
       (only a scalar does not need a validity domain)
     - set the solve-shape when setting the MeqParm solvable
       - done by the Solver, using the rider
       - specify when creating the solver? how?
         - can only specify nr of coeff in each dimension,
           but NOT their values since that would require a validity domain,
           which we do not know. So the initial values should be zero?
           In that case, what about continuity?
       - change (dynamically?) afterwards?
       - NB: Can a MeqParm have funklets with different nrs of dimensions...?  

 - SBY: LSM files for WSRT calibrator fields

 - SvdT: Webpage for script/object inspection
 - SvdT/OMS: Testing (3 levels)

 - JEN/SBY/GVD: WSRT/WHAT reduction

 - OMS/MXM: Sink 'tiling' in freq direction too...
 -      Has repercussions for MeqParm tables...
 - MXM/JEN: MeqParm functional/final description

 - MXM/WNB: Experiment with AIPS++ fitting improvements
 - AGW/JEN: Use LM parameter in 'debug' field of result

 - JEN: TDL_Antenna.py
   - Multiplication of voltage beams (rather than subtract)

 - JEN: TDL_common.py
   - Add a profiler of some kind (Why is Antenna tree definition so slow?)

 - JEN: TDL_result.py (object that dissects a result...)

 - JEN: TDL_display_subtree.py (from MG_JEN_exec.py)
 - JEN: TDL_display_nodescope.py (from MG_JEN_exec.py)
 - JEN: TDL_display_record.py (from MG_JEN_exec.py)

 - JEN: TDL_parameter_set.py (a record of function parameters)



                      ================================
